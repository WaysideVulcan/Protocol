// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module dpss_vck190_pt_v_frmbuf_rd_0_0_Bytes2MultiPixStream_Pipeline_VITIS_LOOP_1155_9 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        img_din,
        img_num_data_valid,
        img_fifo_cap,
        img_full_n,
        img_write,
        trunc_ln2,
        icmp_ln1144,
        cmp392_6,
        cmp392_5,
        cmp392_4,
        icmp25,
        cmp392_2,
        icmp22,
        cmp392,
        cmp292,
        bytePlanes_plane0_dout,
        bytePlanes_plane0_num_data_valid,
        bytePlanes_plane0_fifo_cap,
        bytePlanes_plane0_empty_n,
        bytePlanes_plane0_read,
        sub280,
        cmp283
);

parameter    ap_ST_fsm_pp0_stage0 = 8'd1;
parameter    ap_ST_fsm_pp0_stage1 = 8'd2;
parameter    ap_ST_fsm_pp0_stage2 = 8'd4;
parameter    ap_ST_fsm_pp0_stage3 = 8'd8;
parameter    ap_ST_fsm_pp0_stage4 = 8'd16;
parameter    ap_ST_fsm_pp0_stage5 = 8'd32;
parameter    ap_ST_fsm_pp0_stage6 = 8'd64;
parameter    ap_ST_fsm_pp0_stage7 = 8'd128;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [119:0] img_din;
input  [2:0] img_num_data_valid;
input  [2:0] img_fifo_cap;
input   img_full_n;
output   img_write;
input  [10:0] trunc_ln2;
input  [0:0] icmp_ln1144;
input  [0:0] cmp392_6;
input  [0:0] cmp392_5;
input  [0:0] cmp392_4;
input  [0:0] icmp25;
input  [0:0] cmp392_2;
input  [0:0] icmp22;
input  [0:0] cmp392;
input  [0:0] cmp292;
input  [255:0] bytePlanes_plane0_dout;
input  [9:0] bytePlanes_plane0_num_data_valid;
input  [9:0] bytePlanes_plane0_fifo_cap;
input   bytePlanes_plane0_empty_n;
output   bytePlanes_plane0_read;
input  [10:0] sub280;
input  [0:0] cmp283;

reg ap_idle;
reg[119:0] img_din;
reg img_write;
reg bytePlanes_plane0_read;

(* fsm_encoding = "none" *) reg   [7:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
reg   [0:0] or_ln1186_7_reg_1911;
reg    ap_block_state9_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln1155_fu_367_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_CS_fsm_pp0_stage7;
reg   [0:0] icmp_ln1155_reg_1871;
reg   [0:0] or_ln1186_6_reg_1907;
reg    ap_predicate_op216_write_state8;
reg    ap_block_state8_pp0_stage7_iter0;
reg    ap_block_pp0_stage7_subdone;
reg    bytePlanes_plane0_blk_n;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2;
reg   [0:0] or_ln1162_reg_1875;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_pp0_stage3;
reg   [0:0] or_ln1165_reg_1879;
reg    img_blk_n;
reg   [0:0] or_ln1186_reg_1883;
reg   [0:0] or_ln1186_1_reg_1887;
reg   [0:0] or_ln1186_2_reg_1891;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_pp0_stage4;
reg   [0:0] or_ln1186_3_reg_1895;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_pp0_stage5;
reg   [0:0] or_ln1186_4_reg_1899;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_pp0_stage6;
reg   [0:0] or_ln1186_5_reg_1903;
wire    ap_block_pp0_stage7;
wire    ap_block_pp0_stage0;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] or_ln1162_fu_379_p2;
wire   [0:0] or_ln1165_fu_385_p2;
wire   [0:0] or_ln1186_fu_391_p2;
wire   [0:0] or_ln1186_1_fu_397_p2;
wire   [0:0] or_ln1186_2_fu_403_p2;
wire   [0:0] or_ln1186_3_fu_409_p2;
wire   [0:0] or_ln1186_4_fu_415_p2;
wire   [0:0] or_ln1186_5_fu_421_p2;
wire   [0:0] or_ln1186_6_fu_427_p2;
wire   [0:0] or_ln1186_7_fu_433_p2;
reg   [7:0] tmp_s_reg_1915;
reg    ap_predicate_op96_write_state2;
reg    ap_block_state2_pp0_stage1_iter0;
reg    ap_block_pp0_stage1_11001;
reg   [7:0] tmp_72_reg_1920;
reg   [7:0] tmp_73_reg_1925;
reg   [7:0] tmp_74_reg_1930;
reg   [7:0] tmp_75_reg_1935;
reg   [7:0] tmp_76_reg_1940;
reg   [7:0] tmp_77_reg_1945;
reg   [7:0] tmp_78_reg_1950;
reg   [7:0] tmp_79_reg_1955;
reg   [7:0] tmp_80_reg_1960;
reg   [7:0] tmp_81_reg_1965;
reg   [7:0] tmp_82_reg_1970;
reg   [7:0] tmp_83_reg_1975;
reg   [7:0] tmp_84_reg_1980;
reg   [7:0] tmp_85_reg_1985;
reg   [7:0] tmp_86_reg_1990;
reg   [7:0] tmp_87_reg_1995;
reg   [7:0] tmp_88_reg_2000;
reg   [7:0] tmp_89_reg_2005;
reg   [7:0] tmp_90_reg_2010;
reg    ap_enable_reg_pp0_iter0_reg;
reg   [9:0] x_2_fu_202;
wire   [9:0] x_5_fu_357_p2;
wire    ap_loop_init;
reg   [9:0] ap_sig_allocacmp_x;
reg   [255:0] rd1_fu_206;
reg    ap_predicate_op119_read_state3;
reg    ap_predicate_op126_write_state3;
reg    ap_block_state3_pp0_stage2_iter0;
reg    ap_block_pp0_stage2_11001;
reg   [255:0] rd2_fu_210;
reg    ap_predicate_op129_read_state4;
reg    ap_predicate_op142_write_state4;
reg    ap_block_state4_pp0_stage3_iter0;
reg    ap_block_pp0_stage3_11001;
wire   [119:0] p_s_fu_565_p25;
reg    ap_block_pp0_stage1_01001;
wire   [119:0] p_1_fu_827_p25;
reg    ap_block_pp0_stage2_01001;
wire   [119:0] p_2_fu_911_p25;
reg    ap_block_pp0_stage3_01001;
wire   [119:0] p_3_fu_1080_p25;
reg    ap_predicate_op160_write_state5;
reg    ap_block_state5_pp0_stage4_iter0;
reg    ap_block_pp0_stage4_01001;
wire   [119:0] p_4_fu_1257_p25;
reg    ap_predicate_op178_write_state6;
reg    ap_block_state6_pp0_stage5_iter0;
reg    ap_block_pp0_stage5_01001;
wire   [119:0] p_5_fu_1428_p25;
reg    ap_predicate_op198_write_state7;
reg    ap_block_state7_pp0_stage6_iter0;
reg    ap_block_pp0_stage6_01001;
wire   [119:0] p_6_fu_1605_p25;
reg    ap_block_pp0_stage7_01001;
wire   [119:0] p_0_fu_1788_p25;
reg    ap_block_pp0_stage0_01001;
reg    ap_block_pp0_stage4_11001;
reg    ap_block_pp0_stage5_11001;
reg    ap_block_pp0_stage6_11001;
reg    ap_block_pp0_stage7_11001;
wire   [10:0] zext_ln1155_fu_363_p1;
wire   [0:0] icmp_ln1162_fu_373_p2;
wire   [7:0] tmp_68_fu_555_p4;
wire   [7:0] tmp_67_fu_545_p4;
wire   [7:0] tmp_66_fu_535_p4;
wire   [7:0] tmp_65_fu_525_p4;
wire   [7:0] tmp_56_fu_515_p4;
wire   [7:0] tmp_55_fu_505_p4;
wire   [7:0] tmp_54_fu_495_p4;
wire   [7:0] tmp_53_fu_485_p4;
wire   [7:0] tmp_52_fu_475_p4;
wire   [7:0] tmp_51_fu_465_p4;
wire   [7:0] tmp_50_fu_455_p4;
wire   [7:0] trunc_ln1182_fu_451_p1;
wire   [7:0] tmp_93_fu_901_p4;
wire   [7:0] tmp_92_fu_891_p4;
wire   [7:0] tmp_91_fu_881_p4;
wire   [7:0] trunc_ln1184_fu_877_p1;
wire   [7:0] tmp_105_fu_1070_p4;
wire   [7:0] tmp_104_fu_1060_p4;
wire   [7:0] tmp_103_fu_1050_p4;
wire   [7:0] tmp_102_fu_1040_p4;
wire   [7:0] tmp_101_fu_1030_p4;
wire   [7:0] tmp_100_fu_1020_p4;
wire   [7:0] tmp_99_fu_1010_p4;
wire   [7:0] tmp_98_fu_1000_p4;
wire   [7:0] tmp_97_fu_990_p4;
wire   [7:0] tmp_96_fu_980_p4;
wire   [7:0] tmp_95_fu_970_p4;
wire   [7:0] tmp_94_fu_960_p4;
wire   [7:0] tmp_117_fu_1247_p4;
wire   [7:0] tmp_116_fu_1237_p4;
wire   [7:0] tmp_115_fu_1227_p4;
wire   [7:0] tmp_114_fu_1217_p4;
wire   [7:0] tmp_113_fu_1207_p4;
wire   [7:0] tmp_112_fu_1197_p4;
wire   [7:0] tmp_111_fu_1187_p4;
wire   [7:0] tmp_110_fu_1177_p4;
wire   [7:0] tmp_109_fu_1167_p4;
wire   [7:0] tmp_108_fu_1157_p4;
wire   [7:0] tmp_107_fu_1147_p4;
wire   [7:0] tmp_106_fu_1137_p4;
wire   [7:0] tmp_128_fu_1418_p4;
wire   [7:0] tmp_127_fu_1408_p4;
wire   [7:0] tmp_126_fu_1398_p4;
wire   [7:0] tmp_125_fu_1388_p4;
wire   [7:0] tmp_124_fu_1378_p4;
wire   [7:0] tmp_123_fu_1368_p4;
wire   [7:0] tmp_122_fu_1358_p4;
wire   [7:0] trunc_ln1183_fu_1354_p1;
wire   [7:0] tmp_121_fu_1344_p4;
wire   [7:0] tmp_120_fu_1334_p4;
wire   [7:0] tmp_119_fu_1324_p4;
wire   [7:0] tmp_118_fu_1314_p4;
wire   [7:0] tmp_140_fu_1595_p4;
wire   [7:0] tmp_139_fu_1585_p4;
wire   [7:0] tmp_138_fu_1575_p4;
wire   [7:0] tmp_137_fu_1565_p4;
wire   [7:0] tmp_136_fu_1555_p4;
wire   [7:0] tmp_135_fu_1545_p4;
wire   [7:0] tmp_134_fu_1535_p4;
wire   [7:0] tmp_133_fu_1525_p4;
wire   [7:0] tmp_132_fu_1515_p4;
wire   [7:0] tmp_131_fu_1505_p4;
wire   [7:0] tmp_130_fu_1495_p4;
wire   [7:0] tmp_129_fu_1485_p4;
wire   [7:0] tmp_152_fu_1778_p4;
wire   [7:0] tmp_151_fu_1768_p4;
wire   [7:0] tmp_150_fu_1758_p4;
wire   [7:0] tmp_149_fu_1748_p4;
wire   [7:0] tmp_148_fu_1738_p4;
wire   [7:0] tmp_147_fu_1728_p4;
wire   [7:0] tmp_146_fu_1718_p4;
wire   [7:0] tmp_145_fu_1708_p4;
wire   [7:0] tmp_144_fu_1698_p4;
wire   [7:0] tmp_143_fu_1688_p4;
wire   [7:0] tmp_142_fu_1678_p4;
wire   [7:0] tmp_141_fu_1668_p4;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [7:0] ap_NS_fsm;
reg    ap_idle_pp0_1to1;
reg    ap_block_pp0_stage1_subdone;
reg    ap_block_pp0_stage2_subdone;
reg    ap_block_pp0_stage3_subdone;
reg    ap_block_pp0_stage4_subdone;
reg    ap_block_pp0_stage5_subdone;
reg    ap_block_pp0_stage6_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 8'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 or_ln1186_7_reg_1911 = 1'd0;
#0 icmp_ln1155_reg_1871 = 1'd0;
#0 or_ln1186_6_reg_1907 = 1'd0;
#0 or_ln1162_reg_1875 = 1'd0;
#0 or_ln1165_reg_1879 = 1'd0;
#0 or_ln1186_reg_1883 = 1'd0;
#0 or_ln1186_1_reg_1887 = 1'd0;
#0 or_ln1186_2_reg_1891 = 1'd0;
#0 or_ln1186_3_reg_1895 = 1'd0;
#0 or_ln1186_4_reg_1899 = 1'd0;
#0 or_ln1186_5_reg_1903 = 1'd0;
#0 tmp_s_reg_1915 = 8'd0;
#0 tmp_72_reg_1920 = 8'd0;
#0 tmp_73_reg_1925 = 8'd0;
#0 tmp_74_reg_1930 = 8'd0;
#0 tmp_75_reg_1935 = 8'd0;
#0 tmp_76_reg_1940 = 8'd0;
#0 tmp_77_reg_1945 = 8'd0;
#0 tmp_78_reg_1950 = 8'd0;
#0 tmp_79_reg_1955 = 8'd0;
#0 tmp_80_reg_1960 = 8'd0;
#0 tmp_81_reg_1965 = 8'd0;
#0 tmp_82_reg_1970 = 8'd0;
#0 tmp_83_reg_1975 = 8'd0;
#0 tmp_84_reg_1980 = 8'd0;
#0 tmp_85_reg_1985 = 8'd0;
#0 tmp_86_reg_1990 = 8'd0;
#0 tmp_87_reg_1995 = 8'd0;
#0 tmp_88_reg_2000 = 8'd0;
#0 tmp_89_reg_2005 = 8'd0;
#0 tmp_90_reg_2010 = 8'd0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 x_2_fu_202 = 10'd0;
#0 rd1_fu_206 = 256'd0;
#0 rd2_fu_210 = 256'd0;
#0 ap_done_reg = 1'b0;
end

dpss_vck190_pt_v_frmbuf_rd_0_0_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        icmp_ln1155_reg_1871 <= 1'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            icmp_ln1155_reg_1871 <= icmp_ln1155_fu_367_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        or_ln1162_reg_1875 <= 1'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            or_ln1162_reg_1875 <= or_ln1162_fu_379_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        or_ln1165_reg_1879 <= 1'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            or_ln1165_reg_1879 <= or_ln1165_fu_385_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        or_ln1186_1_reg_1887 <= 1'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            or_ln1186_1_reg_1887 <= or_ln1186_1_fu_397_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        or_ln1186_2_reg_1891 <= 1'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            or_ln1186_2_reg_1891 <= or_ln1186_2_fu_403_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        or_ln1186_3_reg_1895 <= 1'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            or_ln1186_3_reg_1895 <= or_ln1186_3_fu_409_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        or_ln1186_4_reg_1899 <= 1'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            or_ln1186_4_reg_1899 <= or_ln1186_4_fu_415_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        or_ln1186_5_reg_1903 <= 1'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            or_ln1186_5_reg_1903 <= or_ln1186_5_fu_421_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        or_ln1186_6_reg_1907 <= 1'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            or_ln1186_6_reg_1907 <= or_ln1186_6_fu_427_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        or_ln1186_7_reg_1911 <= 1'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            or_ln1186_7_reg_1911 <= or_ln1186_7_fu_433_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        or_ln1186_reg_1883 <= 1'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            or_ln1186_reg_1883 <= or_ln1186_fu_391_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        rd1_fu_206 <= 256'd0;
    end else begin
        if (((icmp_ln1155_reg_1871 == 1'd1) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (or_ln1162_reg_1875 == 1'd1))) begin
            rd1_fu_206 <= bytePlanes_plane0_dout;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        rd2_fu_210 <= 256'd0;
    end else begin
        if (((icmp_ln1155_reg_1871 == 1'd1) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (or_ln1165_reg_1879 == 1'd1))) begin
            rd2_fu_210 <= bytePlanes_plane0_dout;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_72_reg_1920 <= 8'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            tmp_72_reg_1920 <= {{bytePlanes_plane0_dout[111:104]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_73_reg_1925 <= 8'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            tmp_73_reg_1925 <= {{bytePlanes_plane0_dout[119:112]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_74_reg_1930 <= 8'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            tmp_74_reg_1930 <= {{bytePlanes_plane0_dout[127:120]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_75_reg_1935 <= 8'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            tmp_75_reg_1935 <= {{bytePlanes_plane0_dout[135:128]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_76_reg_1940 <= 8'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            tmp_76_reg_1940 <= {{bytePlanes_plane0_dout[143:136]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_77_reg_1945 <= 8'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            tmp_77_reg_1945 <= {{bytePlanes_plane0_dout[151:144]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_78_reg_1950 <= 8'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            tmp_78_reg_1950 <= {{bytePlanes_plane0_dout[159:152]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_79_reg_1955 <= 8'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            tmp_79_reg_1955 <= {{bytePlanes_plane0_dout[167:160]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_80_reg_1960 <= 8'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            tmp_80_reg_1960 <= {{bytePlanes_plane0_dout[175:168]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_81_reg_1965 <= 8'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            tmp_81_reg_1965 <= {{bytePlanes_plane0_dout[183:176]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_82_reg_1970 <= 8'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            tmp_82_reg_1970 <= {{bytePlanes_plane0_dout[191:184]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_83_reg_1975 <= 8'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            tmp_83_reg_1975 <= {{bytePlanes_plane0_dout[199:192]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_84_reg_1980 <= 8'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            tmp_84_reg_1980 <= {{bytePlanes_plane0_dout[207:200]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_85_reg_1985 <= 8'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            tmp_85_reg_1985 <= {{bytePlanes_plane0_dout[215:208]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_86_reg_1990 <= 8'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            tmp_86_reg_1990 <= {{bytePlanes_plane0_dout[223:216]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_87_reg_1995 <= 8'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            tmp_87_reg_1995 <= {{bytePlanes_plane0_dout[231:224]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_88_reg_2000 <= 8'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            tmp_88_reg_2000 <= {{bytePlanes_plane0_dout[239:232]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_89_reg_2005 <= 8'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            tmp_89_reg_2005 <= {{bytePlanes_plane0_dout[247:240]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_90_reg_2010 <= 8'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            tmp_90_reg_2010 <= {{bytePlanes_plane0_dout[255:248]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_s_reg_1915 <= 8'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            tmp_s_reg_1915 <= {{bytePlanes_plane0_dout[103:96]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        x_2_fu_202 <= 10'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            if (((icmp_ln1155_fu_367_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                x_2_fu_202 <= x_5_fu_357_p2;
            end else if ((ap_loop_init == 1'b1)) begin
                x_2_fu_202 <= 10'd0;
            end
        end
    end
end

always @ (*) begin
    if (((icmp_ln1155_fu_367_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage7_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_x = 10'd0;
    end else begin
        ap_sig_allocacmp_x = x_2_fu_202;
    end
end

always @ (*) begin
    if ((((icmp_ln1155_reg_1871 == 1'd1) & (1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (or_ln1165_reg_1879 == 1'd1)) | ((icmp_ln1155_reg_1871 == 1'd1) & (1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (or_ln1162_reg_1875 == 1'd1)) | ((icmp_ln1155_reg_1871 == 1'd1) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        bytePlanes_plane0_blk_n = bytePlanes_plane0_empty_n;
    end else begin
        bytePlanes_plane0_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((icmp_ln1155_reg_1871 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_predicate_op129_read_state4 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_predicate_op119_read_state3 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        bytePlanes_plane0_read = 1'b1;
    end else begin
        bytePlanes_plane0_read = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_predicate_op216_write_state8 == 1'b1) & (1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((icmp_ln1155_reg_1871 == 1'd1) & (1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (or_ln1186_5_reg_1903 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((icmp_ln1155_reg_1871 == 1'd1) & (1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (or_ln1186_4_reg_1899 == 1'd1)) | ((icmp_ln1155_reg_1871 == 1'd1) & (1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (or_ln1186_3_reg_1895 == 1'd1)) | ((icmp_ln1155_reg_1871 == 1'd1) & (1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (or_ln1186_2_reg_1891 == 1'd1)) | ((icmp_ln1155_reg_1871 == 1'd1) & (1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (or_ln1186_1_reg_1887 == 1'd1)) | ((icmp_ln1155_reg_1871 == 1'd1) 
    & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (or_ln1186_reg_1883 == 1'd1)) | ((1'b0 == ap_block_pp0_stage0) & (or_ln1186_7_reg_1911 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        img_blk_n = img_full_n;
    end else begin
        img_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_01001) & (or_ln1186_7_reg_1911 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        img_din = p_0_fu_1788_p25;
    end else if (((ap_predicate_op216_write_state8 == 1'b1) & (1'b0 == ap_block_pp0_stage7_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        img_din = p_6_fu_1605_p25;
    end else if (((1'b0 == ap_block_pp0_stage6_01001) & (ap_predicate_op198_write_state7 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        img_din = p_5_fu_1428_p25;
    end else if (((1'b0 == ap_block_pp0_stage5_01001) & (ap_predicate_op178_write_state6 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        img_din = p_4_fu_1257_p25;
    end else if (((1'b0 == ap_block_pp0_stage4_01001) & (ap_predicate_op160_write_state5 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        img_din = p_3_fu_1080_p25;
    end else if (((1'b0 == ap_block_pp0_stage3_01001) & (ap_predicate_op142_write_state4 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        img_din = p_2_fu_911_p25;
    end else if (((1'b0 == ap_block_pp0_stage2_01001) & (ap_predicate_op126_write_state3 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        img_din = p_1_fu_827_p25;
    end else if (((1'b0 == ap_block_pp0_stage1_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op96_write_state2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        img_din = p_s_fu_565_p25;
    end else begin
        img_din = 'bx;
    end
end

always @ (*) begin
    if ((((ap_predicate_op216_write_state8 == 1'b1) & (1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_predicate_op198_write_state7 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_predicate_op178_write_state6 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_predicate_op160_write_state5 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_predicate_op142_write_state4 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_predicate_op126_write_state3 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op96_write_state2 
    == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (or_ln1186_7_reg_1911 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        img_write = 1'b1;
    end else begin
        img_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to1 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd7];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state9_pp0_stage0_iter1));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state9_pp0_stage0_iter1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state9_pp0_stage0_iter1));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_01001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state2_pp0_stage1_iter0));
end

always @ (*) begin
    ap_block_pp0_stage1_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state2_pp0_stage1_iter0));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state2_pp0_stage1_iter0));
end

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_01001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state3_pp0_stage2_iter0));
end

always @ (*) begin
    ap_block_pp0_stage2_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state3_pp0_stage2_iter0));
end

always @ (*) begin
    ap_block_pp0_stage2_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state3_pp0_stage2_iter0));
end

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage3_01001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state4_pp0_stage3_iter0));
end

always @ (*) begin
    ap_block_pp0_stage3_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state4_pp0_stage3_iter0));
end

always @ (*) begin
    ap_block_pp0_stage3_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state4_pp0_stage3_iter0));
end

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage4_01001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state5_pp0_stage4_iter0));
end

always @ (*) begin
    ap_block_pp0_stage4_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state5_pp0_stage4_iter0));
end

always @ (*) begin
    ap_block_pp0_stage4_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state5_pp0_stage4_iter0));
end

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage5_01001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state6_pp0_stage5_iter0));
end

always @ (*) begin
    ap_block_pp0_stage5_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state6_pp0_stage5_iter0));
end

always @ (*) begin
    ap_block_pp0_stage5_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state6_pp0_stage5_iter0));
end

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage6_01001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state7_pp0_stage6_iter0));
end

always @ (*) begin
    ap_block_pp0_stage6_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state7_pp0_stage6_iter0));
end

always @ (*) begin
    ap_block_pp0_stage6_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state7_pp0_stage6_iter0));
end

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage7_01001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state8_pp0_stage7_iter0));
end

always @ (*) begin
    ap_block_pp0_stage7_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state8_pp0_stage7_iter0));
end

always @ (*) begin
    ap_block_pp0_stage7_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state8_pp0_stage7_iter0));
end

always @ (*) begin
    ap_block_state2_pp0_stage1_iter0 = (((icmp_ln1155_reg_1871 == 1'd1) & (bytePlanes_plane0_empty_n == 1'b0)) | ((img_full_n == 1'b0) & (ap_predicate_op96_write_state2 == 1'b1)));
end

always @ (*) begin
    ap_block_state3_pp0_stage2_iter0 = (((img_full_n == 1'b0) & (ap_predicate_op126_write_state3 == 1'b1)) | ((ap_predicate_op119_read_state3 == 1'b1) & (bytePlanes_plane0_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_state4_pp0_stage3_iter0 = (((img_full_n == 1'b0) & (ap_predicate_op142_write_state4 == 1'b1)) | ((ap_predicate_op129_read_state4 == 1'b1) & (bytePlanes_plane0_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_state5_pp0_stage4_iter0 = ((img_full_n == 1'b0) & (ap_predicate_op160_write_state5 == 1'b1));
end

always @ (*) begin
    ap_block_state6_pp0_stage5_iter0 = ((ap_predicate_op178_write_state6 == 1'b1) & (img_full_n == 1'b0));
end

always @ (*) begin
    ap_block_state7_pp0_stage6_iter0 = ((ap_predicate_op198_write_state7 == 1'b1) & (img_full_n == 1'b0));
end

always @ (*) begin
    ap_block_state8_pp0_stage7_iter0 = ((ap_predicate_op216_write_state8 == 1'b1) & (img_full_n == 1'b0));
end

always @ (*) begin
    ap_block_state9_pp0_stage0_iter1 = ((or_ln1186_7_reg_1911 == 1'd1) & (img_full_n == 1'b0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

always @ (*) begin
    ap_predicate_op119_read_state3 = ((icmp_ln1155_reg_1871 == 1'd1) & (or_ln1162_reg_1875 == 1'd1));
end

always @ (*) begin
    ap_predicate_op126_write_state3 = ((icmp_ln1155_reg_1871 == 1'd1) & (or_ln1186_1_reg_1887 == 1'd1));
end

always @ (*) begin
    ap_predicate_op129_read_state4 = ((icmp_ln1155_reg_1871 == 1'd1) & (or_ln1165_reg_1879 == 1'd1));
end

always @ (*) begin
    ap_predicate_op142_write_state4 = ((icmp_ln1155_reg_1871 == 1'd1) & (or_ln1186_2_reg_1891 == 1'd1));
end

always @ (*) begin
    ap_predicate_op160_write_state5 = ((icmp_ln1155_reg_1871 == 1'd1) & (or_ln1186_3_reg_1895 == 1'd1));
end

always @ (*) begin
    ap_predicate_op178_write_state6 = ((icmp_ln1155_reg_1871 == 1'd1) & (or_ln1186_4_reg_1899 == 1'd1));
end

always @ (*) begin
    ap_predicate_op198_write_state7 = ((icmp_ln1155_reg_1871 == 1'd1) & (or_ln1186_5_reg_1903 == 1'd1));
end

always @ (*) begin
    ap_predicate_op216_write_state8 = ((or_ln1186_6_reg_1907 == 1'd1) & (icmp_ln1155_reg_1871 == 1'd1));
end

always @ (*) begin
    ap_predicate_op96_write_state2 = ((icmp_ln1155_reg_1871 == 1'd1) & (or_ln1186_reg_1883 == 1'd1));
end

assign icmp_ln1155_fu_367_p2 = (($signed(zext_ln1155_fu_363_p1) < $signed(trunc_ln2)) ? 1'b1 : 1'b0);

assign icmp_ln1162_fu_373_p2 = (($signed(zext_ln1155_fu_363_p1) < $signed(sub280)) ? 1'b1 : 1'b0);

assign or_ln1162_fu_379_p2 = (icmp_ln1162_fu_373_p2 | cmp283);

assign or_ln1165_fu_385_p2 = (icmp_ln1162_fu_373_p2 | cmp292);

assign or_ln1186_1_fu_397_p2 = (icmp_ln1162_fu_373_p2 | icmp22);

assign or_ln1186_2_fu_403_p2 = (icmp_ln1162_fu_373_p2 | cmp392_2);

assign or_ln1186_3_fu_409_p2 = (icmp_ln1162_fu_373_p2 | icmp25);

assign or_ln1186_4_fu_415_p2 = (icmp_ln1162_fu_373_p2 | cmp392_4);

assign or_ln1186_5_fu_421_p2 = (icmp_ln1162_fu_373_p2 | cmp392_5);

assign or_ln1186_6_fu_427_p2 = (icmp_ln1162_fu_373_p2 | cmp392_6);

assign or_ln1186_7_fu_433_p2 = (icmp_ln1162_fu_373_p2 | icmp_ln1144);

assign or_ln1186_fu_391_p2 = (icmp_ln1162_fu_373_p2 | cmp392);

assign p_0_fu_1788_p25 = {{{{{{{{{{{{{{{{{{{{{{{{tmp_152_fu_1778_p4}, {2'd0}}, {tmp_151_fu_1768_p4}}, {2'd0}}, {tmp_150_fu_1758_p4}}, {2'd0}}, {tmp_149_fu_1748_p4}}, {2'd0}}, {tmp_148_fu_1738_p4}}, {2'd0}}, {tmp_147_fu_1728_p4}}, {2'd0}}, {tmp_146_fu_1718_p4}}, {2'd0}}, {tmp_145_fu_1708_p4}}, {2'd0}}, {tmp_144_fu_1698_p4}}, {2'd0}}, {tmp_143_fu_1688_p4}}, {2'd0}}, {tmp_142_fu_1678_p4}}, {2'd0}}, {tmp_141_fu_1668_p4}}, {2'd0}};

assign p_1_fu_827_p25 = {{{{{{{{{{{{{{{{{{{{{{{{tmp_82_reg_1970}, {2'd0}}, {tmp_81_reg_1965}}, {2'd0}}, {tmp_80_reg_1960}}, {2'd0}}, {tmp_79_reg_1955}}, {2'd0}}, {tmp_78_reg_1950}}, {2'd0}}, {tmp_77_reg_1945}}, {2'd0}}, {tmp_76_reg_1940}}, {2'd0}}, {tmp_75_reg_1935}}, {2'd0}}, {tmp_74_reg_1930}}, {2'd0}}, {tmp_73_reg_1925}}, {2'd0}}, {tmp_72_reg_1920}}, {2'd0}}, {tmp_s_reg_1915}}, {2'd0}};

assign p_2_fu_911_p25 = {{{{{{{{{{{{{{{{{{{{{{{{tmp_93_fu_901_p4}, {2'd0}}, {tmp_92_fu_891_p4}}, {2'd0}}, {tmp_91_fu_881_p4}}, {2'd0}}, {trunc_ln1184_fu_877_p1}}, {2'd0}}, {tmp_90_reg_2010}}, {2'd0}}, {tmp_89_reg_2005}}, {2'd0}}, {tmp_88_reg_2000}}, {2'd0}}, {tmp_87_reg_1995}}, {2'd0}}, {tmp_86_reg_1990}}, {2'd0}}, {tmp_85_reg_1985}}, {2'd0}}, {tmp_84_reg_1980}}, {2'd0}}, {tmp_83_reg_1975}}, {2'd0}};

assign p_3_fu_1080_p25 = {{{{{{{{{{{{{{{{{{{{{{{{tmp_105_fu_1070_p4}, {2'd0}}, {tmp_104_fu_1060_p4}}, {2'd0}}, {tmp_103_fu_1050_p4}}, {2'd0}}, {tmp_102_fu_1040_p4}}, {2'd0}}, {tmp_101_fu_1030_p4}}, {2'd0}}, {tmp_100_fu_1020_p4}}, {2'd0}}, {tmp_99_fu_1010_p4}}, {2'd0}}, {tmp_98_fu_1000_p4}}, {2'd0}}, {tmp_97_fu_990_p4}}, {2'd0}}, {tmp_96_fu_980_p4}}, {2'd0}}, {tmp_95_fu_970_p4}}, {2'd0}}, {tmp_94_fu_960_p4}}, {2'd0}};

assign p_4_fu_1257_p25 = {{{{{{{{{{{{{{{{{{{{{{{{tmp_117_fu_1247_p4}, {2'd0}}, {tmp_116_fu_1237_p4}}, {2'd0}}, {tmp_115_fu_1227_p4}}, {2'd0}}, {tmp_114_fu_1217_p4}}, {2'd0}}, {tmp_113_fu_1207_p4}}, {2'd0}}, {tmp_112_fu_1197_p4}}, {2'd0}}, {tmp_111_fu_1187_p4}}, {2'd0}}, {tmp_110_fu_1177_p4}}, {2'd0}}, {tmp_109_fu_1167_p4}}, {2'd0}}, {tmp_108_fu_1157_p4}}, {2'd0}}, {tmp_107_fu_1147_p4}}, {2'd0}}, {tmp_106_fu_1137_p4}}, {2'd0}};

assign p_5_fu_1428_p25 = {{{{{{{{{{{{{{{{{{{{{{{{tmp_128_fu_1418_p4}, {2'd0}}, {tmp_127_fu_1408_p4}}, {2'd0}}, {tmp_126_fu_1398_p4}}, {2'd0}}, {tmp_125_fu_1388_p4}}, {2'd0}}, {tmp_124_fu_1378_p4}}, {2'd0}}, {tmp_123_fu_1368_p4}}, {2'd0}}, {tmp_122_fu_1358_p4}}, {2'd0}}, {trunc_ln1183_fu_1354_p1}}, {2'd0}}, {tmp_121_fu_1344_p4}}, {2'd0}}, {tmp_120_fu_1334_p4}}, {2'd0}}, {tmp_119_fu_1324_p4}}, {2'd0}}, {tmp_118_fu_1314_p4}}, {2'd0}};

assign p_6_fu_1605_p25 = {{{{{{{{{{{{{{{{{{{{{{{{tmp_140_fu_1595_p4}, {2'd0}}, {tmp_139_fu_1585_p4}}, {2'd0}}, {tmp_138_fu_1575_p4}}, {2'd0}}, {tmp_137_fu_1565_p4}}, {2'd0}}, {tmp_136_fu_1555_p4}}, {2'd0}}, {tmp_135_fu_1545_p4}}, {2'd0}}, {tmp_134_fu_1535_p4}}, {2'd0}}, {tmp_133_fu_1525_p4}}, {2'd0}}, {tmp_132_fu_1515_p4}}, {2'd0}}, {tmp_131_fu_1505_p4}}, {2'd0}}, {tmp_130_fu_1495_p4}}, {2'd0}}, {tmp_129_fu_1485_p4}}, {2'd0}};

assign p_s_fu_565_p25 = {{{{{{{{{{{{{{{{{{{{{{{{tmp_68_fu_555_p4}, {2'd0}}, {tmp_67_fu_545_p4}}, {2'd0}}, {tmp_66_fu_535_p4}}, {2'd0}}, {tmp_65_fu_525_p4}}, {2'd0}}, {tmp_56_fu_515_p4}}, {2'd0}}, {tmp_55_fu_505_p4}}, {2'd0}}, {tmp_54_fu_495_p4}}, {2'd0}}, {tmp_53_fu_485_p4}}, {2'd0}}, {tmp_52_fu_475_p4}}, {2'd0}}, {tmp_51_fu_465_p4}}, {2'd0}}, {tmp_50_fu_455_p4}}, {2'd0}}, {trunc_ln1182_fu_451_p1}}, {2'd0}};

assign tmp_100_fu_1020_p4 = {{rd1_fu_206[87:80]}};

assign tmp_101_fu_1030_p4 = {{rd1_fu_206[95:88]}};

assign tmp_102_fu_1040_p4 = {{rd1_fu_206[103:96]}};

assign tmp_103_fu_1050_p4 = {{rd1_fu_206[111:104]}};

assign tmp_104_fu_1060_p4 = {{rd1_fu_206[119:112]}};

assign tmp_105_fu_1070_p4 = {{rd1_fu_206[127:120]}};

assign tmp_106_fu_1137_p4 = {{rd1_fu_206[135:128]}};

assign tmp_107_fu_1147_p4 = {{rd1_fu_206[143:136]}};

assign tmp_108_fu_1157_p4 = {{rd1_fu_206[151:144]}};

assign tmp_109_fu_1167_p4 = {{rd1_fu_206[159:152]}};

assign tmp_110_fu_1177_p4 = {{rd1_fu_206[167:160]}};

assign tmp_111_fu_1187_p4 = {{rd1_fu_206[175:168]}};

assign tmp_112_fu_1197_p4 = {{rd1_fu_206[183:176]}};

assign tmp_113_fu_1207_p4 = {{rd1_fu_206[191:184]}};

assign tmp_114_fu_1217_p4 = {{rd1_fu_206[199:192]}};

assign tmp_115_fu_1227_p4 = {{rd1_fu_206[207:200]}};

assign tmp_116_fu_1237_p4 = {{rd1_fu_206[215:208]}};

assign tmp_117_fu_1247_p4 = {{rd1_fu_206[223:216]}};

assign tmp_118_fu_1314_p4 = {{rd1_fu_206[231:224]}};

assign tmp_119_fu_1324_p4 = {{rd1_fu_206[239:232]}};

assign tmp_120_fu_1334_p4 = {{rd1_fu_206[247:240]}};

assign tmp_121_fu_1344_p4 = {{rd1_fu_206[255:248]}};

assign tmp_122_fu_1358_p4 = {{rd2_fu_210[15:8]}};

assign tmp_123_fu_1368_p4 = {{rd2_fu_210[23:16]}};

assign tmp_124_fu_1378_p4 = {{rd2_fu_210[31:24]}};

assign tmp_125_fu_1388_p4 = {{rd2_fu_210[39:32]}};

assign tmp_126_fu_1398_p4 = {{rd2_fu_210[47:40]}};

assign tmp_127_fu_1408_p4 = {{rd2_fu_210[55:48]}};

assign tmp_128_fu_1418_p4 = {{rd2_fu_210[63:56]}};

assign tmp_129_fu_1485_p4 = {{rd2_fu_210[71:64]}};

assign tmp_130_fu_1495_p4 = {{rd2_fu_210[79:72]}};

assign tmp_131_fu_1505_p4 = {{rd2_fu_210[87:80]}};

assign tmp_132_fu_1515_p4 = {{rd2_fu_210[95:88]}};

assign tmp_133_fu_1525_p4 = {{rd2_fu_210[103:96]}};

assign tmp_134_fu_1535_p4 = {{rd2_fu_210[111:104]}};

assign tmp_135_fu_1545_p4 = {{rd2_fu_210[119:112]}};

assign tmp_136_fu_1555_p4 = {{rd2_fu_210[127:120]}};

assign tmp_137_fu_1565_p4 = {{rd2_fu_210[135:128]}};

assign tmp_138_fu_1575_p4 = {{rd2_fu_210[143:136]}};

assign tmp_139_fu_1585_p4 = {{rd2_fu_210[151:144]}};

assign tmp_140_fu_1595_p4 = {{rd2_fu_210[159:152]}};

assign tmp_141_fu_1668_p4 = {{rd2_fu_210[167:160]}};

assign tmp_142_fu_1678_p4 = {{rd2_fu_210[175:168]}};

assign tmp_143_fu_1688_p4 = {{rd2_fu_210[183:176]}};

assign tmp_144_fu_1698_p4 = {{rd2_fu_210[191:184]}};

assign tmp_145_fu_1708_p4 = {{rd2_fu_210[199:192]}};

assign tmp_146_fu_1718_p4 = {{rd2_fu_210[207:200]}};

assign tmp_147_fu_1728_p4 = {{rd2_fu_210[215:208]}};

assign tmp_148_fu_1738_p4 = {{rd2_fu_210[223:216]}};

assign tmp_149_fu_1748_p4 = {{rd2_fu_210[231:224]}};

assign tmp_150_fu_1758_p4 = {{rd2_fu_210[239:232]}};

assign tmp_151_fu_1768_p4 = {{rd2_fu_210[247:240]}};

assign tmp_152_fu_1778_p4 = {{rd2_fu_210[255:248]}};

assign tmp_50_fu_455_p4 = {{bytePlanes_plane0_dout[15:8]}};

assign tmp_51_fu_465_p4 = {{bytePlanes_plane0_dout[23:16]}};

assign tmp_52_fu_475_p4 = {{bytePlanes_plane0_dout[31:24]}};

assign tmp_53_fu_485_p4 = {{bytePlanes_plane0_dout[39:32]}};

assign tmp_54_fu_495_p4 = {{bytePlanes_plane0_dout[47:40]}};

assign tmp_55_fu_505_p4 = {{bytePlanes_plane0_dout[55:48]}};

assign tmp_56_fu_515_p4 = {{bytePlanes_plane0_dout[63:56]}};

assign tmp_65_fu_525_p4 = {{bytePlanes_plane0_dout[71:64]}};

assign tmp_66_fu_535_p4 = {{bytePlanes_plane0_dout[79:72]}};

assign tmp_67_fu_545_p4 = {{bytePlanes_plane0_dout[87:80]}};

assign tmp_68_fu_555_p4 = {{bytePlanes_plane0_dout[95:88]}};

assign tmp_91_fu_881_p4 = {{rd1_fu_206[15:8]}};

assign tmp_92_fu_891_p4 = {{rd1_fu_206[23:16]}};

assign tmp_93_fu_901_p4 = {{rd1_fu_206[31:24]}};

assign tmp_94_fu_960_p4 = {{rd1_fu_206[39:32]}};

assign tmp_95_fu_970_p4 = {{rd1_fu_206[47:40]}};

assign tmp_96_fu_980_p4 = {{rd1_fu_206[55:48]}};

assign tmp_97_fu_990_p4 = {{rd1_fu_206[63:56]}};

assign tmp_98_fu_1000_p4 = {{rd1_fu_206[71:64]}};

assign tmp_99_fu_1010_p4 = {{rd1_fu_206[79:72]}};

assign trunc_ln1182_fu_451_p1 = bytePlanes_plane0_dout[7:0];

assign trunc_ln1183_fu_1354_p1 = rd2_fu_210[7:0];

assign trunc_ln1184_fu_877_p1 = rd1_fu_206[7:0];

assign x_5_fu_357_p2 = (ap_sig_allocacmp_x + 10'd1);

assign zext_ln1155_fu_363_p1 = ap_sig_allocacmp_x;

endmodule //dpss_vck190_pt_v_frmbuf_rd_0_0_Bytes2MultiPixStream_Pipeline_VITIS_LOOP_1155_9
