// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module dpss_vck190_pt_v_frmbuf_rd_0_0_Bytes2MultiPixStream_Pipeline_VITIS_LOOP_914_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        img_din,
        img_num_data_valid,
        img_fifo_cap,
        img_full_n,
        img_write,
        trunc_ln901_1,
        cmp117_5,
        cmp117_4,
        empty_73,
        cmp117_2,
        icmp,
        sub113_cast,
        cmp117,
        bytePlanes_plane0_dout,
        bytePlanes_plane0_num_data_valid,
        bytePlanes_plane0_fifo_cap,
        bytePlanes_plane0_empty_n,
        bytePlanes_plane0_read,
        VideoFormat_val,
        empty,
        bytePlanes_plane1_dout,
        bytePlanes_plane1_num_data_valid,
        bytePlanes_plane1_fifo_cap,
        bytePlanes_plane1_empty_n,
        bytePlanes_plane1_read
);

parameter    ap_ST_fsm_pp0_stage0 = 6'd1;
parameter    ap_ST_fsm_pp0_stage1 = 6'd2;
parameter    ap_ST_fsm_pp0_stage2 = 6'd4;
parameter    ap_ST_fsm_pp0_stage3 = 6'd8;
parameter    ap_ST_fsm_pp0_stage4 = 6'd16;
parameter    ap_ST_fsm_pp0_stage5 = 6'd32;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [119:0] img_din;
input  [2:0] img_num_data_valid;
input  [2:0] img_fifo_cap;
input   img_full_n;
output   img_write;
input  [11:0] trunc_ln901_1;
input  [0:0] cmp117_5;
input  [0:0] cmp117_4;
input  [0:0] empty_73;
input  [0:0] cmp117_2;
input  [0:0] icmp;
input  [11:0] sub113_cast;
input  [0:0] cmp117;
input  [255:0] bytePlanes_plane0_dout;
input  [9:0] bytePlanes_plane0_num_data_valid;
input  [9:0] bytePlanes_plane0_fifo_cap;
input   bytePlanes_plane0_empty_n;
output   bytePlanes_plane0_read;
input  [5:0] VideoFormat_val;
input  [0:0] empty;
input  [255:0] bytePlanes_plane1_dout;
input  [9:0] bytePlanes_plane1_num_data_valid;
input  [9:0] bytePlanes_plane1_fifo_cap;
input   bytePlanes_plane1_empty_n;
output   bytePlanes_plane1_read;

reg ap_idle;
reg[119:0] img_din;
reg img_write;
reg bytePlanes_plane0_read;
reg bytePlanes_plane1_read;

(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
reg   [0:0] or_ln948_5_reg_1249;
reg    ap_block_state7_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln914_fu_402_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_CS_fsm_pp0_stage5;
reg   [0:0] icmp_ln914_reg_1221;
reg   [0:0] or_ln948_4_reg_1245;
reg    ap_predicate_op157_write_state6;
reg    ap_block_state6_pp0_stage5_iter0;
reg    ap_block_pp0_stage5_subdone;
reg    bytePlanes_plane0_blk_n;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1;
reg    bytePlanes_plane1_blk_n;
reg   [0:0] and_ln928_reg_1225;
reg    img_blk_n;
reg   [0:0] or_ln948_reg_1229;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2;
reg   [0:0] or_ln948_1_reg_1233;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_pp0_stage3;
reg   [0:0] or_ln948_2_reg_1237;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_pp0_stage4;
reg   [0:0] or_ln948_3_reg_1241;
wire    ap_block_pp0_stage5;
wire    ap_block_pp0_stage0;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] and_ln928_fu_418_p2;
wire   [0:0] or_ln948_fu_430_p2;
wire   [0:0] or_ln948_1_fu_436_p2;
wire   [0:0] or_ln948_2_fu_442_p2;
wire   [0:0] or_ln948_3_fu_448_p2;
wire   [0:0] or_ln948_4_fu_454_p2;
wire   [0:0] or_ln948_5_fu_460_p2;
reg   [9:0] tmp_27_reg_1253;
reg    ap_predicate_op74_read_state2;
reg    ap_predicate_op97_write_state2;
reg    ap_block_state2_pp0_stage1_iter0;
reg    ap_block_pp0_stage1_11001;
reg   [9:0] tmp_28_reg_1258;
reg   [9:0] tmp_29_reg_1263;
reg   [9:0] tmp_30_reg_1268;
reg   [9:0] tmp_31_reg_1273;
reg   [9:0] tmp_32_reg_1278;
reg   [9:0] tmp_33_reg_1283;
reg   [9:0] tmp_34_reg_1288;
reg   [9:0] tmp_36_reg_1293;
reg   [9:0] tmp_37_reg_1298;
reg   [9:0] tmp_38_reg_1303;
reg   [9:0] tmp_39_reg_1308;
reg   [9:0] tmp_40_reg_1313;
reg   [9:0] tmp_41_reg_1318;
reg   [9:0] tmp_42_reg_1323;
reg   [9:0] tmp_43_reg_1328;
reg   [9:0] tmp_45_reg_1333;
reg   [9:0] tmp_46_reg_1338;
reg   [9:0] tmp_47_reg_1343;
reg   [9:0] tmp_48_reg_1348;
reg   [9:0] tmp_49_reg_1353;
reg   [9:0] tmp_50_reg_1358;
reg   [9:0] tmp_51_reg_1363;
reg   [9:0] tmp_52_reg_1368;
reg   [9:0] tmp_54_reg_1373;
reg   [9:0] tmp_55_reg_1378;
reg   [9:0] tmp_56_reg_1383;
reg   [9:0] tmp_57_reg_1388;
reg   [9:0] tmp_58_reg_1393;
reg   [9:0] tmp_59_reg_1398;
reg   [9:0] tmp_60_reg_1403;
reg   [9:0] tmp_61_reg_1408;
reg   [9:0] tmp_63_reg_1413;
reg   [9:0] tmp_64_reg_1418;
reg   [9:0] tmp_65_reg_1423;
reg   [9:0] tmp_66_reg_1428;
reg   [9:0] tmp_67_reg_1433;
reg   [9:0] tmp_68_reg_1438;
reg   [9:0] tmp_69_reg_1443;
reg   [9:0] tmp_70_reg_1448;
reg    ap_enable_reg_pp0_iter0_reg;
reg   [239:0] ap_phi_mux_rdUv_phi_fu_347_p4;
wire   [239:0] tmp_fu_552_p9;
wire   [239:0] ap_phi_reg_pp0_iter0_rdUv_reg_343;
reg   [11:0] x_fu_260;
wire   [11:0] x_2_fu_396_p2;
wire    ap_loop_init;
reg   [11:0] ap_sig_allocacmp_x_1;
wire   [119:0] zext_ln949_fu_667_p1;
reg    ap_block_pp0_stage1_01001;
wire   [119:0] zext_ln949_1_fu_1094_p1;
reg    ap_predicate_op142_write_state3;
reg    ap_block_state3_pp0_stage2_iter0;
reg    ap_block_pp0_stage2_01001;
wire   [119:0] zext_ln949_2_fu_1121_p1;
reg    ap_predicate_op147_write_state4;
reg    ap_block_state4_pp0_stage3_iter0;
reg    ap_block_pp0_stage3_01001;
wire   [119:0] zext_ln949_3_fu_1148_p1;
reg    ap_predicate_op152_write_state5;
reg    ap_block_state5_pp0_stage4_iter0;
reg    ap_block_pp0_stage4_01001;
wire   [119:0] zext_ln949_4_fu_1175_p1;
reg    ap_block_pp0_stage5_01001;
wire   [119:0] zext_ln949_5_fu_1202_p1;
reg    ap_block_pp0_stage0_01001;
reg    ap_block_pp0_stage2_11001;
reg    ap_block_pp0_stage3_11001;
reg    ap_block_pp0_stage4_11001;
reg    ap_block_pp0_stage5_11001;
wire   [0:0] icmp_ln928_fu_412_p2;
wire   [12:0] zext_ln914_fu_408_p1;
wire  signed [12:0] sub113_cast_cast_fu_374_p1;
wire   [0:0] cmp114_fu_424_p2;
wire   [29:0] tmp_18_fu_542_p4;
wire   [29:0] tmp_17_fu_532_p4;
wire   [29:0] tmp_16_fu_522_p4;
wire   [29:0] tmp_15_fu_512_p4;
wire   [29:0] tmp_14_fu_502_p4;
wire   [29:0] tmp_13_fu_492_p4;
wire   [29:0] tmp_s_fu_482_p4;
wire   [29:0] trunc_ln935_fu_478_p1;
wire   [9:0] tmp_25_fu_631_p4;
wire   [9:0] tmp_22_fu_621_p4;
wire   [9:0] tmp_21_fu_611_p4;
wire   [9:0] tmp_20_fu_601_p4;
wire   [9:0] tmp_19_fu_591_p4;
wire   [9:0] tmp_12_fu_581_p4;
wire   [9:0] trunc_ln949_fu_577_p1;
wire   [9:0] trunc_ln944_fu_573_p1;
wire   [109:0] tmp_26_fu_641_p12;
wire   [109:0] tmp_35_fu_1076_p12;
wire   [109:0] tmp_44_fu_1103_p12;
wire   [109:0] tmp_53_fu_1130_p12;
wire   [109:0] tmp_62_fu_1157_p12;
wire   [109:0] tmp_71_fu_1184_p12;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [5:0] ap_NS_fsm;
reg    ap_idle_pp0_1to1;
reg    ap_block_pp0_stage1_subdone;
reg    ap_block_pp0_stage2_subdone;
reg    ap_block_pp0_stage3_subdone;
reg    ap_block_pp0_stage4_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 6'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 or_ln948_5_reg_1249 = 1'd0;
#0 icmp_ln914_reg_1221 = 1'd0;
#0 or_ln948_4_reg_1245 = 1'd0;
#0 and_ln928_reg_1225 = 1'd0;
#0 or_ln948_reg_1229 = 1'd0;
#0 or_ln948_1_reg_1233 = 1'd0;
#0 or_ln948_2_reg_1237 = 1'd0;
#0 or_ln948_3_reg_1241 = 1'd0;
#0 tmp_27_reg_1253 = 10'd0;
#0 tmp_28_reg_1258 = 10'd0;
#0 tmp_29_reg_1263 = 10'd0;
#0 tmp_30_reg_1268 = 10'd0;
#0 tmp_31_reg_1273 = 10'd0;
#0 tmp_32_reg_1278 = 10'd0;
#0 tmp_33_reg_1283 = 10'd0;
#0 tmp_34_reg_1288 = 10'd0;
#0 tmp_36_reg_1293 = 10'd0;
#0 tmp_37_reg_1298 = 10'd0;
#0 tmp_38_reg_1303 = 10'd0;
#0 tmp_39_reg_1308 = 10'd0;
#0 tmp_40_reg_1313 = 10'd0;
#0 tmp_41_reg_1318 = 10'd0;
#0 tmp_42_reg_1323 = 10'd0;
#0 tmp_43_reg_1328 = 10'd0;
#0 tmp_45_reg_1333 = 10'd0;
#0 tmp_46_reg_1338 = 10'd0;
#0 tmp_47_reg_1343 = 10'd0;
#0 tmp_48_reg_1348 = 10'd0;
#0 tmp_49_reg_1353 = 10'd0;
#0 tmp_50_reg_1358 = 10'd0;
#0 tmp_51_reg_1363 = 10'd0;
#0 tmp_52_reg_1368 = 10'd0;
#0 tmp_54_reg_1373 = 10'd0;
#0 tmp_55_reg_1378 = 10'd0;
#0 tmp_56_reg_1383 = 10'd0;
#0 tmp_57_reg_1388 = 10'd0;
#0 tmp_58_reg_1393 = 10'd0;
#0 tmp_59_reg_1398 = 10'd0;
#0 tmp_60_reg_1403 = 10'd0;
#0 tmp_61_reg_1408 = 10'd0;
#0 tmp_63_reg_1413 = 10'd0;
#0 tmp_64_reg_1418 = 10'd0;
#0 tmp_65_reg_1423 = 10'd0;
#0 tmp_66_reg_1428 = 10'd0;
#0 tmp_67_reg_1433 = 10'd0;
#0 tmp_68_reg_1438 = 10'd0;
#0 tmp_69_reg_1443 = 10'd0;
#0 tmp_70_reg_1448 = 10'd0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 x_fu_260 = 12'd0;
#0 ap_done_reg = 1'b0;
end

dpss_vck190_pt_v_frmbuf_rd_0_0_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        and_ln928_reg_1225 <= 1'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            and_ln928_reg_1225 <= and_ln928_fu_418_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage5_subdone) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        icmp_ln914_reg_1221 <= 1'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            icmp_ln914_reg_1221 <= icmp_ln914_fu_402_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        or_ln948_1_reg_1233 <= 1'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            or_ln948_1_reg_1233 <= or_ln948_1_fu_436_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        or_ln948_2_reg_1237 <= 1'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            or_ln948_2_reg_1237 <= or_ln948_2_fu_442_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        or_ln948_3_reg_1241 <= 1'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            or_ln948_3_reg_1241 <= or_ln948_3_fu_448_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        or_ln948_4_reg_1245 <= 1'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            or_ln948_4_reg_1245 <= or_ln948_4_fu_454_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        or_ln948_5_reg_1249 <= 1'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            or_ln948_5_reg_1249 <= or_ln948_5_fu_460_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        or_ln948_reg_1229 <= 1'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            or_ln948_reg_1229 <= or_ln948_fu_430_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_27_reg_1253 <= 10'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            tmp_27_reg_1253 <= {{bytePlanes_plane0_dout[51:42]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_28_reg_1258 <= 10'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            tmp_28_reg_1258 <= {{ap_phi_mux_rdUv_phi_fu_347_p4[49:40]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_29_reg_1263 <= 10'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            tmp_29_reg_1263 <= {{bytePlanes_plane0_dout[61:52]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_30_reg_1268 <= 10'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            tmp_30_reg_1268 <= {{ap_phi_mux_rdUv_phi_fu_347_p4[59:50]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_31_reg_1273 <= 10'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            tmp_31_reg_1273 <= {{bytePlanes_plane0_dout[73:64]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_32_reg_1278 <= 10'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            tmp_32_reg_1278 <= {{ap_phi_mux_rdUv_phi_fu_347_p4[69:60]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_33_reg_1283 <= 10'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            tmp_33_reg_1283 <= {{bytePlanes_plane0_dout[83:74]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_34_reg_1288 <= 10'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            tmp_34_reg_1288 <= {{ap_phi_mux_rdUv_phi_fu_347_p4[79:70]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_36_reg_1293 <= 10'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            tmp_36_reg_1293 <= {{bytePlanes_plane0_dout[93:84]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_37_reg_1298 <= 10'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            tmp_37_reg_1298 <= {{ap_phi_mux_rdUv_phi_fu_347_p4[89:80]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_38_reg_1303 <= 10'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            tmp_38_reg_1303 <= {{bytePlanes_plane0_dout[105:96]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_39_reg_1308 <= 10'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            tmp_39_reg_1308 <= {{ap_phi_mux_rdUv_phi_fu_347_p4[99:90]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_40_reg_1313 <= 10'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            tmp_40_reg_1313 <= {{bytePlanes_plane0_dout[115:106]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_41_reg_1318 <= 10'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            tmp_41_reg_1318 <= {{ap_phi_mux_rdUv_phi_fu_347_p4[109:100]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_42_reg_1323 <= 10'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            tmp_42_reg_1323 <= {{bytePlanes_plane0_dout[125:116]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_43_reg_1328 <= 10'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            tmp_43_reg_1328 <= {{ap_phi_mux_rdUv_phi_fu_347_p4[119:110]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_45_reg_1333 <= 10'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            tmp_45_reg_1333 <= {{bytePlanes_plane0_dout[137:128]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_46_reg_1338 <= 10'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            tmp_46_reg_1338 <= {{ap_phi_mux_rdUv_phi_fu_347_p4[129:120]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_47_reg_1343 <= 10'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            tmp_47_reg_1343 <= {{bytePlanes_plane0_dout[147:138]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_48_reg_1348 <= 10'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            tmp_48_reg_1348 <= {{ap_phi_mux_rdUv_phi_fu_347_p4[139:130]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_49_reg_1353 <= 10'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            tmp_49_reg_1353 <= {{bytePlanes_plane0_dout[157:148]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_50_reg_1358 <= 10'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            tmp_50_reg_1358 <= {{ap_phi_mux_rdUv_phi_fu_347_p4[149:140]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_51_reg_1363 <= 10'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            tmp_51_reg_1363 <= {{bytePlanes_plane0_dout[169:160]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_52_reg_1368 <= 10'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            tmp_52_reg_1368 <= {{ap_phi_mux_rdUv_phi_fu_347_p4[159:150]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_54_reg_1373 <= 10'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            tmp_54_reg_1373 <= {{bytePlanes_plane0_dout[179:170]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_55_reg_1378 <= 10'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            tmp_55_reg_1378 <= {{ap_phi_mux_rdUv_phi_fu_347_p4[169:160]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_56_reg_1383 <= 10'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            tmp_56_reg_1383 <= {{bytePlanes_plane0_dout[189:180]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_57_reg_1388 <= 10'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            tmp_57_reg_1388 <= {{ap_phi_mux_rdUv_phi_fu_347_p4[179:170]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_58_reg_1393 <= 10'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            tmp_58_reg_1393 <= {{bytePlanes_plane0_dout[201:192]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_59_reg_1398 <= 10'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            tmp_59_reg_1398 <= {{ap_phi_mux_rdUv_phi_fu_347_p4[189:180]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_60_reg_1403 <= 10'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            tmp_60_reg_1403 <= {{bytePlanes_plane0_dout[211:202]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_61_reg_1408 <= 10'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            tmp_61_reg_1408 <= {{ap_phi_mux_rdUv_phi_fu_347_p4[199:190]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_63_reg_1413 <= 10'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            tmp_63_reg_1413 <= {{bytePlanes_plane0_dout[221:212]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_64_reg_1418 <= 10'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            tmp_64_reg_1418 <= {{ap_phi_mux_rdUv_phi_fu_347_p4[209:200]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_65_reg_1423 <= 10'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            tmp_65_reg_1423 <= {{bytePlanes_plane0_dout[233:224]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_66_reg_1428 <= 10'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            tmp_66_reg_1428 <= {{ap_phi_mux_rdUv_phi_fu_347_p4[219:210]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_67_reg_1433 <= 10'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            tmp_67_reg_1433 <= {{bytePlanes_plane0_dout[243:234]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_68_reg_1438 <= 10'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            tmp_68_reg_1438 <= {{ap_phi_mux_rdUv_phi_fu_347_p4[229:220]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_69_reg_1443 <= 10'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            tmp_69_reg_1443 <= {{bytePlanes_plane0_dout[253:244]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_70_reg_1448 <= 10'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            tmp_70_reg_1448 <= {{ap_phi_mux_rdUv_phi_fu_347_p4[239:230]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        x_fu_260 <= 12'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            if (((icmp_ln914_fu_402_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                x_fu_260 <= x_2_fu_396_p2;
            end else if ((ap_loop_init == 1'b1)) begin
                x_fu_260 <= 12'd0;
            end
        end
    end
end

always @ (*) begin
    if (((icmp_ln914_fu_402_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln914_reg_1221 == 1'd0) & (1'd0 == and_ln928_reg_1225))) begin
        ap_phi_mux_rdUv_phi_fu_347_p4 = tmp_fu_552_p9;
    end else begin
        ap_phi_mux_rdUv_phi_fu_347_p4 = ap_phi_reg_pp0_iter0_rdUv_reg_343;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage5_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_x_1 = 12'd0;
    end else begin
        ap_sig_allocacmp_x_1 = x_fu_260;
    end
end

always @ (*) begin
    if (((icmp_ln914_reg_1221 == 1'd0) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        bytePlanes_plane0_blk_n = bytePlanes_plane0_empty_n;
    end else begin
        bytePlanes_plane0_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln914_reg_1221 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        bytePlanes_plane0_read = 1'b1;
    end else begin
        bytePlanes_plane0_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln914_reg_1221 == 1'd0) & (1'b0 == ap_block_pp0_stage1) & (1'd0 == and_ln928_reg_1225) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        bytePlanes_plane1_blk_n = bytePlanes_plane1_empty_n;
    end else begin
        bytePlanes_plane1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op74_read_state2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        bytePlanes_plane1_read = 1'b1;
    end else begin
        bytePlanes_plane1_read = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_predicate_op157_write_state6 == 1'b1) & (1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((icmp_ln914_reg_1221 == 1'd0) & (1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (or_ln948_3_reg_1241 == 1'd1)) | ((icmp_ln914_reg_1221 == 1'd0) & (1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (or_ln948_2_reg_1237 == 1'd1)) | ((icmp_ln914_reg_1221 == 1'd0) & (1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (or_ln948_1_reg_1233 == 1'd1)) | ((icmp_ln914_reg_1221 == 1'd0) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (or_ln948_reg_1229 == 1'd1)) | ((1'b0 == ap_block_pp0_stage0) & (or_ln948_5_reg_1249 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        img_blk_n = img_full_n;
    end else begin
        img_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_01001) & (or_ln948_5_reg_1249 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        img_din = zext_ln949_5_fu_1202_p1;
    end else if (((ap_predicate_op157_write_state6 == 1'b1) & (1'b0 == ap_block_pp0_stage5_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        img_din = zext_ln949_4_fu_1175_p1;
    end else if (((1'b0 == ap_block_pp0_stage4_01001) & (ap_predicate_op152_write_state5 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        img_din = zext_ln949_3_fu_1148_p1;
    end else if (((1'b0 == ap_block_pp0_stage3_01001) & (ap_predicate_op147_write_state4 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        img_din = zext_ln949_2_fu_1121_p1;
    end else if (((1'b0 == ap_block_pp0_stage2_01001) & (ap_predicate_op142_write_state3 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        img_din = zext_ln949_1_fu_1094_p1;
    end else if (((1'b0 == ap_block_pp0_stage1_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op97_write_state2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        img_din = zext_ln949_fu_667_p1;
    end else begin
        img_din = 'bx;
    end
end

always @ (*) begin
    if ((((ap_predicate_op157_write_state6 == 1'b1) & (1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_predicate_op152_write_state5 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_predicate_op147_write_state4 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_predicate_op142_write_state3 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op97_write_state2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (or_ln948_5_reg_1249 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        img_write = 1'b1;
    end else begin
        img_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to1 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign and_ln928_fu_418_p2 = (icmp_ln928_fu_412_p2 & empty);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state7_pp0_stage0_iter1));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state7_pp0_stage0_iter1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state7_pp0_stage0_iter1));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_01001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state2_pp0_stage1_iter0));
end

always @ (*) begin
    ap_block_pp0_stage1_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state2_pp0_stage1_iter0));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state2_pp0_stage1_iter0));
end

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_01001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state3_pp0_stage2_iter0));
end

always @ (*) begin
    ap_block_pp0_stage2_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state3_pp0_stage2_iter0));
end

always @ (*) begin
    ap_block_pp0_stage2_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state3_pp0_stage2_iter0));
end

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage3_01001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state4_pp0_stage3_iter0));
end

always @ (*) begin
    ap_block_pp0_stage3_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state4_pp0_stage3_iter0));
end

always @ (*) begin
    ap_block_pp0_stage3_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state4_pp0_stage3_iter0));
end

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage4_01001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state5_pp0_stage4_iter0));
end

always @ (*) begin
    ap_block_pp0_stage4_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state5_pp0_stage4_iter0));
end

always @ (*) begin
    ap_block_pp0_stage4_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state5_pp0_stage4_iter0));
end

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage5_01001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state6_pp0_stage5_iter0));
end

always @ (*) begin
    ap_block_pp0_stage5_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state6_pp0_stage5_iter0));
end

always @ (*) begin
    ap_block_pp0_stage5_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state6_pp0_stage5_iter0));
end

always @ (*) begin
    ap_block_state2_pp0_stage1_iter0 = (((img_full_n == 1'b0) & (ap_predicate_op97_write_state2 == 1'b1)) | ((ap_predicate_op74_read_state2 == 1'b1) & (bytePlanes_plane1_empty_n == 1'b0)) | ((bytePlanes_plane0_empty_n == 1'b0) & (icmp_ln914_reg_1221 == 1'd0)));
end

always @ (*) begin
    ap_block_state3_pp0_stage2_iter0 = ((img_full_n == 1'b0) & (ap_predicate_op142_write_state3 == 1'b1));
end

always @ (*) begin
    ap_block_state4_pp0_stage3_iter0 = ((img_full_n == 1'b0) & (ap_predicate_op147_write_state4 == 1'b1));
end

always @ (*) begin
    ap_block_state5_pp0_stage4_iter0 = ((img_full_n == 1'b0) & (ap_predicate_op152_write_state5 == 1'b1));
end

always @ (*) begin
    ap_block_state6_pp0_stage5_iter0 = ((ap_predicate_op157_write_state6 == 1'b1) & (img_full_n == 1'b0));
end

always @ (*) begin
    ap_block_state7_pp0_stage0_iter1 = ((or_ln948_5_reg_1249 == 1'd1) & (img_full_n == 1'b0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_phi_reg_pp0_iter0_rdUv_reg_343 = 'bx;

always @ (*) begin
    ap_predicate_op142_write_state3 = ((icmp_ln914_reg_1221 == 1'd0) & (or_ln948_1_reg_1233 == 1'd1));
end

always @ (*) begin
    ap_predicate_op147_write_state4 = ((icmp_ln914_reg_1221 == 1'd0) & (or_ln948_2_reg_1237 == 1'd1));
end

always @ (*) begin
    ap_predicate_op152_write_state5 = ((icmp_ln914_reg_1221 == 1'd0) & (or_ln948_3_reg_1241 == 1'd1));
end

always @ (*) begin
    ap_predicate_op157_write_state6 = ((or_ln948_4_reg_1245 == 1'd1) & (icmp_ln914_reg_1221 == 1'd0));
end

always @ (*) begin
    ap_predicate_op74_read_state2 = ((icmp_ln914_reg_1221 == 1'd0) & (1'd0 == and_ln928_reg_1225));
end

always @ (*) begin
    ap_predicate_op97_write_state2 = ((icmp_ln914_reg_1221 == 1'd0) & (or_ln948_reg_1229 == 1'd1));
end

assign cmp114_fu_424_p2 = (($signed(zext_ln914_fu_408_p1) < $signed(sub113_cast_cast_fu_374_p1)) ? 1'b1 : 1'b0);

assign icmp_ln914_fu_402_p2 = ((ap_sig_allocacmp_x_1 == trunc_ln901_1) ? 1'b1 : 1'b0);

assign icmp_ln928_fu_412_p2 = ((VideoFormat_val == 6'd23) ? 1'b1 : 1'b0);

assign or_ln948_1_fu_436_p2 = (icmp | cmp114_fu_424_p2);

assign or_ln948_2_fu_442_p2 = (cmp117_2 | cmp114_fu_424_p2);

assign or_ln948_3_fu_448_p2 = (empty_73 | cmp114_fu_424_p2);

assign or_ln948_4_fu_454_p2 = (cmp117_4 | cmp114_fu_424_p2);

assign or_ln948_5_fu_460_p2 = (cmp117_5 | cmp114_fu_424_p2);

assign or_ln948_fu_430_p2 = (cmp117 | cmp114_fu_424_p2);

assign sub113_cast_cast_fu_374_p1 = $signed(sub113_cast);

assign tmp_12_fu_581_p4 = {{bytePlanes_plane0_dout[19:10]}};

assign tmp_13_fu_492_p4 = {{bytePlanes_plane1_dout[93:64]}};

assign tmp_14_fu_502_p4 = {{bytePlanes_plane1_dout[125:96]}};

assign tmp_15_fu_512_p4 = {{bytePlanes_plane1_dout[157:128]}};

assign tmp_16_fu_522_p4 = {{bytePlanes_plane1_dout[189:160]}};

assign tmp_17_fu_532_p4 = {{bytePlanes_plane1_dout[221:192]}};

assign tmp_18_fu_542_p4 = {{bytePlanes_plane1_dout[253:224]}};

assign tmp_19_fu_591_p4 = {{ap_phi_mux_rdUv_phi_fu_347_p4[19:10]}};

assign tmp_20_fu_601_p4 = {{bytePlanes_plane0_dout[29:20]}};

assign tmp_21_fu_611_p4 = {{ap_phi_mux_rdUv_phi_fu_347_p4[29:20]}};

assign tmp_22_fu_621_p4 = {{bytePlanes_plane0_dout[41:32]}};

assign tmp_25_fu_631_p4 = {{ap_phi_mux_rdUv_phi_fu_347_p4[39:30]}};

assign tmp_26_fu_641_p12 = {{{{{{{{{{{tmp_25_fu_631_p4}, {tmp_22_fu_621_p4}}, {10'd0}}, {tmp_21_fu_611_p4}}, {tmp_20_fu_601_p4}}, {10'd0}}, {tmp_19_fu_591_p4}}, {tmp_12_fu_581_p4}}, {10'd0}}, {trunc_ln949_fu_577_p1}}, {trunc_ln944_fu_573_p1}};

assign tmp_35_fu_1076_p12 = {{{{{{{{{{{tmp_34_reg_1288}, {tmp_33_reg_1283}}, {10'd0}}, {tmp_32_reg_1278}}, {tmp_31_reg_1273}}, {10'd0}}, {tmp_30_reg_1268}}, {tmp_29_reg_1263}}, {10'd0}}, {tmp_28_reg_1258}}, {tmp_27_reg_1253}};

assign tmp_44_fu_1103_p12 = {{{{{{{{{{{tmp_43_reg_1328}, {tmp_42_reg_1323}}, {10'd0}}, {tmp_41_reg_1318}}, {tmp_40_reg_1313}}, {10'd0}}, {tmp_39_reg_1308}}, {tmp_38_reg_1303}}, {10'd0}}, {tmp_37_reg_1298}}, {tmp_36_reg_1293}};

assign tmp_53_fu_1130_p12 = {{{{{{{{{{{tmp_52_reg_1368}, {tmp_51_reg_1363}}, {10'd0}}, {tmp_50_reg_1358}}, {tmp_49_reg_1353}}, {10'd0}}, {tmp_48_reg_1348}}, {tmp_47_reg_1343}}, {10'd0}}, {tmp_46_reg_1338}}, {tmp_45_reg_1333}};

assign tmp_62_fu_1157_p12 = {{{{{{{{{{{tmp_61_reg_1408}, {tmp_60_reg_1403}}, {10'd0}}, {tmp_59_reg_1398}}, {tmp_58_reg_1393}}, {10'd0}}, {tmp_57_reg_1388}}, {tmp_56_reg_1383}}, {10'd0}}, {tmp_55_reg_1378}}, {tmp_54_reg_1373}};

assign tmp_71_fu_1184_p12 = {{{{{{{{{{{tmp_70_reg_1448}, {tmp_69_reg_1443}}, {10'd0}}, {tmp_68_reg_1438}}, {tmp_67_reg_1433}}, {10'd0}}, {tmp_66_reg_1428}}, {tmp_65_reg_1423}}, {10'd0}}, {tmp_64_reg_1418}}, {tmp_63_reg_1413}};

assign tmp_fu_552_p9 = {{{{{{{{tmp_18_fu_542_p4}, {tmp_17_fu_532_p4}}, {tmp_16_fu_522_p4}}, {tmp_15_fu_512_p4}}, {tmp_14_fu_502_p4}}, {tmp_13_fu_492_p4}}, {tmp_s_fu_482_p4}}, {trunc_ln935_fu_478_p1}};

assign tmp_s_fu_482_p4 = {{bytePlanes_plane1_dout[61:32]}};

assign trunc_ln935_fu_478_p1 = bytePlanes_plane1_dout[29:0];

assign trunc_ln944_fu_573_p1 = bytePlanes_plane0_dout[9:0];

assign trunc_ln949_fu_577_p1 = ap_phi_mux_rdUv_phi_fu_347_p4[9:0];

assign x_2_fu_396_p2 = (ap_sig_allocacmp_x_1 + 12'd1);

assign zext_ln914_fu_408_p1 = ap_sig_allocacmp_x_1;

assign zext_ln949_1_fu_1094_p1 = tmp_35_fu_1076_p12;

assign zext_ln949_2_fu_1121_p1 = tmp_44_fu_1103_p12;

assign zext_ln949_3_fu_1148_p1 = tmp_53_fu_1130_p12;

assign zext_ln949_4_fu_1175_p1 = tmp_62_fu_1157_p12;

assign zext_ln949_5_fu_1202_p1 = tmp_71_fu_1184_p12;

assign zext_ln949_fu_667_p1 = tmp_26_fu_641_p12;

endmodule //dpss_vck190_pt_v_frmbuf_rd_0_0_Bytes2MultiPixStream_Pipeline_VITIS_LOOP_914_1
