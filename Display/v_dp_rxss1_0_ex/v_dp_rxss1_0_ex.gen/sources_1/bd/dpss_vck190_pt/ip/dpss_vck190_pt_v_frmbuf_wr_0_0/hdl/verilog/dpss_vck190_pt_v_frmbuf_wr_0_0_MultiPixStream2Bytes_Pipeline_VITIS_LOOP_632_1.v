// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module dpss_vck190_pt_v_frmbuf_wr_0_0_MultiPixStream2Bytes_Pipeline_VITIS_LOOP_632_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        img_dout,
        img_num_data_valid,
        img_fifo_cap,
        img_empty_n,
        img_read,
        pix_11,
        pix_10,
        pix_9,
        pix_8,
        pix_7,
        pix_6,
        pix_5,
        pix_4,
        pix_3,
        pix_2,
        pix_1,
        pix,
        trunc_ln616_2,
        bytePlanes_plane0_din,
        bytePlanes_plane0_num_data_valid,
        bytePlanes_plane0_fifo_cap,
        bytePlanes_plane0_full_n,
        bytePlanes_plane0_write,
        icmp_ln620,
        sub40_cast,
        empty,
        pix_39_out,
        pix_39_out_ap_vld,
        pix_38_out,
        pix_38_out_ap_vld,
        pix_37_out,
        pix_37_out_ap_vld,
        pix_36_out,
        pix_36_out_ap_vld,
        pix_35_out,
        pix_35_out_ap_vld,
        pix_34_out,
        pix_34_out_ap_vld,
        pix_33_out,
        pix_33_out_ap_vld,
        pix_32_out,
        pix_32_out_ap_vld,
        pix_31_out,
        pix_31_out_ap_vld,
        pix_30_out,
        pix_30_out_ap_vld,
        pix_29_out,
        pix_29_out_ap_vld,
        pix_28_out,
        pix_28_out_ap_vld,
        out_pix_1_out_i,
        out_pix_1_out_o,
        out_pix_1_out_o_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 3'd1;
parameter    ap_ST_fsm_pp0_stage1 = 3'd2;
parameter    ap_ST_fsm_pp0_stage2 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [119:0] img_dout;
input  [2:0] img_num_data_valid;
input  [2:0] img_fifo_cap;
input   img_empty_n;
output   img_read;
input  [9:0] pix_11;
input  [9:0] pix_10;
input  [9:0] pix_9;
input  [9:0] pix_8;
input  [9:0] pix_7;
input  [9:0] pix_6;
input  [9:0] pix_5;
input  [9:0] pix_4;
input  [9:0] pix_3;
input  [9:0] pix_2;
input  [9:0] pix_1;
input  [9:0] pix;
input  [11:0] trunc_ln616_2;
output  [255:0] bytePlanes_plane0_din;
input  [9:0] bytePlanes_plane0_num_data_valid;
input  [9:0] bytePlanes_plane0_fifo_cap;
input   bytePlanes_plane0_full_n;
output   bytePlanes_plane0_write;
input  [0:0] icmp_ln620;
input  [11:0] sub40_cast;
input  [0:0] empty;
output  [9:0] pix_39_out;
output   pix_39_out_ap_vld;
output  [9:0] pix_38_out;
output   pix_38_out_ap_vld;
output  [9:0] pix_37_out;
output   pix_37_out_ap_vld;
output  [9:0] pix_36_out;
output   pix_36_out_ap_vld;
output  [9:0] pix_35_out;
output   pix_35_out_ap_vld;
output  [9:0] pix_34_out;
output   pix_34_out_ap_vld;
output  [9:0] pix_33_out;
output   pix_33_out_ap_vld;
output  [9:0] pix_32_out;
output   pix_32_out_ap_vld;
output  [9:0] pix_31_out;
output   pix_31_out_ap_vld;
output  [9:0] pix_30_out;
output   pix_30_out_ap_vld;
output  [9:0] pix_29_out;
output   pix_29_out_ap_vld;
output  [9:0] pix_28_out;
output   pix_28_out_ap_vld;
input  [255:0] out_pix_1_out_i;
output  [255:0] out_pix_1_out_o;
output   out_pix_1_out_o_ap_vld;

reg ap_idle;
reg img_read;
reg bytePlanes_plane0_write;
reg pix_39_out_ap_vld;
reg pix_38_out_ap_vld;
reg pix_37_out_ap_vld;
reg pix_36_out_ap_vld;
reg pix_35_out_ap_vld;
reg pix_34_out_ap_vld;
reg pix_33_out_ap_vld;
reg pix_32_out_ap_vld;
reg pix_31_out_ap_vld;
reg pix_30_out_ap_vld;
reg pix_29_out_ap_vld;
reg pix_28_out_ap_vld;
reg[255:0] out_pix_1_out_o;
reg out_pix_1_out_o_ap_vld;

(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1_subdone;
wire   [0:0] icmp_ln632_fu_976_p2;
reg    ap_condition_exit_pp0_iter0_stage1;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_CS_fsm_pp0_stage2;
reg   [0:0] icmp_ln632_reg_1757;
reg   [0:0] or_ln637_reg_1766;
reg    ap_predicate_op133_read_state3;
reg    ap_block_state3_pp0_stage2_iter0;
reg    ap_block_pp0_stage2_subdone;
reg    bytePlanes_plane0_blk_n;
wire    ap_block_pp0_stage0;
reg    img_blk_n;
wire    ap_block_pp0_stage2;
reg   [0:0] or_ln637_1_reg_1830;
reg    ap_predicate_op172_read_state4;
reg    ap_block_state4_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
wire  signed [12:0] sub40_cast_cast_fu_732_p1;
reg  signed [12:0] sub40_cast_cast_reg_1686;
wire    ap_block_pp0_stage1_11001;
wire   [11:0] x_6_fu_970_p2;
reg   [11:0] x_6_reg_1751;
wire   [0:0] cmp41_fu_985_p2;
reg   [0:0] cmp41_reg_1761;
wire   [0:0] or_ln637_fu_994_p2;
wire   [9:0] pix_318_fu_1000_p1;
reg    ap_block_pp0_stage2_11001;
wire   [0:0] or_ln637_1_fu_1004_p2;
reg    ap_enable_reg_pp0_iter0_reg;
reg    ap_block_pp0_stage0_subdone;
reg   [9:0] ap_phi_reg_pp0_iter0_pix_91_reg_351;
reg   [9:0] ap_phi_reg_pp0_iter1_pix_91_reg_351;
reg   [9:0] ap_phi_reg_pp0_iter0_pix_90_reg_360;
reg   [9:0] ap_phi_reg_pp0_iter1_pix_90_reg_360;
reg   [9:0] ap_phi_reg_pp0_iter0_pix_89_reg_369;
reg   [9:0] ap_phi_reg_pp0_iter1_pix_89_reg_369;
reg   [9:0] ap_phi_reg_pp0_iter0_pix_88_reg_378;
reg   [9:0] ap_phi_reg_pp0_iter1_pix_88_reg_378;
reg   [9:0] ap_phi_reg_pp0_iter0_pix_87_reg_387;
reg   [9:0] ap_phi_reg_pp0_iter1_pix_87_reg_387;
reg   [9:0] ap_phi_reg_pp0_iter0_pix_86_reg_396;
reg   [9:0] ap_phi_reg_pp0_iter1_pix_86_reg_396;
reg   [9:0] ap_phi_reg_pp0_iter0_pix_85_reg_405;
reg   [9:0] ap_phi_reg_pp0_iter1_pix_85_reg_405;
reg   [9:0] ap_phi_reg_pp0_iter0_pix_84_reg_414;
reg   [9:0] ap_phi_reg_pp0_iter1_pix_84_reg_414;
reg   [9:0] ap_phi_reg_pp0_iter0_pix_83_reg_423;
reg   [9:0] ap_phi_reg_pp0_iter1_pix_83_reg_423;
reg   [9:0] ap_phi_reg_pp0_iter0_pix_82_reg_432;
reg   [9:0] ap_phi_reg_pp0_iter1_pix_82_reg_432;
reg   [9:0] ap_phi_reg_pp0_iter0_pix_81_reg_441;
reg   [9:0] ap_phi_reg_pp0_iter1_pix_81_reg_441;
reg   [9:0] ap_phi_reg_pp0_iter0_pix_80_reg_450;
reg   [9:0] ap_phi_reg_pp0_iter1_pix_80_reg_450;
reg   [9:0] ap_phi_mux_pix_147_phi_fu_462_p4;
wire   [9:0] ap_phi_reg_pp0_iter1_pix_147_reg_459;
reg   [9:0] ap_phi_mux_pix_146_phi_fu_472_p4;
wire   [9:0] ap_phi_reg_pp0_iter1_pix_146_reg_469;
reg   [9:0] ap_phi_mux_pix_145_phi_fu_482_p4;
wire   [9:0] ap_phi_reg_pp0_iter1_pix_145_reg_479;
reg   [9:0] ap_phi_mux_pix_144_phi_fu_492_p4;
wire   [9:0] ap_phi_reg_pp0_iter1_pix_144_reg_489;
reg   [9:0] ap_phi_mux_pix_143_phi_fu_502_p4;
wire   [9:0] ap_phi_reg_pp0_iter1_pix_143_reg_499;
reg   [9:0] ap_phi_mux_pix_142_phi_fu_512_p4;
wire   [9:0] ap_phi_reg_pp0_iter1_pix_142_reg_509;
reg   [9:0] ap_phi_mux_pix_141_phi_fu_522_p4;
wire   [9:0] ap_phi_reg_pp0_iter1_pix_141_reg_519;
reg   [9:0] ap_phi_mux_pix_140_phi_fu_532_p4;
wire   [9:0] ap_phi_reg_pp0_iter1_pix_140_reg_529;
reg   [9:0] ap_phi_mux_pix_139_phi_fu_542_p4;
wire   [9:0] ap_phi_reg_pp0_iter1_pix_139_reg_539;
reg   [9:0] ap_phi_mux_pix_138_phi_fu_552_p4;
wire   [9:0] ap_phi_reg_pp0_iter1_pix_138_reg_549;
reg   [9:0] ap_phi_mux_pix_137_phi_fu_562_p4;
wire   [9:0] ap_phi_reg_pp0_iter1_pix_137_reg_559;
reg   [9:0] ap_phi_mux_pix_136_phi_fu_572_p4;
wire   [9:0] pix_319_fu_1106_p1;
wire   [9:0] ap_phi_reg_pp0_iter1_pix_136_reg_569;
wire    ap_block_pp0_stage1;
wire   [255:0] out_pix_7_fu_1187_p5;
reg   [11:0] x_fu_190;
wire    ap_loop_init;
reg   [9:0] pix_28_fu_194;
reg   [9:0] pix_29_fu_198;
reg   [9:0] pix_30_fu_202;
reg   [9:0] pix_31_fu_206;
reg   [9:0] pix_32_fu_210;
reg   [9:0] pix_33_fu_214;
reg   [9:0] pix_34_fu_218;
reg   [9:0] pix_35_fu_222;
reg   [9:0] pix_36_fu_226;
reg   [9:0] pix_37_fu_230;
reg   [9:0] pix_38_fu_234;
reg   [9:0] pix_39_fu_238;
reg    ap_block_pp0_stage0_01001;
wire   [12:0] zext_ln632_fu_981_p1;
wire   [0:0] or_ln637_2_fu_990_p2;
wire   [29:0] in_pix_fu_1016_p4;
wire   [255:0] out_pix_fu_1026_p5;
wire   [29:0] in_pix_1_fu_1038_p4;
wire   [255:0] out_pix_1_fu_1048_p5;
wire   [29:0] in_pix_2_fu_1060_p4;
wire   [255:0] out_pix_2_fu_1070_p5;
wire   [29:0] in_pix_3_fu_1082_p4;
wire   [255:0] out_pix_3_fu_1092_p5;
wire   [29:0] in_pix_4_fu_1111_p4;
wire   [255:0] out_pix_4_fu_1121_p5;
wire   [29:0] in_pix_5_fu_1133_p4;
wire   [255:0] out_pix_5_fu_1143_p5;
wire   [29:0] in_pix_6_fu_1155_p4;
wire   [255:0] out_pix_6_fu_1165_p5;
wire   [29:0] in_pix_7_fu_1177_p4;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0_1to1;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_262;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 x_fu_190 = 12'd0;
#0 pix_28_fu_194 = 10'd0;
#0 pix_29_fu_198 = 10'd0;
#0 pix_30_fu_202 = 10'd0;
#0 pix_31_fu_206 = 10'd0;
#0 pix_32_fu_210 = 10'd0;
#0 pix_33_fu_214 = 10'd0;
#0 pix_34_fu_218 = 10'd0;
#0 pix_35_fu_222 = 10'd0;
#0 pix_36_fu_226 = 10'd0;
#0 pix_37_fu_230 = 10'd0;
#0 pix_38_fu_234 = 10'd0;
#0 pix_39_fu_238 = 10'd0;
#0 ap_done_reg = 1'b0;
end

dpss_vck190_pt_v_frmbuf_wr_0_0_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage1),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage1)) begin
            ap_enable_reg_pp0_iter0_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_262)) begin
        if (((or_ln637_reg_1766 == 1'd1) & (icmp_ln632_reg_1757 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_pix_80_reg_450 <= pix_318_fu_1000_p1;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_pix_80_reg_450 <= ap_phi_reg_pp0_iter0_pix_80_reg_450;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_262)) begin
        if (((or_ln637_reg_1766 == 1'd1) & (icmp_ln632_reg_1757 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_pix_81_reg_441 <= {{img_dout[19:10]}};
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_pix_81_reg_441 <= ap_phi_reg_pp0_iter0_pix_81_reg_441;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_262)) begin
        if (((or_ln637_reg_1766 == 1'd1) & (icmp_ln632_reg_1757 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_pix_82_reg_432 <= {{img_dout[29:20]}};
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_pix_82_reg_432 <= ap_phi_reg_pp0_iter0_pix_82_reg_432;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_262)) begin
        if (((or_ln637_reg_1766 == 1'd1) & (icmp_ln632_reg_1757 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_pix_83_reg_423 <= {{img_dout[39:30]}};
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_pix_83_reg_423 <= ap_phi_reg_pp0_iter0_pix_83_reg_423;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_262)) begin
        if (((or_ln637_reg_1766 == 1'd1) & (icmp_ln632_reg_1757 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_pix_84_reg_414 <= {{img_dout[49:40]}};
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_pix_84_reg_414 <= ap_phi_reg_pp0_iter0_pix_84_reg_414;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_262)) begin
        if (((or_ln637_reg_1766 == 1'd1) & (icmp_ln632_reg_1757 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_pix_85_reg_405 <= {{img_dout[59:50]}};
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_pix_85_reg_405 <= ap_phi_reg_pp0_iter0_pix_85_reg_405;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_262)) begin
        if (((or_ln637_reg_1766 == 1'd1) & (icmp_ln632_reg_1757 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_pix_86_reg_396 <= {{img_dout[69:60]}};
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_pix_86_reg_396 <= ap_phi_reg_pp0_iter0_pix_86_reg_396;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_262)) begin
        if (((or_ln637_reg_1766 == 1'd1) & (icmp_ln632_reg_1757 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_pix_87_reg_387 <= {{img_dout[79:70]}};
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_pix_87_reg_387 <= ap_phi_reg_pp0_iter0_pix_87_reg_387;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_262)) begin
        if (((or_ln637_reg_1766 == 1'd1) & (icmp_ln632_reg_1757 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_pix_88_reg_378 <= {{img_dout[89:80]}};
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_pix_88_reg_378 <= ap_phi_reg_pp0_iter0_pix_88_reg_378;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_262)) begin
        if (((or_ln637_reg_1766 == 1'd1) & (icmp_ln632_reg_1757 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_pix_89_reg_369 <= {{img_dout[99:90]}};
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_pix_89_reg_369 <= ap_phi_reg_pp0_iter0_pix_89_reg_369;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_262)) begin
        if (((or_ln637_reg_1766 == 1'd1) & (icmp_ln632_reg_1757 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_pix_90_reg_360 <= {{img_dout[109:100]}};
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_pix_90_reg_360 <= ap_phi_reg_pp0_iter0_pix_90_reg_360;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_262)) begin
        if (((or_ln637_reg_1766 == 1'd1) & (icmp_ln632_reg_1757 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_pix_91_reg_351 <= {{img_dout[119:110]}};
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_pix_91_reg_351 <= ap_phi_reg_pp0_iter0_pix_91_reg_351;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            pix_28_fu_194 <= pix;
        end else if (((icmp_ln632_reg_1757 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            pix_28_fu_194 <= ap_phi_mux_pix_136_phi_fu_572_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            pix_29_fu_198 <= pix_1;
        end else if (((icmp_ln632_reg_1757 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            pix_29_fu_198 <= ap_phi_mux_pix_137_phi_fu_562_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            pix_30_fu_202 <= pix_2;
        end else if (((icmp_ln632_reg_1757 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            pix_30_fu_202 <= ap_phi_mux_pix_138_phi_fu_552_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            pix_31_fu_206 <= pix_3;
        end else if (((icmp_ln632_reg_1757 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            pix_31_fu_206 <= ap_phi_mux_pix_139_phi_fu_542_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            pix_32_fu_210 <= pix_4;
        end else if (((icmp_ln632_reg_1757 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            pix_32_fu_210 <= ap_phi_mux_pix_140_phi_fu_532_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            pix_33_fu_214 <= pix_5;
        end else if (((icmp_ln632_reg_1757 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            pix_33_fu_214 <= ap_phi_mux_pix_141_phi_fu_522_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            pix_34_fu_218 <= pix_6;
        end else if (((icmp_ln632_reg_1757 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            pix_34_fu_218 <= ap_phi_mux_pix_142_phi_fu_512_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            pix_35_fu_222 <= pix_7;
        end else if (((icmp_ln632_reg_1757 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            pix_35_fu_222 <= ap_phi_mux_pix_143_phi_fu_502_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            pix_36_fu_226 <= pix_8;
        end else if (((icmp_ln632_reg_1757 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            pix_36_fu_226 <= ap_phi_mux_pix_144_phi_fu_492_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            pix_37_fu_230 <= pix_9;
        end else if (((icmp_ln632_reg_1757 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            pix_37_fu_230 <= ap_phi_mux_pix_145_phi_fu_482_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            pix_38_fu_234 <= pix_10;
        end else if (((icmp_ln632_reg_1757 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            pix_38_fu_234 <= ap_phi_mux_pix_146_phi_fu_472_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            pix_39_fu_238 <= pix_11;
        end else if (((icmp_ln632_reg_1757 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            pix_39_fu_238 <= ap_phi_mux_pix_147_phi_fu_462_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            x_fu_190 <= 12'd0;
        end else if (((icmp_ln632_reg_1757 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            x_fu_190 <= x_6_reg_1751;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln632_fu_976_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (or_ln637_fu_994_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter0_pix_80_reg_450 <= pix_28_fu_194;
        ap_phi_reg_pp0_iter0_pix_81_reg_441 <= pix_29_fu_198;
        ap_phi_reg_pp0_iter0_pix_82_reg_432 <= pix_30_fu_202;
        ap_phi_reg_pp0_iter0_pix_83_reg_423 <= pix_31_fu_206;
        ap_phi_reg_pp0_iter0_pix_84_reg_414 <= pix_32_fu_210;
        ap_phi_reg_pp0_iter0_pix_85_reg_405 <= pix_33_fu_214;
        ap_phi_reg_pp0_iter0_pix_86_reg_396 <= pix_34_fu_218;
        ap_phi_reg_pp0_iter0_pix_87_reg_387 <= pix_35_fu_222;
        ap_phi_reg_pp0_iter0_pix_88_reg_378 <= pix_36_fu_226;
        ap_phi_reg_pp0_iter0_pix_89_reg_369 <= pix_37_fu_230;
        ap_phi_reg_pp0_iter0_pix_90_reg_360 <= pix_38_fu_234;
        ap_phi_reg_pp0_iter0_pix_91_reg_351 <= pix_39_fu_238;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        cmp41_reg_1761 <= cmp41_fu_985_p2;
        icmp_ln632_reg_1757 <= icmp_ln632_fu_976_p2;
        or_ln637_reg_1766 <= or_ln637_fu_994_p2;
        x_6_reg_1751 <= x_6_fu_970_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        or_ln637_1_reg_1830 <= or_ln637_1_fu_1004_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sub40_cast_cast_reg_1686 <= sub40_cast_cast_fu_732_p1;
    end
end

always @ (*) begin
    if (((icmp_ln632_fu_976_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln632_reg_1757 == 1'd0)) begin
        if ((or_ln637_1_reg_1830 == 1'd0)) begin
            ap_phi_mux_pix_136_phi_fu_572_p4 = ap_phi_reg_pp0_iter1_pix_80_reg_450;
        end else if ((or_ln637_1_reg_1830 == 1'd1)) begin
            ap_phi_mux_pix_136_phi_fu_572_p4 = pix_319_fu_1106_p1;
        end else begin
            ap_phi_mux_pix_136_phi_fu_572_p4 = ap_phi_reg_pp0_iter1_pix_136_reg_569;
        end
    end else begin
        ap_phi_mux_pix_136_phi_fu_572_p4 = ap_phi_reg_pp0_iter1_pix_136_reg_569;
    end
end

always @ (*) begin
    if ((icmp_ln632_reg_1757 == 1'd0)) begin
        if ((or_ln637_1_reg_1830 == 1'd0)) begin
            ap_phi_mux_pix_137_phi_fu_562_p4 = ap_phi_reg_pp0_iter1_pix_81_reg_441;
        end else if ((or_ln637_1_reg_1830 == 1'd1)) begin
            ap_phi_mux_pix_137_phi_fu_562_p4 = {{img_dout[19:10]}};
        end else begin
            ap_phi_mux_pix_137_phi_fu_562_p4 = ap_phi_reg_pp0_iter1_pix_137_reg_559;
        end
    end else begin
        ap_phi_mux_pix_137_phi_fu_562_p4 = ap_phi_reg_pp0_iter1_pix_137_reg_559;
    end
end

always @ (*) begin
    if ((icmp_ln632_reg_1757 == 1'd0)) begin
        if ((or_ln637_1_reg_1830 == 1'd0)) begin
            ap_phi_mux_pix_138_phi_fu_552_p4 = ap_phi_reg_pp0_iter1_pix_82_reg_432;
        end else if ((or_ln637_1_reg_1830 == 1'd1)) begin
            ap_phi_mux_pix_138_phi_fu_552_p4 = {{img_dout[29:20]}};
        end else begin
            ap_phi_mux_pix_138_phi_fu_552_p4 = ap_phi_reg_pp0_iter1_pix_138_reg_549;
        end
    end else begin
        ap_phi_mux_pix_138_phi_fu_552_p4 = ap_phi_reg_pp0_iter1_pix_138_reg_549;
    end
end

always @ (*) begin
    if ((icmp_ln632_reg_1757 == 1'd0)) begin
        if ((or_ln637_1_reg_1830 == 1'd0)) begin
            ap_phi_mux_pix_139_phi_fu_542_p4 = ap_phi_reg_pp0_iter1_pix_83_reg_423;
        end else if ((or_ln637_1_reg_1830 == 1'd1)) begin
            ap_phi_mux_pix_139_phi_fu_542_p4 = {{img_dout[39:30]}};
        end else begin
            ap_phi_mux_pix_139_phi_fu_542_p4 = ap_phi_reg_pp0_iter1_pix_139_reg_539;
        end
    end else begin
        ap_phi_mux_pix_139_phi_fu_542_p4 = ap_phi_reg_pp0_iter1_pix_139_reg_539;
    end
end

always @ (*) begin
    if ((icmp_ln632_reg_1757 == 1'd0)) begin
        if ((or_ln637_1_reg_1830 == 1'd0)) begin
            ap_phi_mux_pix_140_phi_fu_532_p4 = ap_phi_reg_pp0_iter1_pix_84_reg_414;
        end else if ((or_ln637_1_reg_1830 == 1'd1)) begin
            ap_phi_mux_pix_140_phi_fu_532_p4 = {{img_dout[49:40]}};
        end else begin
            ap_phi_mux_pix_140_phi_fu_532_p4 = ap_phi_reg_pp0_iter1_pix_140_reg_529;
        end
    end else begin
        ap_phi_mux_pix_140_phi_fu_532_p4 = ap_phi_reg_pp0_iter1_pix_140_reg_529;
    end
end

always @ (*) begin
    if ((icmp_ln632_reg_1757 == 1'd0)) begin
        if ((or_ln637_1_reg_1830 == 1'd0)) begin
            ap_phi_mux_pix_141_phi_fu_522_p4 = ap_phi_reg_pp0_iter1_pix_85_reg_405;
        end else if ((or_ln637_1_reg_1830 == 1'd1)) begin
            ap_phi_mux_pix_141_phi_fu_522_p4 = {{img_dout[59:50]}};
        end else begin
            ap_phi_mux_pix_141_phi_fu_522_p4 = ap_phi_reg_pp0_iter1_pix_141_reg_519;
        end
    end else begin
        ap_phi_mux_pix_141_phi_fu_522_p4 = ap_phi_reg_pp0_iter1_pix_141_reg_519;
    end
end

always @ (*) begin
    if ((icmp_ln632_reg_1757 == 1'd0)) begin
        if ((or_ln637_1_reg_1830 == 1'd0)) begin
            ap_phi_mux_pix_142_phi_fu_512_p4 = ap_phi_reg_pp0_iter1_pix_86_reg_396;
        end else if ((or_ln637_1_reg_1830 == 1'd1)) begin
            ap_phi_mux_pix_142_phi_fu_512_p4 = {{img_dout[69:60]}};
        end else begin
            ap_phi_mux_pix_142_phi_fu_512_p4 = ap_phi_reg_pp0_iter1_pix_142_reg_509;
        end
    end else begin
        ap_phi_mux_pix_142_phi_fu_512_p4 = ap_phi_reg_pp0_iter1_pix_142_reg_509;
    end
end

always @ (*) begin
    if ((icmp_ln632_reg_1757 == 1'd0)) begin
        if ((or_ln637_1_reg_1830 == 1'd0)) begin
            ap_phi_mux_pix_143_phi_fu_502_p4 = ap_phi_reg_pp0_iter1_pix_87_reg_387;
        end else if ((or_ln637_1_reg_1830 == 1'd1)) begin
            ap_phi_mux_pix_143_phi_fu_502_p4 = {{img_dout[79:70]}};
        end else begin
            ap_phi_mux_pix_143_phi_fu_502_p4 = ap_phi_reg_pp0_iter1_pix_143_reg_499;
        end
    end else begin
        ap_phi_mux_pix_143_phi_fu_502_p4 = ap_phi_reg_pp0_iter1_pix_143_reg_499;
    end
end

always @ (*) begin
    if ((icmp_ln632_reg_1757 == 1'd0)) begin
        if ((or_ln637_1_reg_1830 == 1'd0)) begin
            ap_phi_mux_pix_144_phi_fu_492_p4 = ap_phi_reg_pp0_iter1_pix_88_reg_378;
        end else if ((or_ln637_1_reg_1830 == 1'd1)) begin
            ap_phi_mux_pix_144_phi_fu_492_p4 = {{img_dout[89:80]}};
        end else begin
            ap_phi_mux_pix_144_phi_fu_492_p4 = ap_phi_reg_pp0_iter1_pix_144_reg_489;
        end
    end else begin
        ap_phi_mux_pix_144_phi_fu_492_p4 = ap_phi_reg_pp0_iter1_pix_144_reg_489;
    end
end

always @ (*) begin
    if ((icmp_ln632_reg_1757 == 1'd0)) begin
        if ((or_ln637_1_reg_1830 == 1'd0)) begin
            ap_phi_mux_pix_145_phi_fu_482_p4 = ap_phi_reg_pp0_iter1_pix_89_reg_369;
        end else if ((or_ln637_1_reg_1830 == 1'd1)) begin
            ap_phi_mux_pix_145_phi_fu_482_p4 = {{img_dout[99:90]}};
        end else begin
            ap_phi_mux_pix_145_phi_fu_482_p4 = ap_phi_reg_pp0_iter1_pix_145_reg_479;
        end
    end else begin
        ap_phi_mux_pix_145_phi_fu_482_p4 = ap_phi_reg_pp0_iter1_pix_145_reg_479;
    end
end

always @ (*) begin
    if ((icmp_ln632_reg_1757 == 1'd0)) begin
        if ((or_ln637_1_reg_1830 == 1'd0)) begin
            ap_phi_mux_pix_146_phi_fu_472_p4 = ap_phi_reg_pp0_iter1_pix_90_reg_360;
        end else if ((or_ln637_1_reg_1830 == 1'd1)) begin
            ap_phi_mux_pix_146_phi_fu_472_p4 = {{img_dout[109:100]}};
        end else begin
            ap_phi_mux_pix_146_phi_fu_472_p4 = ap_phi_reg_pp0_iter1_pix_146_reg_469;
        end
    end else begin
        ap_phi_mux_pix_146_phi_fu_472_p4 = ap_phi_reg_pp0_iter1_pix_146_reg_469;
    end
end

always @ (*) begin
    if ((icmp_ln632_reg_1757 == 1'd0)) begin
        if ((or_ln637_1_reg_1830 == 1'd0)) begin
            ap_phi_mux_pix_147_phi_fu_462_p4 = ap_phi_reg_pp0_iter1_pix_91_reg_351;
        end else if ((or_ln637_1_reg_1830 == 1'd1)) begin
            ap_phi_mux_pix_147_phi_fu_462_p4 = {{img_dout[119:110]}};
        end else begin
            ap_phi_mux_pix_147_phi_fu_462_p4 = ap_phi_reg_pp0_iter1_pix_147_reg_459;
        end
    end else begin
        ap_phi_mux_pix_147_phi_fu_462_p4 = ap_phi_reg_pp0_iter1_pix_147_reg_459;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln632_reg_1757 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bytePlanes_plane0_blk_n = bytePlanes_plane0_full_n;
    end else begin
        bytePlanes_plane0_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln632_reg_1757 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bytePlanes_plane0_write = 1'b1;
    end else begin
        bytePlanes_plane0_write = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_predicate_op133_read_state3 == 1'b1) & (1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((icmp_ln632_reg_1757 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (or_ln637_1_reg_1830 == 1'd1)))) begin
        img_blk_n = img_empty_n;
    end else begin
        img_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_predicate_op133_read_state3 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ap_predicate_op172_read_state4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        img_read = 1'b1;
    end else begin
        img_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln632_reg_1757 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        out_pix_1_out_o = out_pix_7_fu_1187_p5;
    end else begin
        out_pix_1_out_o = out_pix_1_out_i;
    end
end

always @ (*) begin
    if (((icmp_ln632_reg_1757 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        out_pix_1_out_o_ap_vld = 1'b1;
    end else begin
        out_pix_1_out_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln632_fu_976_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        pix_28_out_ap_vld = 1'b1;
    end else begin
        pix_28_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln632_fu_976_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        pix_29_out_ap_vld = 1'b1;
    end else begin
        pix_29_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln632_fu_976_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        pix_30_out_ap_vld = 1'b1;
    end else begin
        pix_30_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln632_fu_976_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        pix_31_out_ap_vld = 1'b1;
    end else begin
        pix_31_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln632_fu_976_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        pix_32_out_ap_vld = 1'b1;
    end else begin
        pix_32_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln632_fu_976_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        pix_33_out_ap_vld = 1'b1;
    end else begin
        pix_33_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln632_fu_976_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        pix_34_out_ap_vld = 1'b1;
    end else begin
        pix_34_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln632_fu_976_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        pix_35_out_ap_vld = 1'b1;
    end else begin
        pix_35_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln632_fu_976_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        pix_36_out_ap_vld = 1'b1;
    end else begin
        pix_36_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln632_fu_976_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        pix_37_out_ap_vld = 1'b1;
    end else begin
        pix_37_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln632_fu_976_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        pix_38_out_ap_vld = 1'b1;
    end else begin
        pix_38_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln632_fu_976_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        pix_39_out_ap_vld = 1'b1;
    end else begin
        pix_39_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to1 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b1 == ap_condition_exit_pp0_iter0_stage1)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state4_pp0_stage0_iter1));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state4_pp0_stage0_iter1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state4_pp0_stage0_iter1));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state3_pp0_stage2_iter0));
end

always @ (*) begin
    ap_block_pp0_stage2_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state3_pp0_stage2_iter0));
end

always @ (*) begin
    ap_block_state3_pp0_stage2_iter0 = ((ap_predicate_op133_read_state3 == 1'b1) & (img_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state4_pp0_stage0_iter1 = (((img_empty_n == 1'b0) & (ap_predicate_op172_read_state4 == 1'b1)) | ((bytePlanes_plane0_full_n == 1'b0) & (icmp_ln632_reg_1757 == 1'd0)));
end

always @ (*) begin
    ap_condition_262 = ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage1;

assign ap_phi_reg_pp0_iter1_pix_136_reg_569 = 'bx;

assign ap_phi_reg_pp0_iter1_pix_137_reg_559 = 'bx;

assign ap_phi_reg_pp0_iter1_pix_138_reg_549 = 'bx;

assign ap_phi_reg_pp0_iter1_pix_139_reg_539 = 'bx;

assign ap_phi_reg_pp0_iter1_pix_140_reg_529 = 'bx;

assign ap_phi_reg_pp0_iter1_pix_141_reg_519 = 'bx;

assign ap_phi_reg_pp0_iter1_pix_142_reg_509 = 'bx;

assign ap_phi_reg_pp0_iter1_pix_143_reg_499 = 'bx;

assign ap_phi_reg_pp0_iter1_pix_144_reg_489 = 'bx;

assign ap_phi_reg_pp0_iter1_pix_145_reg_479 = 'bx;

assign ap_phi_reg_pp0_iter1_pix_146_reg_469 = 'bx;

assign ap_phi_reg_pp0_iter1_pix_147_reg_459 = 'bx;

always @ (*) begin
    ap_predicate_op133_read_state3 = ((or_ln637_reg_1766 == 1'd1) & (icmp_ln632_reg_1757 == 1'd0));
end

always @ (*) begin
    ap_predicate_op172_read_state4 = ((icmp_ln632_reg_1757 == 1'd0) & (or_ln637_1_reg_1830 == 1'd1));
end

assign bytePlanes_plane0_din = {{out_pix_6_fu_1165_p5[255:254]}, {in_pix_7_fu_1177_p4}, {out_pix_6_fu_1165_p5[223:0]}};

assign cmp41_fu_985_p2 = (($signed(zext_ln632_fu_981_p1) < $signed(sub40_cast_cast_reg_1686)) ? 1'b1 : 1'b0);

assign icmp_ln632_fu_976_p2 = ((x_fu_190 == trunc_ln616_2) ? 1'b1 : 1'b0);

assign in_pix_1_fu_1038_p4 = {{{ap_phi_reg_pp0_iter1_pix_85_reg_405}, {ap_phi_reg_pp0_iter1_pix_84_reg_414}}, {ap_phi_reg_pp0_iter1_pix_83_reg_423}};

assign in_pix_2_fu_1060_p4 = {{{ap_phi_reg_pp0_iter1_pix_88_reg_378}, {ap_phi_reg_pp0_iter1_pix_87_reg_387}}, {ap_phi_reg_pp0_iter1_pix_86_reg_396}};

assign in_pix_3_fu_1082_p4 = {{{ap_phi_reg_pp0_iter1_pix_91_reg_351}, {ap_phi_reg_pp0_iter1_pix_90_reg_360}}, {ap_phi_reg_pp0_iter1_pix_89_reg_369}};

assign in_pix_4_fu_1111_p4 = {{{ap_phi_mux_pix_138_phi_fu_552_p4}, {ap_phi_mux_pix_137_phi_fu_562_p4}}, {ap_phi_mux_pix_136_phi_fu_572_p4}};

assign in_pix_5_fu_1133_p4 = {{{ap_phi_mux_pix_141_phi_fu_522_p4}, {ap_phi_mux_pix_140_phi_fu_532_p4}}, {ap_phi_mux_pix_139_phi_fu_542_p4}};

assign in_pix_6_fu_1155_p4 = {{{ap_phi_mux_pix_144_phi_fu_492_p4}, {ap_phi_mux_pix_143_phi_fu_502_p4}}, {ap_phi_mux_pix_142_phi_fu_512_p4}};

assign in_pix_7_fu_1177_p4 = {{{ap_phi_mux_pix_147_phi_fu_462_p4}, {ap_phi_mux_pix_146_phi_fu_472_p4}}, {ap_phi_mux_pix_145_phi_fu_482_p4}};

assign in_pix_fu_1016_p4 = {{{ap_phi_reg_pp0_iter1_pix_82_reg_432}, {ap_phi_reg_pp0_iter1_pix_81_reg_441}}, {ap_phi_reg_pp0_iter1_pix_80_reg_450}};

assign or_ln637_1_fu_1004_p2 = (icmp_ln620 | cmp41_reg_1761);

assign or_ln637_2_fu_990_p2 = (icmp_ln620 | empty);

assign or_ln637_fu_994_p2 = (or_ln637_2_fu_990_p2 | cmp41_fu_985_p2);

assign out_pix_1_fu_1048_p5 = {{out_pix_fu_1026_p5[255:62]}, {in_pix_1_fu_1038_p4}, {out_pix_fu_1026_p5[31:0]}};

assign out_pix_2_fu_1070_p5 = {{out_pix_1_fu_1048_p5[255:94]}, {in_pix_2_fu_1060_p4}, {out_pix_1_fu_1048_p5[63:0]}};

assign out_pix_3_fu_1092_p5 = {{out_pix_2_fu_1070_p5[255:126]}, {in_pix_3_fu_1082_p4}, {out_pix_2_fu_1070_p5[95:0]}};

assign out_pix_4_fu_1121_p5 = {{out_pix_3_fu_1092_p5[255:158]}, {in_pix_4_fu_1111_p4}, {out_pix_3_fu_1092_p5[127:0]}};

assign out_pix_5_fu_1143_p5 = {{out_pix_4_fu_1121_p5[255:190]}, {in_pix_5_fu_1133_p4}, {out_pix_4_fu_1121_p5[159:0]}};

assign out_pix_6_fu_1165_p5 = {{out_pix_5_fu_1143_p5[255:222]}, {in_pix_6_fu_1155_p4}, {out_pix_5_fu_1143_p5[191:0]}};

assign out_pix_7_fu_1187_p5 = {{out_pix_6_fu_1165_p5[255:254]}, {in_pix_7_fu_1177_p4}, {out_pix_6_fu_1165_p5[223:0]}};

assign out_pix_fu_1026_p5 = {{out_pix_1_out_i[255:30]}, {in_pix_fu_1016_p4}};

assign pix_28_out = pix_28_fu_194;

assign pix_29_out = pix_29_fu_198;

assign pix_30_out = pix_30_fu_202;

assign pix_318_fu_1000_p1 = img_dout[9:0];

assign pix_319_fu_1106_p1 = img_dout[9:0];

assign pix_31_out = pix_31_fu_206;

assign pix_32_out = pix_32_fu_210;

assign pix_33_out = pix_33_fu_214;

assign pix_34_out = pix_34_fu_218;

assign pix_35_out = pix_35_fu_222;

assign pix_36_out = pix_36_fu_226;

assign pix_37_out = pix_37_fu_230;

assign pix_38_out = pix_38_fu_234;

assign pix_39_out = pix_39_fu_238;

assign sub40_cast_cast_fu_732_p1 = $signed(sub40_cast);

assign x_6_fu_970_p2 = (x_fu_190 + 12'd1);

assign zext_ln632_fu_981_p1 = x_fu_190;

endmodule //dpss_vck190_pt_v_frmbuf_wr_0_0_MultiPixStream2Bytes_Pipeline_VITIS_LOOP_632_1
