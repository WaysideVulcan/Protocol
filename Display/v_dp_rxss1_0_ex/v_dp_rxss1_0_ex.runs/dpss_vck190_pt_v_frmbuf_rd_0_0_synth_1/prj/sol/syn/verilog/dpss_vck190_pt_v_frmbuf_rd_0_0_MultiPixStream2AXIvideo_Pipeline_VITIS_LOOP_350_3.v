// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module dpss_vck190_pt_v_frmbuf_rd_0_0_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_350_3 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        img_dout,
        img_num_data_valid,
        img_fifo_cap,
        img_empty_n,
        img_read,
        m_axis_video_TREADY,
        sof,
        div_cast1,
        sub,
        empty_62,
        empty_63,
        empty_64,
        empty_65,
        empty_66,
        empty_67,
        empty_68,
        empty_69,
        empty_70,
        empty_71,
        empty_72,
        empty,
        m_axis_video_TDATA,
        m_axis_video_TVALID,
        m_axis_video_TKEEP,
        m_axis_video_TSTRB,
        m_axis_video_TUSER,
        m_axis_video_TLAST,
        m_axis_video_TID,
        m_axis_video_TDEST
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [119:0] img_dout;
input  [2:0] img_num_data_valid;
input  [2:0] img_fifo_cap;
input   img_empty_n;
output   img_read;
input   m_axis_video_TREADY;
input  [0:0] sof;
input  [10:0] div_cast1;
input  [11:0] sub;
input  [3:0] empty_62;
input  [3:0] empty_63;
input  [3:0] empty_64;
input  [3:0] empty_65;
input  [3:0] empty_66;
input  [3:0] empty_67;
input  [3:0] empty_68;
input  [3:0] empty_69;
input  [3:0] empty_70;
input  [3:0] empty_71;
input  [3:0] empty_72;
input  [3:0] empty;
output  [119:0] m_axis_video_TDATA;
output   m_axis_video_TVALID;
output  [14:0] m_axis_video_TKEEP;
output  [14:0] m_axis_video_TSTRB;
output  [0:0] m_axis_video_TUSER;
output  [0:0] m_axis_video_TLAST;
output  [0:0] m_axis_video_TID;
output  [0:0] m_axis_video_TDEST;

reg ap_idle;
reg img_read;
reg m_axis_video_TVALID;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
reg   [0:0] icmp_ln350_reg_1273;
reg    ap_block_state2_pp0_stage0_iter1;
reg   [0:0] icmp_ln350_reg_1273_pp0_iter1_reg;
reg    ap_block_state3_pp0_stage0_iter2;
reg    ap_block_state3_io;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln350_fu_373_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    img_blk_n;
wire    ap_block_pp0_stage0;
reg    m_axis_video_TDATA_blk_n;
reg   [0:0] sof_2_reg_307;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] axi_last_fu_383_p2;
reg   [0:0] axi_last_reg_1277;
reg   [0:0] axi_last_reg_1277_pp0_iter1_reg;
wire   [9:0] tmp_s_fu_517_p27;
reg   [9:0] tmp_s_reg_1282;
wire   [9:0] tmp_2_fu_572_p27;
reg   [9:0] tmp_2_reg_1287;
wire   [9:0] tmp_3_fu_627_p27;
reg   [9:0] tmp_3_reg_1292;
wire   [9:0] tmp_4_fu_682_p27;
reg   [9:0] tmp_4_reg_1297;
wire   [9:0] tmp_5_fu_737_p27;
reg   [9:0] tmp_5_reg_1302;
wire   [9:0] tmp_6_fu_792_p27;
reg   [9:0] tmp_6_reg_1307;
wire   [9:0] tmp_7_fu_847_p27;
reg   [9:0] tmp_7_reg_1312;
wire   [9:0] tmp_8_fu_902_p27;
reg   [9:0] tmp_8_reg_1317;
wire   [9:0] tmp_9_fu_957_p27;
reg   [9:0] tmp_9_reg_1322;
wire   [9:0] tmp_1_fu_1012_p27;
reg   [9:0] tmp_1_reg_1327;
wire   [9:0] tmp_10_fu_1067_p27;
reg   [9:0] tmp_10_reg_1332;
wire   [9:0] tmp_11_fu_1122_p27;
reg   [9:0] tmp_11_reg_1337;
wire    ap_loop_init;
reg   [10:0] j_fu_178;
wire   [10:0] j_2_fu_367_p2;
reg   [10:0] ap_sig_allocacmp_j_1;
reg    ap_block_pp0_stage0_01001;
wire   [11:0] zext_ln350_fu_379_p1;
wire   [9:0] pix_fu_403_p1;
wire   [9:0] tmp_s_fu_517_p4;
wire   [9:0] tmp_s_fu_517_p6;
wire   [9:0] tmp_s_fu_517_p8;
wire   [9:0] tmp_s_fu_517_p10;
wire   [9:0] tmp_s_fu_517_p12;
wire   [9:0] tmp_s_fu_517_p14;
wire   [9:0] tmp_s_fu_517_p16;
wire   [9:0] tmp_s_fu_517_p18;
wire   [9:0] tmp_s_fu_517_p20;
wire   [9:0] tmp_s_fu_517_p22;
wire   [9:0] tmp_s_fu_517_p24;
wire   [9:0] tmp_s_fu_517_p25;
wire   [9:0] tmp_2_fu_572_p4;
wire   [9:0] tmp_2_fu_572_p6;
wire   [9:0] tmp_2_fu_572_p8;
wire   [9:0] tmp_2_fu_572_p10;
wire   [9:0] tmp_2_fu_572_p12;
wire   [9:0] tmp_2_fu_572_p14;
wire   [9:0] tmp_2_fu_572_p16;
wire   [9:0] tmp_2_fu_572_p18;
wire   [9:0] tmp_2_fu_572_p20;
wire   [9:0] tmp_2_fu_572_p22;
wire   [9:0] tmp_2_fu_572_p24;
wire   [9:0] tmp_2_fu_572_p25;
wire   [9:0] tmp_3_fu_627_p4;
wire   [9:0] tmp_3_fu_627_p6;
wire   [9:0] tmp_3_fu_627_p8;
wire   [9:0] tmp_3_fu_627_p10;
wire   [9:0] tmp_3_fu_627_p12;
wire   [9:0] tmp_3_fu_627_p14;
wire   [9:0] tmp_3_fu_627_p16;
wire   [9:0] tmp_3_fu_627_p18;
wire   [9:0] tmp_3_fu_627_p20;
wire   [9:0] tmp_3_fu_627_p22;
wire   [9:0] tmp_3_fu_627_p24;
wire   [9:0] tmp_3_fu_627_p25;
wire   [9:0] tmp_4_fu_682_p4;
wire   [9:0] tmp_4_fu_682_p6;
wire   [9:0] tmp_4_fu_682_p8;
wire   [9:0] tmp_4_fu_682_p10;
wire   [9:0] tmp_4_fu_682_p12;
wire   [9:0] tmp_4_fu_682_p14;
wire   [9:0] tmp_4_fu_682_p16;
wire   [9:0] tmp_4_fu_682_p18;
wire   [9:0] tmp_4_fu_682_p20;
wire   [9:0] tmp_4_fu_682_p22;
wire   [9:0] tmp_4_fu_682_p24;
wire   [9:0] tmp_4_fu_682_p25;
wire   [9:0] tmp_5_fu_737_p4;
wire   [9:0] tmp_5_fu_737_p6;
wire   [9:0] tmp_5_fu_737_p8;
wire   [9:0] tmp_5_fu_737_p10;
wire   [9:0] tmp_5_fu_737_p12;
wire   [9:0] tmp_5_fu_737_p14;
wire   [9:0] tmp_5_fu_737_p16;
wire   [9:0] tmp_5_fu_737_p18;
wire   [9:0] tmp_5_fu_737_p20;
wire   [9:0] tmp_5_fu_737_p22;
wire   [9:0] tmp_5_fu_737_p24;
wire   [9:0] tmp_5_fu_737_p25;
wire   [9:0] tmp_6_fu_792_p4;
wire   [9:0] tmp_6_fu_792_p6;
wire   [9:0] tmp_6_fu_792_p8;
wire   [9:0] tmp_6_fu_792_p10;
wire   [9:0] tmp_6_fu_792_p12;
wire   [9:0] tmp_6_fu_792_p14;
wire   [9:0] tmp_6_fu_792_p16;
wire   [9:0] tmp_6_fu_792_p18;
wire   [9:0] tmp_6_fu_792_p20;
wire   [9:0] tmp_6_fu_792_p22;
wire   [9:0] tmp_6_fu_792_p24;
wire   [9:0] tmp_6_fu_792_p25;
wire   [9:0] tmp_7_fu_847_p4;
wire   [9:0] tmp_7_fu_847_p6;
wire   [9:0] tmp_7_fu_847_p8;
wire   [9:0] tmp_7_fu_847_p10;
wire   [9:0] tmp_7_fu_847_p12;
wire   [9:0] tmp_7_fu_847_p14;
wire   [9:0] tmp_7_fu_847_p16;
wire   [9:0] tmp_7_fu_847_p18;
wire   [9:0] tmp_7_fu_847_p20;
wire   [9:0] tmp_7_fu_847_p22;
wire   [9:0] tmp_7_fu_847_p24;
wire   [9:0] tmp_7_fu_847_p25;
wire   [9:0] tmp_8_fu_902_p4;
wire   [9:0] tmp_8_fu_902_p6;
wire   [9:0] tmp_8_fu_902_p8;
wire   [9:0] tmp_8_fu_902_p10;
wire   [9:0] tmp_8_fu_902_p12;
wire   [9:0] tmp_8_fu_902_p14;
wire   [9:0] tmp_8_fu_902_p16;
wire   [9:0] tmp_8_fu_902_p18;
wire   [9:0] tmp_8_fu_902_p20;
wire   [9:0] tmp_8_fu_902_p22;
wire   [9:0] tmp_8_fu_902_p24;
wire   [9:0] tmp_8_fu_902_p25;
wire   [9:0] tmp_9_fu_957_p4;
wire   [9:0] tmp_9_fu_957_p6;
wire   [9:0] tmp_9_fu_957_p8;
wire   [9:0] tmp_9_fu_957_p10;
wire   [9:0] tmp_9_fu_957_p12;
wire   [9:0] tmp_9_fu_957_p14;
wire   [9:0] tmp_9_fu_957_p16;
wire   [9:0] tmp_9_fu_957_p18;
wire   [9:0] tmp_9_fu_957_p20;
wire   [9:0] tmp_9_fu_957_p22;
wire   [9:0] tmp_9_fu_957_p24;
wire   [9:0] tmp_9_fu_957_p25;
wire   [9:0] tmp_1_fu_1012_p4;
wire   [9:0] tmp_1_fu_1012_p6;
wire   [9:0] tmp_1_fu_1012_p8;
wire   [9:0] tmp_1_fu_1012_p10;
wire   [9:0] tmp_1_fu_1012_p12;
wire   [9:0] tmp_1_fu_1012_p14;
wire   [9:0] tmp_1_fu_1012_p16;
wire   [9:0] tmp_1_fu_1012_p18;
wire   [9:0] tmp_1_fu_1012_p20;
wire   [9:0] tmp_1_fu_1012_p22;
wire   [9:0] tmp_1_fu_1012_p24;
wire   [9:0] tmp_1_fu_1012_p25;
wire   [9:0] tmp_10_fu_1067_p4;
wire   [9:0] tmp_10_fu_1067_p6;
wire   [9:0] tmp_10_fu_1067_p8;
wire   [9:0] tmp_10_fu_1067_p10;
wire   [9:0] tmp_10_fu_1067_p12;
wire   [9:0] tmp_10_fu_1067_p14;
wire   [9:0] tmp_10_fu_1067_p16;
wire   [9:0] tmp_10_fu_1067_p18;
wire   [9:0] tmp_10_fu_1067_p20;
wire   [9:0] tmp_10_fu_1067_p22;
wire   [9:0] tmp_10_fu_1067_p24;
wire   [9:0] tmp_10_fu_1067_p25;
wire   [9:0] tmp_11_fu_1122_p4;
wire   [9:0] tmp_11_fu_1122_p6;
wire   [9:0] tmp_11_fu_1122_p8;
wire   [9:0] tmp_11_fu_1122_p10;
wire   [9:0] tmp_11_fu_1122_p12;
wire   [9:0] tmp_11_fu_1122_p14;
wire   [9:0] tmp_11_fu_1122_p16;
wire   [9:0] tmp_11_fu_1122_p18;
wire   [9:0] tmp_11_fu_1122_p20;
wire   [9:0] tmp_11_fu_1122_p22;
wire   [9:0] tmp_11_fu_1122_p24;
wire   [9:0] tmp_11_fu_1122_p25;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire   [3:0] tmp_s_fu_517_p1;
wire   [3:0] tmp_s_fu_517_p3;
wire   [3:0] tmp_s_fu_517_p5;
wire   [3:0] tmp_s_fu_517_p7;
wire   [3:0] tmp_s_fu_517_p9;
wire   [3:0] tmp_s_fu_517_p11;
wire   [3:0] tmp_s_fu_517_p13;
wire   [3:0] tmp_s_fu_517_p15;
wire  signed [3:0] tmp_s_fu_517_p17;
wire  signed [3:0] tmp_s_fu_517_p19;
wire  signed [3:0] tmp_s_fu_517_p21;
wire  signed [3:0] tmp_s_fu_517_p23;
wire   [3:0] tmp_2_fu_572_p1;
wire   [3:0] tmp_2_fu_572_p3;
wire   [3:0] tmp_2_fu_572_p5;
wire   [3:0] tmp_2_fu_572_p7;
wire   [3:0] tmp_2_fu_572_p9;
wire   [3:0] tmp_2_fu_572_p11;
wire   [3:0] tmp_2_fu_572_p13;
wire   [3:0] tmp_2_fu_572_p15;
wire  signed [3:0] tmp_2_fu_572_p17;
wire  signed [3:0] tmp_2_fu_572_p19;
wire  signed [3:0] tmp_2_fu_572_p21;
wire  signed [3:0] tmp_2_fu_572_p23;
wire   [3:0] tmp_3_fu_627_p1;
wire   [3:0] tmp_3_fu_627_p3;
wire   [3:0] tmp_3_fu_627_p5;
wire   [3:0] tmp_3_fu_627_p7;
wire   [3:0] tmp_3_fu_627_p9;
wire   [3:0] tmp_3_fu_627_p11;
wire   [3:0] tmp_3_fu_627_p13;
wire   [3:0] tmp_3_fu_627_p15;
wire  signed [3:0] tmp_3_fu_627_p17;
wire  signed [3:0] tmp_3_fu_627_p19;
wire  signed [3:0] tmp_3_fu_627_p21;
wire  signed [3:0] tmp_3_fu_627_p23;
wire   [3:0] tmp_4_fu_682_p1;
wire   [3:0] tmp_4_fu_682_p3;
wire   [3:0] tmp_4_fu_682_p5;
wire   [3:0] tmp_4_fu_682_p7;
wire   [3:0] tmp_4_fu_682_p9;
wire   [3:0] tmp_4_fu_682_p11;
wire   [3:0] tmp_4_fu_682_p13;
wire   [3:0] tmp_4_fu_682_p15;
wire  signed [3:0] tmp_4_fu_682_p17;
wire  signed [3:0] tmp_4_fu_682_p19;
wire  signed [3:0] tmp_4_fu_682_p21;
wire  signed [3:0] tmp_4_fu_682_p23;
wire   [3:0] tmp_5_fu_737_p1;
wire   [3:0] tmp_5_fu_737_p3;
wire   [3:0] tmp_5_fu_737_p5;
wire   [3:0] tmp_5_fu_737_p7;
wire   [3:0] tmp_5_fu_737_p9;
wire   [3:0] tmp_5_fu_737_p11;
wire   [3:0] tmp_5_fu_737_p13;
wire   [3:0] tmp_5_fu_737_p15;
wire  signed [3:0] tmp_5_fu_737_p17;
wire  signed [3:0] tmp_5_fu_737_p19;
wire  signed [3:0] tmp_5_fu_737_p21;
wire  signed [3:0] tmp_5_fu_737_p23;
wire   [3:0] tmp_6_fu_792_p1;
wire   [3:0] tmp_6_fu_792_p3;
wire   [3:0] tmp_6_fu_792_p5;
wire   [3:0] tmp_6_fu_792_p7;
wire   [3:0] tmp_6_fu_792_p9;
wire   [3:0] tmp_6_fu_792_p11;
wire   [3:0] tmp_6_fu_792_p13;
wire   [3:0] tmp_6_fu_792_p15;
wire  signed [3:0] tmp_6_fu_792_p17;
wire  signed [3:0] tmp_6_fu_792_p19;
wire  signed [3:0] tmp_6_fu_792_p21;
wire  signed [3:0] tmp_6_fu_792_p23;
wire   [3:0] tmp_7_fu_847_p1;
wire   [3:0] tmp_7_fu_847_p3;
wire   [3:0] tmp_7_fu_847_p5;
wire   [3:0] tmp_7_fu_847_p7;
wire   [3:0] tmp_7_fu_847_p9;
wire   [3:0] tmp_7_fu_847_p11;
wire   [3:0] tmp_7_fu_847_p13;
wire   [3:0] tmp_7_fu_847_p15;
wire  signed [3:0] tmp_7_fu_847_p17;
wire  signed [3:0] tmp_7_fu_847_p19;
wire  signed [3:0] tmp_7_fu_847_p21;
wire  signed [3:0] tmp_7_fu_847_p23;
wire   [3:0] tmp_8_fu_902_p1;
wire   [3:0] tmp_8_fu_902_p3;
wire   [3:0] tmp_8_fu_902_p5;
wire   [3:0] tmp_8_fu_902_p7;
wire   [3:0] tmp_8_fu_902_p9;
wire   [3:0] tmp_8_fu_902_p11;
wire   [3:0] tmp_8_fu_902_p13;
wire   [3:0] tmp_8_fu_902_p15;
wire  signed [3:0] tmp_8_fu_902_p17;
wire  signed [3:0] tmp_8_fu_902_p19;
wire  signed [3:0] tmp_8_fu_902_p21;
wire  signed [3:0] tmp_8_fu_902_p23;
wire   [3:0] tmp_9_fu_957_p1;
wire   [3:0] tmp_9_fu_957_p3;
wire   [3:0] tmp_9_fu_957_p5;
wire   [3:0] tmp_9_fu_957_p7;
wire   [3:0] tmp_9_fu_957_p9;
wire   [3:0] tmp_9_fu_957_p11;
wire   [3:0] tmp_9_fu_957_p13;
wire   [3:0] tmp_9_fu_957_p15;
wire  signed [3:0] tmp_9_fu_957_p17;
wire  signed [3:0] tmp_9_fu_957_p19;
wire  signed [3:0] tmp_9_fu_957_p21;
wire  signed [3:0] tmp_9_fu_957_p23;
wire   [3:0] tmp_1_fu_1012_p1;
wire   [3:0] tmp_1_fu_1012_p3;
wire   [3:0] tmp_1_fu_1012_p5;
wire   [3:0] tmp_1_fu_1012_p7;
wire   [3:0] tmp_1_fu_1012_p9;
wire   [3:0] tmp_1_fu_1012_p11;
wire   [3:0] tmp_1_fu_1012_p13;
wire   [3:0] tmp_1_fu_1012_p15;
wire  signed [3:0] tmp_1_fu_1012_p17;
wire  signed [3:0] tmp_1_fu_1012_p19;
wire  signed [3:0] tmp_1_fu_1012_p21;
wire  signed [3:0] tmp_1_fu_1012_p23;
wire   [3:0] tmp_10_fu_1067_p1;
wire   [3:0] tmp_10_fu_1067_p3;
wire   [3:0] tmp_10_fu_1067_p5;
wire   [3:0] tmp_10_fu_1067_p7;
wire   [3:0] tmp_10_fu_1067_p9;
wire   [3:0] tmp_10_fu_1067_p11;
wire   [3:0] tmp_10_fu_1067_p13;
wire   [3:0] tmp_10_fu_1067_p15;
wire  signed [3:0] tmp_10_fu_1067_p17;
wire  signed [3:0] tmp_10_fu_1067_p19;
wire  signed [3:0] tmp_10_fu_1067_p21;
wire  signed [3:0] tmp_10_fu_1067_p23;
wire   [3:0] tmp_11_fu_1122_p1;
wire   [3:0] tmp_11_fu_1122_p3;
wire   [3:0] tmp_11_fu_1122_p5;
wire   [3:0] tmp_11_fu_1122_p7;
wire   [3:0] tmp_11_fu_1122_p9;
wire   [3:0] tmp_11_fu_1122_p11;
wire   [3:0] tmp_11_fu_1122_p13;
wire   [3:0] tmp_11_fu_1122_p15;
wire  signed [3:0] tmp_11_fu_1122_p17;
wire  signed [3:0] tmp_11_fu_1122_p19;
wire  signed [3:0] tmp_11_fu_1122_p21;
wire  signed [3:0] tmp_11_fu_1122_p23;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 icmp_ln350_reg_1273 = 1'd0;
#0 icmp_ln350_reg_1273_pp0_iter1_reg = 1'd0;
#0 sof_2_reg_307 = 1'd0;
#0 axi_last_reg_1277 = 1'd0;
#0 axi_last_reg_1277_pp0_iter1_reg = 1'd0;
#0 tmp_s_reg_1282 = 10'd0;
#0 tmp_2_reg_1287 = 10'd0;
#0 tmp_3_reg_1292 = 10'd0;
#0 tmp_4_reg_1297 = 10'd0;
#0 tmp_5_reg_1302 = 10'd0;
#0 tmp_6_reg_1307 = 10'd0;
#0 tmp_7_reg_1312 = 10'd0;
#0 tmp_8_reg_1317 = 10'd0;
#0 tmp_9_reg_1322 = 10'd0;
#0 tmp_1_reg_1327 = 10'd0;
#0 tmp_10_reg_1332 = 10'd0;
#0 tmp_11_reg_1337 = 10'd0;
#0 j_fu_178 = 11'd0;
#0 ap_done_reg = 1'b0;
#0 ap_loop_exit_ready_pp0_iter1_reg = 1'b0;
#0 ap_loop_exit_ready_pp0_iter2_reg = 1'b0;
end

dpss_vck190_pt_v_frmbuf_rd_0_0_sparsemux_25_4_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 4'h0 ),
    .din0_WIDTH( 10 ),
    .CASE1( 4'h1 ),
    .din1_WIDTH( 10 ),
    .CASE2( 4'h2 ),
    .din2_WIDTH( 10 ),
    .CASE3( 4'h3 ),
    .din3_WIDTH( 10 ),
    .CASE4( 4'h4 ),
    .din4_WIDTH( 10 ),
    .CASE5( 4'h5 ),
    .din5_WIDTH( 10 ),
    .CASE6( 4'h6 ),
    .din6_WIDTH( 10 ),
    .CASE7( 4'h7 ),
    .din7_WIDTH( 10 ),
    .CASE8( 4'h8 ),
    .din8_WIDTH( 10 ),
    .CASE9( 4'h9 ),
    .din9_WIDTH( 10 ),
    .CASE10( 4'hA ),
    .din10_WIDTH( 10 ),
    .CASE11( 4'hB ),
    .din11_WIDTH( 10 ),
    .def_WIDTH( 10 ),
    .sel_WIDTH( 4 ),
    .dout_WIDTH( 10 ))
sparsemux_25_4_10_1_1_U90(
    .din0(pix_fu_403_p1),
    .din1(tmp_s_fu_517_p4),
    .din2(tmp_s_fu_517_p6),
    .din3(tmp_s_fu_517_p8),
    .din4(tmp_s_fu_517_p10),
    .din5(tmp_s_fu_517_p12),
    .din6(tmp_s_fu_517_p14),
    .din7(tmp_s_fu_517_p16),
    .din8(tmp_s_fu_517_p18),
    .din9(tmp_s_fu_517_p20),
    .din10(tmp_s_fu_517_p22),
    .din11(tmp_s_fu_517_p24),
    .def(tmp_s_fu_517_p25),
    .sel(empty_62),
    .dout(tmp_s_fu_517_p27)
);

dpss_vck190_pt_v_frmbuf_rd_0_0_sparsemux_25_4_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 4'h0 ),
    .din0_WIDTH( 10 ),
    .CASE1( 4'h1 ),
    .din1_WIDTH( 10 ),
    .CASE2( 4'h2 ),
    .din2_WIDTH( 10 ),
    .CASE3( 4'h3 ),
    .din3_WIDTH( 10 ),
    .CASE4( 4'h4 ),
    .din4_WIDTH( 10 ),
    .CASE5( 4'h5 ),
    .din5_WIDTH( 10 ),
    .CASE6( 4'h6 ),
    .din6_WIDTH( 10 ),
    .CASE7( 4'h7 ),
    .din7_WIDTH( 10 ),
    .CASE8( 4'h8 ),
    .din8_WIDTH( 10 ),
    .CASE9( 4'h9 ),
    .din9_WIDTH( 10 ),
    .CASE10( 4'hA ),
    .din10_WIDTH( 10 ),
    .CASE11( 4'hB ),
    .din11_WIDTH( 10 ),
    .def_WIDTH( 10 ),
    .sel_WIDTH( 4 ),
    .dout_WIDTH( 10 ))
sparsemux_25_4_10_1_1_U91(
    .din0(pix_fu_403_p1),
    .din1(tmp_2_fu_572_p4),
    .din2(tmp_2_fu_572_p6),
    .din3(tmp_2_fu_572_p8),
    .din4(tmp_2_fu_572_p10),
    .din5(tmp_2_fu_572_p12),
    .din6(tmp_2_fu_572_p14),
    .din7(tmp_2_fu_572_p16),
    .din8(tmp_2_fu_572_p18),
    .din9(tmp_2_fu_572_p20),
    .din10(tmp_2_fu_572_p22),
    .din11(tmp_2_fu_572_p24),
    .def(tmp_2_fu_572_p25),
    .sel(empty_63),
    .dout(tmp_2_fu_572_p27)
);

dpss_vck190_pt_v_frmbuf_rd_0_0_sparsemux_25_4_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 4'h0 ),
    .din0_WIDTH( 10 ),
    .CASE1( 4'h1 ),
    .din1_WIDTH( 10 ),
    .CASE2( 4'h2 ),
    .din2_WIDTH( 10 ),
    .CASE3( 4'h3 ),
    .din3_WIDTH( 10 ),
    .CASE4( 4'h4 ),
    .din4_WIDTH( 10 ),
    .CASE5( 4'h5 ),
    .din5_WIDTH( 10 ),
    .CASE6( 4'h6 ),
    .din6_WIDTH( 10 ),
    .CASE7( 4'h7 ),
    .din7_WIDTH( 10 ),
    .CASE8( 4'h8 ),
    .din8_WIDTH( 10 ),
    .CASE9( 4'h9 ),
    .din9_WIDTH( 10 ),
    .CASE10( 4'hA ),
    .din10_WIDTH( 10 ),
    .CASE11( 4'hB ),
    .din11_WIDTH( 10 ),
    .def_WIDTH( 10 ),
    .sel_WIDTH( 4 ),
    .dout_WIDTH( 10 ))
sparsemux_25_4_10_1_1_U92(
    .din0(pix_fu_403_p1),
    .din1(tmp_3_fu_627_p4),
    .din2(tmp_3_fu_627_p6),
    .din3(tmp_3_fu_627_p8),
    .din4(tmp_3_fu_627_p10),
    .din5(tmp_3_fu_627_p12),
    .din6(tmp_3_fu_627_p14),
    .din7(tmp_3_fu_627_p16),
    .din8(tmp_3_fu_627_p18),
    .din9(tmp_3_fu_627_p20),
    .din10(tmp_3_fu_627_p22),
    .din11(tmp_3_fu_627_p24),
    .def(tmp_3_fu_627_p25),
    .sel(empty_64),
    .dout(tmp_3_fu_627_p27)
);

dpss_vck190_pt_v_frmbuf_rd_0_0_sparsemux_25_4_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 4'h0 ),
    .din0_WIDTH( 10 ),
    .CASE1( 4'h1 ),
    .din1_WIDTH( 10 ),
    .CASE2( 4'h2 ),
    .din2_WIDTH( 10 ),
    .CASE3( 4'h3 ),
    .din3_WIDTH( 10 ),
    .CASE4( 4'h4 ),
    .din4_WIDTH( 10 ),
    .CASE5( 4'h5 ),
    .din5_WIDTH( 10 ),
    .CASE6( 4'h6 ),
    .din6_WIDTH( 10 ),
    .CASE7( 4'h7 ),
    .din7_WIDTH( 10 ),
    .CASE8( 4'h8 ),
    .din8_WIDTH( 10 ),
    .CASE9( 4'h9 ),
    .din9_WIDTH( 10 ),
    .CASE10( 4'hA ),
    .din10_WIDTH( 10 ),
    .CASE11( 4'hB ),
    .din11_WIDTH( 10 ),
    .def_WIDTH( 10 ),
    .sel_WIDTH( 4 ),
    .dout_WIDTH( 10 ))
sparsemux_25_4_10_1_1_U93(
    .din0(pix_fu_403_p1),
    .din1(tmp_4_fu_682_p4),
    .din2(tmp_4_fu_682_p6),
    .din3(tmp_4_fu_682_p8),
    .din4(tmp_4_fu_682_p10),
    .din5(tmp_4_fu_682_p12),
    .din6(tmp_4_fu_682_p14),
    .din7(tmp_4_fu_682_p16),
    .din8(tmp_4_fu_682_p18),
    .din9(tmp_4_fu_682_p20),
    .din10(tmp_4_fu_682_p22),
    .din11(tmp_4_fu_682_p24),
    .def(tmp_4_fu_682_p25),
    .sel(empty_65),
    .dout(tmp_4_fu_682_p27)
);

dpss_vck190_pt_v_frmbuf_rd_0_0_sparsemux_25_4_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 4'h0 ),
    .din0_WIDTH( 10 ),
    .CASE1( 4'h1 ),
    .din1_WIDTH( 10 ),
    .CASE2( 4'h2 ),
    .din2_WIDTH( 10 ),
    .CASE3( 4'h3 ),
    .din3_WIDTH( 10 ),
    .CASE4( 4'h4 ),
    .din4_WIDTH( 10 ),
    .CASE5( 4'h5 ),
    .din5_WIDTH( 10 ),
    .CASE6( 4'h6 ),
    .din6_WIDTH( 10 ),
    .CASE7( 4'h7 ),
    .din7_WIDTH( 10 ),
    .CASE8( 4'h8 ),
    .din8_WIDTH( 10 ),
    .CASE9( 4'h9 ),
    .din9_WIDTH( 10 ),
    .CASE10( 4'hA ),
    .din10_WIDTH( 10 ),
    .CASE11( 4'hB ),
    .din11_WIDTH( 10 ),
    .def_WIDTH( 10 ),
    .sel_WIDTH( 4 ),
    .dout_WIDTH( 10 ))
sparsemux_25_4_10_1_1_U94(
    .din0(pix_fu_403_p1),
    .din1(tmp_5_fu_737_p4),
    .din2(tmp_5_fu_737_p6),
    .din3(tmp_5_fu_737_p8),
    .din4(tmp_5_fu_737_p10),
    .din5(tmp_5_fu_737_p12),
    .din6(tmp_5_fu_737_p14),
    .din7(tmp_5_fu_737_p16),
    .din8(tmp_5_fu_737_p18),
    .din9(tmp_5_fu_737_p20),
    .din10(tmp_5_fu_737_p22),
    .din11(tmp_5_fu_737_p24),
    .def(tmp_5_fu_737_p25),
    .sel(empty_66),
    .dout(tmp_5_fu_737_p27)
);

dpss_vck190_pt_v_frmbuf_rd_0_0_sparsemux_25_4_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 4'h0 ),
    .din0_WIDTH( 10 ),
    .CASE1( 4'h1 ),
    .din1_WIDTH( 10 ),
    .CASE2( 4'h2 ),
    .din2_WIDTH( 10 ),
    .CASE3( 4'h3 ),
    .din3_WIDTH( 10 ),
    .CASE4( 4'h4 ),
    .din4_WIDTH( 10 ),
    .CASE5( 4'h5 ),
    .din5_WIDTH( 10 ),
    .CASE6( 4'h6 ),
    .din6_WIDTH( 10 ),
    .CASE7( 4'h7 ),
    .din7_WIDTH( 10 ),
    .CASE8( 4'h8 ),
    .din8_WIDTH( 10 ),
    .CASE9( 4'h9 ),
    .din9_WIDTH( 10 ),
    .CASE10( 4'hA ),
    .din10_WIDTH( 10 ),
    .CASE11( 4'hB ),
    .din11_WIDTH( 10 ),
    .def_WIDTH( 10 ),
    .sel_WIDTH( 4 ),
    .dout_WIDTH( 10 ))
sparsemux_25_4_10_1_1_U95(
    .din0(pix_fu_403_p1),
    .din1(tmp_6_fu_792_p4),
    .din2(tmp_6_fu_792_p6),
    .din3(tmp_6_fu_792_p8),
    .din4(tmp_6_fu_792_p10),
    .din5(tmp_6_fu_792_p12),
    .din6(tmp_6_fu_792_p14),
    .din7(tmp_6_fu_792_p16),
    .din8(tmp_6_fu_792_p18),
    .din9(tmp_6_fu_792_p20),
    .din10(tmp_6_fu_792_p22),
    .din11(tmp_6_fu_792_p24),
    .def(tmp_6_fu_792_p25),
    .sel(empty_67),
    .dout(tmp_6_fu_792_p27)
);

dpss_vck190_pt_v_frmbuf_rd_0_0_sparsemux_25_4_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 4'h0 ),
    .din0_WIDTH( 10 ),
    .CASE1( 4'h1 ),
    .din1_WIDTH( 10 ),
    .CASE2( 4'h2 ),
    .din2_WIDTH( 10 ),
    .CASE3( 4'h3 ),
    .din3_WIDTH( 10 ),
    .CASE4( 4'h4 ),
    .din4_WIDTH( 10 ),
    .CASE5( 4'h5 ),
    .din5_WIDTH( 10 ),
    .CASE6( 4'h6 ),
    .din6_WIDTH( 10 ),
    .CASE7( 4'h7 ),
    .din7_WIDTH( 10 ),
    .CASE8( 4'h8 ),
    .din8_WIDTH( 10 ),
    .CASE9( 4'h9 ),
    .din9_WIDTH( 10 ),
    .CASE10( 4'hA ),
    .din10_WIDTH( 10 ),
    .CASE11( 4'hB ),
    .din11_WIDTH( 10 ),
    .def_WIDTH( 10 ),
    .sel_WIDTH( 4 ),
    .dout_WIDTH( 10 ))
sparsemux_25_4_10_1_1_U96(
    .din0(pix_fu_403_p1),
    .din1(tmp_7_fu_847_p4),
    .din2(tmp_7_fu_847_p6),
    .din3(tmp_7_fu_847_p8),
    .din4(tmp_7_fu_847_p10),
    .din5(tmp_7_fu_847_p12),
    .din6(tmp_7_fu_847_p14),
    .din7(tmp_7_fu_847_p16),
    .din8(tmp_7_fu_847_p18),
    .din9(tmp_7_fu_847_p20),
    .din10(tmp_7_fu_847_p22),
    .din11(tmp_7_fu_847_p24),
    .def(tmp_7_fu_847_p25),
    .sel(empty_68),
    .dout(tmp_7_fu_847_p27)
);

dpss_vck190_pt_v_frmbuf_rd_0_0_sparsemux_25_4_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 4'h0 ),
    .din0_WIDTH( 10 ),
    .CASE1( 4'h1 ),
    .din1_WIDTH( 10 ),
    .CASE2( 4'h2 ),
    .din2_WIDTH( 10 ),
    .CASE3( 4'h3 ),
    .din3_WIDTH( 10 ),
    .CASE4( 4'h4 ),
    .din4_WIDTH( 10 ),
    .CASE5( 4'h5 ),
    .din5_WIDTH( 10 ),
    .CASE6( 4'h6 ),
    .din6_WIDTH( 10 ),
    .CASE7( 4'h7 ),
    .din7_WIDTH( 10 ),
    .CASE8( 4'h8 ),
    .din8_WIDTH( 10 ),
    .CASE9( 4'h9 ),
    .din9_WIDTH( 10 ),
    .CASE10( 4'hA ),
    .din10_WIDTH( 10 ),
    .CASE11( 4'hB ),
    .din11_WIDTH( 10 ),
    .def_WIDTH( 10 ),
    .sel_WIDTH( 4 ),
    .dout_WIDTH( 10 ))
sparsemux_25_4_10_1_1_U97(
    .din0(pix_fu_403_p1),
    .din1(tmp_8_fu_902_p4),
    .din2(tmp_8_fu_902_p6),
    .din3(tmp_8_fu_902_p8),
    .din4(tmp_8_fu_902_p10),
    .din5(tmp_8_fu_902_p12),
    .din6(tmp_8_fu_902_p14),
    .din7(tmp_8_fu_902_p16),
    .din8(tmp_8_fu_902_p18),
    .din9(tmp_8_fu_902_p20),
    .din10(tmp_8_fu_902_p22),
    .din11(tmp_8_fu_902_p24),
    .def(tmp_8_fu_902_p25),
    .sel(empty_69),
    .dout(tmp_8_fu_902_p27)
);

dpss_vck190_pt_v_frmbuf_rd_0_0_sparsemux_25_4_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 4'h0 ),
    .din0_WIDTH( 10 ),
    .CASE1( 4'h1 ),
    .din1_WIDTH( 10 ),
    .CASE2( 4'h2 ),
    .din2_WIDTH( 10 ),
    .CASE3( 4'h3 ),
    .din3_WIDTH( 10 ),
    .CASE4( 4'h4 ),
    .din4_WIDTH( 10 ),
    .CASE5( 4'h5 ),
    .din5_WIDTH( 10 ),
    .CASE6( 4'h6 ),
    .din6_WIDTH( 10 ),
    .CASE7( 4'h7 ),
    .din7_WIDTH( 10 ),
    .CASE8( 4'h8 ),
    .din8_WIDTH( 10 ),
    .CASE9( 4'h9 ),
    .din9_WIDTH( 10 ),
    .CASE10( 4'hA ),
    .din10_WIDTH( 10 ),
    .CASE11( 4'hB ),
    .din11_WIDTH( 10 ),
    .def_WIDTH( 10 ),
    .sel_WIDTH( 4 ),
    .dout_WIDTH( 10 ))
sparsemux_25_4_10_1_1_U98(
    .din0(pix_fu_403_p1),
    .din1(tmp_9_fu_957_p4),
    .din2(tmp_9_fu_957_p6),
    .din3(tmp_9_fu_957_p8),
    .din4(tmp_9_fu_957_p10),
    .din5(tmp_9_fu_957_p12),
    .din6(tmp_9_fu_957_p14),
    .din7(tmp_9_fu_957_p16),
    .din8(tmp_9_fu_957_p18),
    .din9(tmp_9_fu_957_p20),
    .din10(tmp_9_fu_957_p22),
    .din11(tmp_9_fu_957_p24),
    .def(tmp_9_fu_957_p25),
    .sel(empty_70),
    .dout(tmp_9_fu_957_p27)
);

dpss_vck190_pt_v_frmbuf_rd_0_0_sparsemux_25_4_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 4'h0 ),
    .din0_WIDTH( 10 ),
    .CASE1( 4'h1 ),
    .din1_WIDTH( 10 ),
    .CASE2( 4'h2 ),
    .din2_WIDTH( 10 ),
    .CASE3( 4'h3 ),
    .din3_WIDTH( 10 ),
    .CASE4( 4'h4 ),
    .din4_WIDTH( 10 ),
    .CASE5( 4'h5 ),
    .din5_WIDTH( 10 ),
    .CASE6( 4'h6 ),
    .din6_WIDTH( 10 ),
    .CASE7( 4'h7 ),
    .din7_WIDTH( 10 ),
    .CASE8( 4'h8 ),
    .din8_WIDTH( 10 ),
    .CASE9( 4'h9 ),
    .din9_WIDTH( 10 ),
    .CASE10( 4'hA ),
    .din10_WIDTH( 10 ),
    .CASE11( 4'hB ),
    .din11_WIDTH( 10 ),
    .def_WIDTH( 10 ),
    .sel_WIDTH( 4 ),
    .dout_WIDTH( 10 ))
sparsemux_25_4_10_1_1_U99(
    .din0(pix_fu_403_p1),
    .din1(tmp_1_fu_1012_p4),
    .din2(tmp_1_fu_1012_p6),
    .din3(tmp_1_fu_1012_p8),
    .din4(tmp_1_fu_1012_p10),
    .din5(tmp_1_fu_1012_p12),
    .din6(tmp_1_fu_1012_p14),
    .din7(tmp_1_fu_1012_p16),
    .din8(tmp_1_fu_1012_p18),
    .din9(tmp_1_fu_1012_p20),
    .din10(tmp_1_fu_1012_p22),
    .din11(tmp_1_fu_1012_p24),
    .def(tmp_1_fu_1012_p25),
    .sel(empty_71),
    .dout(tmp_1_fu_1012_p27)
);

dpss_vck190_pt_v_frmbuf_rd_0_0_sparsemux_25_4_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 4'h0 ),
    .din0_WIDTH( 10 ),
    .CASE1( 4'h1 ),
    .din1_WIDTH( 10 ),
    .CASE2( 4'h2 ),
    .din2_WIDTH( 10 ),
    .CASE3( 4'h3 ),
    .din3_WIDTH( 10 ),
    .CASE4( 4'h4 ),
    .din4_WIDTH( 10 ),
    .CASE5( 4'h5 ),
    .din5_WIDTH( 10 ),
    .CASE6( 4'h6 ),
    .din6_WIDTH( 10 ),
    .CASE7( 4'h7 ),
    .din7_WIDTH( 10 ),
    .CASE8( 4'h8 ),
    .din8_WIDTH( 10 ),
    .CASE9( 4'h9 ),
    .din9_WIDTH( 10 ),
    .CASE10( 4'hA ),
    .din10_WIDTH( 10 ),
    .CASE11( 4'hB ),
    .din11_WIDTH( 10 ),
    .def_WIDTH( 10 ),
    .sel_WIDTH( 4 ),
    .dout_WIDTH( 10 ))
sparsemux_25_4_10_1_1_U100(
    .din0(pix_fu_403_p1),
    .din1(tmp_10_fu_1067_p4),
    .din2(tmp_10_fu_1067_p6),
    .din3(tmp_10_fu_1067_p8),
    .din4(tmp_10_fu_1067_p10),
    .din5(tmp_10_fu_1067_p12),
    .din6(tmp_10_fu_1067_p14),
    .din7(tmp_10_fu_1067_p16),
    .din8(tmp_10_fu_1067_p18),
    .din9(tmp_10_fu_1067_p20),
    .din10(tmp_10_fu_1067_p22),
    .din11(tmp_10_fu_1067_p24),
    .def(tmp_10_fu_1067_p25),
    .sel(empty_72),
    .dout(tmp_10_fu_1067_p27)
);

dpss_vck190_pt_v_frmbuf_rd_0_0_sparsemux_25_4_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 4'h0 ),
    .din0_WIDTH( 10 ),
    .CASE1( 4'h1 ),
    .din1_WIDTH( 10 ),
    .CASE2( 4'h2 ),
    .din2_WIDTH( 10 ),
    .CASE3( 4'h3 ),
    .din3_WIDTH( 10 ),
    .CASE4( 4'h4 ),
    .din4_WIDTH( 10 ),
    .CASE5( 4'h5 ),
    .din5_WIDTH( 10 ),
    .CASE6( 4'h6 ),
    .din6_WIDTH( 10 ),
    .CASE7( 4'h7 ),
    .din7_WIDTH( 10 ),
    .CASE8( 4'h8 ),
    .din8_WIDTH( 10 ),
    .CASE9( 4'h9 ),
    .din9_WIDTH( 10 ),
    .CASE10( 4'hA ),
    .din10_WIDTH( 10 ),
    .CASE11( 4'hB ),
    .din11_WIDTH( 10 ),
    .def_WIDTH( 10 ),
    .sel_WIDTH( 4 ),
    .dout_WIDTH( 10 ))
sparsemux_25_4_10_1_1_U101(
    .din0(pix_fu_403_p1),
    .din1(tmp_11_fu_1122_p4),
    .din2(tmp_11_fu_1122_p6),
    .din3(tmp_11_fu_1122_p8),
    .din4(tmp_11_fu_1122_p10),
    .din5(tmp_11_fu_1122_p12),
    .din6(tmp_11_fu_1122_p14),
    .din7(tmp_11_fu_1122_p16),
    .din8(tmp_11_fu_1122_p18),
    .din9(tmp_11_fu_1122_p20),
    .din10(tmp_11_fu_1122_p22),
    .din11(tmp_11_fu_1122_p24),
    .def(tmp_11_fu_1122_p25),
    .sel(empty),
    .dout(tmp_11_fu_1122_p27)
);

dpss_vck190_pt_v_frmbuf_rd_0_0_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter2_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_loop_exit_ready_pp0_iter2_reg <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b0))) begin
            ap_loop_exit_ready_pp0_iter2_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        axi_last_reg_1277 <= 1'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            axi_last_reg_1277 <= axi_last_fu_383_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        axi_last_reg_1277_pp0_iter1_reg <= 1'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            axi_last_reg_1277_pp0_iter1_reg <= axi_last_reg_1277;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        icmp_ln350_reg_1273 <= 1'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            icmp_ln350_reg_1273 <= icmp_ln350_fu_373_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        icmp_ln350_reg_1273_pp0_iter1_reg <= 1'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            icmp_ln350_reg_1273_pp0_iter1_reg <= icmp_ln350_reg_1273;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        j_fu_178 <= 11'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            if (((icmp_ln350_fu_373_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                j_fu_178 <= j_2_fu_367_p2;
            end else if ((ap_loop_init == 1'b1)) begin
                j_fu_178 <= 11'd0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        sof_2_reg_307 <= 1'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln350_reg_1273_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            sof_2_reg_307 <= 1'd0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
            sof_2_reg_307 <= sof;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_10_reg_1332 <= 10'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            tmp_10_reg_1332 <= tmp_10_fu_1067_p27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_11_reg_1337 <= 10'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            tmp_11_reg_1337 <= tmp_11_fu_1122_p27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_1_reg_1327 <= 10'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            tmp_1_reg_1327 <= tmp_1_fu_1012_p27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_2_reg_1287 <= 10'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            tmp_2_reg_1287 <= tmp_2_fu_572_p27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_3_reg_1292 <= 10'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            tmp_3_reg_1292 <= tmp_3_fu_627_p27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_4_reg_1297 <= 10'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            tmp_4_reg_1297 <= tmp_4_fu_682_p27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_5_reg_1302 <= 10'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            tmp_5_reg_1302 <= tmp_5_fu_737_p27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_6_reg_1307 <= 10'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            tmp_6_reg_1307 <= tmp_6_fu_792_p27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_7_reg_1312 <= 10'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            tmp_7_reg_1312 <= tmp_7_fu_847_p27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_8_reg_1317 <= 10'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            tmp_8_reg_1317 <= tmp_8_fu_902_p27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_9_reg_1322 <= 10'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            tmp_9_reg_1322 <= tmp_9_fu_957_p27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_s_reg_1282 <= 10'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            tmp_s_reg_1282 <= tmp_s_fu_517_p27;
        end
    end
end

always @ (*) begin
    if (((icmp_ln350_fu_373_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter2_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_j_1 = 11'd0;
    end else begin
        ap_sig_allocacmp_j_1 = j_fu_178;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln350_reg_1273 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        img_blk_n = img_empty_n;
    end else begin
        img_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln350_reg_1273 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        img_read = 1'b1;
    end else begin
        img_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln350_reg_1273_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        m_axis_video_TDATA_blk_n = m_axis_video_TREADY;
    end else begin
        m_axis_video_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln350_reg_1273_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        m_axis_video_TVALID = 1'b1;
    end else begin
        m_axis_video_TVALID = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_block_state3_pp0_stage0_iter2)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state2_pp0_stage0_iter1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter2 == 1'b1) & ((1'b1 == ap_block_state3_io) | (1'b1 == ap_block_state3_pp0_stage0_iter2))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state2_pp0_stage0_iter1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter2 == 1'b1) & ((1'b1 == ap_block_state3_io) | (1'b1 == ap_block_state3_pp0_stage0_iter2))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state2_pp0_stage0_iter1)));
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = ((icmp_ln350_reg_1273 == 1'd0) & (img_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state3_io = ((icmp_ln350_reg_1273_pp0_iter1_reg == 1'd0) & (m_axis_video_TREADY == 1'b0));
end

always @ (*) begin
    ap_block_state3_pp0_stage0_iter2 = ((icmp_ln350_reg_1273_pp0_iter1_reg == 1'd0) & (m_axis_video_TREADY == 1'b0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign axi_last_fu_383_p2 = ((zext_ln350_fu_379_p1 == sub) ? 1'b1 : 1'b0);

assign icmp_ln350_fu_373_p2 = ((ap_sig_allocacmp_j_1 == div_cast1) ? 1'b1 : 1'b0);

assign j_2_fu_367_p2 = (ap_sig_allocacmp_j_1 + 11'd1);

assign m_axis_video_TDATA = {{{{{{{{{{{{tmp_11_reg_1337}, {tmp_10_reg_1332}}, {tmp_1_reg_1327}}, {tmp_9_reg_1322}}, {tmp_8_reg_1317}}, {tmp_7_reg_1312}}, {tmp_6_reg_1307}}, {tmp_5_reg_1302}}, {tmp_4_reg_1297}}, {tmp_3_reg_1292}}, {tmp_2_reg_1287}}, {tmp_s_reg_1282}};

assign m_axis_video_TDEST = 'bx;

assign m_axis_video_TID = 'bx;

assign m_axis_video_TKEEP = 15'd32767;

assign m_axis_video_TLAST = axi_last_reg_1277_pp0_iter1_reg;

assign m_axis_video_TSTRB = 'bx;

assign m_axis_video_TUSER = sof_2_reg_307;

assign pix_fu_403_p1 = img_dout[9:0];

assign tmp_10_fu_1067_p10 = {{img_dout[49:40]}};

assign tmp_10_fu_1067_p12 = {{img_dout[59:50]}};

assign tmp_10_fu_1067_p14 = {{img_dout[69:60]}};

assign tmp_10_fu_1067_p16 = {{img_dout[79:70]}};

assign tmp_10_fu_1067_p18 = {{img_dout[89:80]}};

assign tmp_10_fu_1067_p20 = {{img_dout[99:90]}};

assign tmp_10_fu_1067_p22 = {{img_dout[109:100]}};

assign tmp_10_fu_1067_p24 = {{img_dout[119:110]}};

assign tmp_10_fu_1067_p25 = 'bx;

assign tmp_10_fu_1067_p4 = {{img_dout[19:10]}};

assign tmp_10_fu_1067_p6 = {{img_dout[29:20]}};

assign tmp_10_fu_1067_p8 = {{img_dout[39:30]}};

assign tmp_11_fu_1122_p10 = {{img_dout[49:40]}};

assign tmp_11_fu_1122_p12 = {{img_dout[59:50]}};

assign tmp_11_fu_1122_p14 = {{img_dout[69:60]}};

assign tmp_11_fu_1122_p16 = {{img_dout[79:70]}};

assign tmp_11_fu_1122_p18 = {{img_dout[89:80]}};

assign tmp_11_fu_1122_p20 = {{img_dout[99:90]}};

assign tmp_11_fu_1122_p22 = {{img_dout[109:100]}};

assign tmp_11_fu_1122_p24 = {{img_dout[119:110]}};

assign tmp_11_fu_1122_p25 = 'bx;

assign tmp_11_fu_1122_p4 = {{img_dout[19:10]}};

assign tmp_11_fu_1122_p6 = {{img_dout[29:20]}};

assign tmp_11_fu_1122_p8 = {{img_dout[39:30]}};

assign tmp_1_fu_1012_p10 = {{img_dout[49:40]}};

assign tmp_1_fu_1012_p12 = {{img_dout[59:50]}};

assign tmp_1_fu_1012_p14 = {{img_dout[69:60]}};

assign tmp_1_fu_1012_p16 = {{img_dout[79:70]}};

assign tmp_1_fu_1012_p18 = {{img_dout[89:80]}};

assign tmp_1_fu_1012_p20 = {{img_dout[99:90]}};

assign tmp_1_fu_1012_p22 = {{img_dout[109:100]}};

assign tmp_1_fu_1012_p24 = {{img_dout[119:110]}};

assign tmp_1_fu_1012_p25 = 'bx;

assign tmp_1_fu_1012_p4 = {{img_dout[19:10]}};

assign tmp_1_fu_1012_p6 = {{img_dout[29:20]}};

assign tmp_1_fu_1012_p8 = {{img_dout[39:30]}};

assign tmp_2_fu_572_p10 = {{img_dout[49:40]}};

assign tmp_2_fu_572_p12 = {{img_dout[59:50]}};

assign tmp_2_fu_572_p14 = {{img_dout[69:60]}};

assign tmp_2_fu_572_p16 = {{img_dout[79:70]}};

assign tmp_2_fu_572_p18 = {{img_dout[89:80]}};

assign tmp_2_fu_572_p20 = {{img_dout[99:90]}};

assign tmp_2_fu_572_p22 = {{img_dout[109:100]}};

assign tmp_2_fu_572_p24 = {{img_dout[119:110]}};

assign tmp_2_fu_572_p25 = 'bx;

assign tmp_2_fu_572_p4 = {{img_dout[19:10]}};

assign tmp_2_fu_572_p6 = {{img_dout[29:20]}};

assign tmp_2_fu_572_p8 = {{img_dout[39:30]}};

assign tmp_3_fu_627_p10 = {{img_dout[49:40]}};

assign tmp_3_fu_627_p12 = {{img_dout[59:50]}};

assign tmp_3_fu_627_p14 = {{img_dout[69:60]}};

assign tmp_3_fu_627_p16 = {{img_dout[79:70]}};

assign tmp_3_fu_627_p18 = {{img_dout[89:80]}};

assign tmp_3_fu_627_p20 = {{img_dout[99:90]}};

assign tmp_3_fu_627_p22 = {{img_dout[109:100]}};

assign tmp_3_fu_627_p24 = {{img_dout[119:110]}};

assign tmp_3_fu_627_p25 = 'bx;

assign tmp_3_fu_627_p4 = {{img_dout[19:10]}};

assign tmp_3_fu_627_p6 = {{img_dout[29:20]}};

assign tmp_3_fu_627_p8 = {{img_dout[39:30]}};

assign tmp_4_fu_682_p10 = {{img_dout[49:40]}};

assign tmp_4_fu_682_p12 = {{img_dout[59:50]}};

assign tmp_4_fu_682_p14 = {{img_dout[69:60]}};

assign tmp_4_fu_682_p16 = {{img_dout[79:70]}};

assign tmp_4_fu_682_p18 = {{img_dout[89:80]}};

assign tmp_4_fu_682_p20 = {{img_dout[99:90]}};

assign tmp_4_fu_682_p22 = {{img_dout[109:100]}};

assign tmp_4_fu_682_p24 = {{img_dout[119:110]}};

assign tmp_4_fu_682_p25 = 'bx;

assign tmp_4_fu_682_p4 = {{img_dout[19:10]}};

assign tmp_4_fu_682_p6 = {{img_dout[29:20]}};

assign tmp_4_fu_682_p8 = {{img_dout[39:30]}};

assign tmp_5_fu_737_p10 = {{img_dout[49:40]}};

assign tmp_5_fu_737_p12 = {{img_dout[59:50]}};

assign tmp_5_fu_737_p14 = {{img_dout[69:60]}};

assign tmp_5_fu_737_p16 = {{img_dout[79:70]}};

assign tmp_5_fu_737_p18 = {{img_dout[89:80]}};

assign tmp_5_fu_737_p20 = {{img_dout[99:90]}};

assign tmp_5_fu_737_p22 = {{img_dout[109:100]}};

assign tmp_5_fu_737_p24 = {{img_dout[119:110]}};

assign tmp_5_fu_737_p25 = 'bx;

assign tmp_5_fu_737_p4 = {{img_dout[19:10]}};

assign tmp_5_fu_737_p6 = {{img_dout[29:20]}};

assign tmp_5_fu_737_p8 = {{img_dout[39:30]}};

assign tmp_6_fu_792_p10 = {{img_dout[49:40]}};

assign tmp_6_fu_792_p12 = {{img_dout[59:50]}};

assign tmp_6_fu_792_p14 = {{img_dout[69:60]}};

assign tmp_6_fu_792_p16 = {{img_dout[79:70]}};

assign tmp_6_fu_792_p18 = {{img_dout[89:80]}};

assign tmp_6_fu_792_p20 = {{img_dout[99:90]}};

assign tmp_6_fu_792_p22 = {{img_dout[109:100]}};

assign tmp_6_fu_792_p24 = {{img_dout[119:110]}};

assign tmp_6_fu_792_p25 = 'bx;

assign tmp_6_fu_792_p4 = {{img_dout[19:10]}};

assign tmp_6_fu_792_p6 = {{img_dout[29:20]}};

assign tmp_6_fu_792_p8 = {{img_dout[39:30]}};

assign tmp_7_fu_847_p10 = {{img_dout[49:40]}};

assign tmp_7_fu_847_p12 = {{img_dout[59:50]}};

assign tmp_7_fu_847_p14 = {{img_dout[69:60]}};

assign tmp_7_fu_847_p16 = {{img_dout[79:70]}};

assign tmp_7_fu_847_p18 = {{img_dout[89:80]}};

assign tmp_7_fu_847_p20 = {{img_dout[99:90]}};

assign tmp_7_fu_847_p22 = {{img_dout[109:100]}};

assign tmp_7_fu_847_p24 = {{img_dout[119:110]}};

assign tmp_7_fu_847_p25 = 'bx;

assign tmp_7_fu_847_p4 = {{img_dout[19:10]}};

assign tmp_7_fu_847_p6 = {{img_dout[29:20]}};

assign tmp_7_fu_847_p8 = {{img_dout[39:30]}};

assign tmp_8_fu_902_p10 = {{img_dout[49:40]}};

assign tmp_8_fu_902_p12 = {{img_dout[59:50]}};

assign tmp_8_fu_902_p14 = {{img_dout[69:60]}};

assign tmp_8_fu_902_p16 = {{img_dout[79:70]}};

assign tmp_8_fu_902_p18 = {{img_dout[89:80]}};

assign tmp_8_fu_902_p20 = {{img_dout[99:90]}};

assign tmp_8_fu_902_p22 = {{img_dout[109:100]}};

assign tmp_8_fu_902_p24 = {{img_dout[119:110]}};

assign tmp_8_fu_902_p25 = 'bx;

assign tmp_8_fu_902_p4 = {{img_dout[19:10]}};

assign tmp_8_fu_902_p6 = {{img_dout[29:20]}};

assign tmp_8_fu_902_p8 = {{img_dout[39:30]}};

assign tmp_9_fu_957_p10 = {{img_dout[49:40]}};

assign tmp_9_fu_957_p12 = {{img_dout[59:50]}};

assign tmp_9_fu_957_p14 = {{img_dout[69:60]}};

assign tmp_9_fu_957_p16 = {{img_dout[79:70]}};

assign tmp_9_fu_957_p18 = {{img_dout[89:80]}};

assign tmp_9_fu_957_p20 = {{img_dout[99:90]}};

assign tmp_9_fu_957_p22 = {{img_dout[109:100]}};

assign tmp_9_fu_957_p24 = {{img_dout[119:110]}};

assign tmp_9_fu_957_p25 = 'bx;

assign tmp_9_fu_957_p4 = {{img_dout[19:10]}};

assign tmp_9_fu_957_p6 = {{img_dout[29:20]}};

assign tmp_9_fu_957_p8 = {{img_dout[39:30]}};

assign tmp_s_fu_517_p10 = {{img_dout[49:40]}};

assign tmp_s_fu_517_p12 = {{img_dout[59:50]}};

assign tmp_s_fu_517_p14 = {{img_dout[69:60]}};

assign tmp_s_fu_517_p16 = {{img_dout[79:70]}};

assign tmp_s_fu_517_p18 = {{img_dout[89:80]}};

assign tmp_s_fu_517_p20 = {{img_dout[99:90]}};

assign tmp_s_fu_517_p22 = {{img_dout[109:100]}};

assign tmp_s_fu_517_p24 = {{img_dout[119:110]}};

assign tmp_s_fu_517_p25 = 'bx;

assign tmp_s_fu_517_p4 = {{img_dout[19:10]}};

assign tmp_s_fu_517_p6 = {{img_dout[29:20]}};

assign tmp_s_fu_517_p8 = {{img_dout[39:30]}};

assign zext_ln350_fu_379_p1 = ap_sig_allocacmp_j_1;

endmodule //dpss_vck190_pt_v_frmbuf_rd_0_0_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_350_3
