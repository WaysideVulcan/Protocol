// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module dpss_vck190_pt_v_frmbuf_wr_0_0_MultiPixStream2Bytes_Pipeline_VITIS_LOOP_674_5 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        img_dout,
        img_num_data_valid,
        img_fifo_cap,
        img_empty_n,
        img_read,
        pix_19,
        pix_18,
        pix_17,
        pix_16,
        pix_15,
        pix_14,
        pix_13,
        pix_12,
        trunc_ln658_2,
        bytePlanes_plane0_din,
        bytePlanes_plane0_num_data_valid,
        bytePlanes_plane0_fifo_cap,
        bytePlanes_plane0_full_n,
        bytePlanes_plane0_write,
        icmp_ln662,
        cmp120_2,
        icmp,
        sub117_cast,
        cmp120,
        pix_47_out,
        pix_47_out_ap_vld,
        pix_46_out,
        pix_46_out_ap_vld,
        pix_45_out,
        pix_45_out_ap_vld,
        pix_44_out,
        pix_44_out_ap_vld,
        pix_43_out,
        pix_43_out_ap_vld,
        pix_42_out,
        pix_42_out_ap_vld,
        pix_41_out,
        pix_41_out_ap_vld,
        pix_40_out,
        pix_40_out_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 4'd1;
parameter    ap_ST_fsm_pp0_stage1 = 4'd2;
parameter    ap_ST_fsm_pp0_stage2 = 4'd4;
parameter    ap_ST_fsm_pp0_stage3 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [119:0] img_dout;
input  [2:0] img_num_data_valid;
input  [2:0] img_fifo_cap;
input   img_empty_n;
output   img_read;
input  [9:0] pix_19;
input  [9:0] pix_18;
input  [9:0] pix_17;
input  [9:0] pix_16;
input  [9:0] pix_15;
input  [9:0] pix_14;
input  [9:0] pix_13;
input  [9:0] pix_12;
input  [11:0] trunc_ln658_2;
output  [255:0] bytePlanes_plane0_din;
input  [9:0] bytePlanes_plane0_num_data_valid;
input  [9:0] bytePlanes_plane0_fifo_cap;
input   bytePlanes_plane0_full_n;
output   bytePlanes_plane0_write;
input  [0:0] icmp_ln662;
input  [0:0] cmp120_2;
input  [0:0] icmp;
input  [11:0] sub117_cast;
input  [0:0] cmp120;
output  [9:0] pix_47_out;
output   pix_47_out_ap_vld;
output  [9:0] pix_46_out;
output   pix_46_out_ap_vld;
output  [9:0] pix_45_out;
output   pix_45_out_ap_vld;
output  [9:0] pix_44_out;
output   pix_44_out_ap_vld;
output  [9:0] pix_43_out;
output   pix_43_out_ap_vld;
output  [9:0] pix_42_out;
output   pix_42_out_ap_vld;
output  [9:0] pix_41_out;
output   pix_41_out_ap_vld;
output  [9:0] pix_40_out;
output   pix_40_out_ap_vld;

reg ap_idle;
reg img_read;
reg bytePlanes_plane0_write;
reg pix_47_out_ap_vld;
reg pix_46_out_ap_vld;
reg pix_45_out_ap_vld;
reg pix_44_out_ap_vld;
reg pix_43_out_ap_vld;
reg pix_42_out_ap_vld;
reg pix_41_out_ap_vld;
reg pix_40_out_ap_vld;

(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage1;
reg   [0:0] icmp_ln674_reg_1671;
reg   [0:0] or_ln679_reg_1682;
reg    ap_predicate_op109_read_state2;
reg    ap_block_state2_pp0_stage1_iter0;
reg    ap_block_pp0_stage1_subdone;
reg    ap_condition_exit_pp0_iter0_stage1;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_CS_fsm_pp0_stage3;
reg   [0:0] or_ln679_2_reg_1735;
reg    ap_predicate_op168_read_state4;
reg    ap_block_state4_pp0_stage3_iter0;
reg    ap_block_pp0_stage3_subdone;
reg    bytePlanes_plane0_blk_n;
wire    ap_block_pp0_stage0;
reg    img_blk_n;
wire    ap_block_pp0_stage1;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2;
reg   [0:0] or_ln679_1_reg_1731;
wire    ap_block_pp0_stage3;
reg   [0:0] or_ln679_3_reg_1739;
reg    ap_block_pp0_stage1_11001;
reg    ap_block_pp0_stage3_11001;
reg    ap_predicate_op196_read_state5;
reg    ap_block_state5_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln674_fu_868_p2;
wire   [0:0] cmp118_fu_878_p2;
reg   [0:0] cmp118_reg_1675;
wire   [0:0] or_ln679_fu_884_p2;
wire   [9:0] pix_301_fu_950_p1;
wire   [0:0] or_ln679_1_fu_954_p2;
wire   [0:0] or_ln679_2_fu_958_p2;
wire   [0:0] or_ln679_3_fu_962_p2;
reg   [7:0] trunc_ln7_reg_1743;
reg    ap_predicate_op140_read_state3;
reg    ap_block_state3_pp0_stage2_iter0;
reg    ap_block_pp0_stage2_11001;
reg   [7:0] trunc_ln685_1_reg_1748;
reg   [7:0] trunc_ln685_2_reg_1753;
reg   [7:0] trunc_ln685_3_reg_1758;
reg   [7:0] trunc_ln685_4_reg_1763;
reg   [7:0] trunc_ln685_5_reg_1768;
reg   [7:0] trunc_ln685_6_reg_1773;
reg   [7:0] trunc_ln685_7_reg_1778;
wire   [9:0] pix_302_fu_1046_p1;
reg   [7:0] trunc_ln685_8_reg_1823;
reg   [7:0] trunc_ln685_9_reg_1828;
reg   [7:0] trunc_ln685_s_reg_1833;
reg   [7:0] trunc_ln685_10_reg_1838;
reg   [7:0] trunc_ln685_11_reg_1843;
reg   [7:0] trunc_ln685_12_reg_1848;
reg   [7:0] trunc_ln685_13_reg_1853;
reg   [7:0] trunc_ln685_14_reg_1858;
wire   [9:0] pix_303_fu_1130_p1;
reg    ap_enable_reg_pp0_iter0_reg;
reg    ap_block_pp0_stage0_subdone;
reg   [9:0] ap_phi_reg_pp0_iter0_pix_107_reg_269;
reg   [9:0] ap_phi_reg_pp0_iter0_pix_106_reg_279;
reg   [9:0] ap_phi_reg_pp0_iter0_pix_105_reg_289;
reg   [9:0] ap_phi_reg_pp0_iter0_pix_104_reg_299;
reg   [9:0] ap_phi_reg_pp0_iter0_pix_103_reg_309;
reg   [9:0] ap_phi_reg_pp0_iter0_pix_102_reg_319;
reg   [9:0] ap_phi_reg_pp0_iter0_pix_101_reg_329;
reg   [9:0] ap_phi_reg_pp0_iter0_pix_100_reg_339;
reg   [9:0] ap_phi_reg_pp0_iter0_pix_163_reg_349;
reg   [9:0] ap_phi_reg_pp0_iter0_pix_162_reg_360;
reg   [9:0] ap_phi_reg_pp0_iter0_pix_161_reg_371;
reg   [9:0] ap_phi_reg_pp0_iter0_pix_160_reg_382;
reg   [9:0] ap_phi_reg_pp0_iter0_pix_159_reg_393;
reg   [9:0] ap_phi_reg_pp0_iter0_pix_158_reg_404;
reg   [9:0] ap_phi_reg_pp0_iter0_pix_157_reg_415;
reg   [9:0] ap_phi_reg_pp0_iter0_pix_156_reg_426;
wire   [9:0] ap_phi_reg_pp0_iter0_pix_207_reg_437;
reg   [9:0] ap_phi_reg_pp0_iter1_pix_207_reg_437;
wire   [9:0] ap_phi_reg_pp0_iter0_pix_206_reg_447;
reg   [9:0] ap_phi_reg_pp0_iter1_pix_206_reg_447;
wire   [9:0] ap_phi_reg_pp0_iter0_pix_205_reg_457;
reg   [9:0] ap_phi_reg_pp0_iter1_pix_205_reg_457;
wire   [9:0] ap_phi_reg_pp0_iter0_pix_204_reg_467;
reg   [9:0] ap_phi_reg_pp0_iter1_pix_204_reg_467;
wire   [9:0] ap_phi_reg_pp0_iter0_pix_203_reg_477;
reg   [9:0] ap_phi_reg_pp0_iter1_pix_203_reg_477;
wire   [9:0] ap_phi_reg_pp0_iter0_pix_202_reg_487;
reg   [9:0] ap_phi_reg_pp0_iter1_pix_202_reg_487;
wire   [9:0] ap_phi_reg_pp0_iter0_pix_201_reg_497;
reg   [9:0] ap_phi_reg_pp0_iter1_pix_201_reg_497;
wire   [9:0] ap_phi_reg_pp0_iter0_pix_200_reg_507;
reg   [9:0] ap_phi_reg_pp0_iter1_pix_200_reg_507;
reg   [9:0] ap_phi_mux_pix_263_phi_fu_520_p4;
wire   [9:0] ap_phi_reg_pp0_iter1_pix_263_reg_517;
reg   [9:0] ap_phi_mux_pix_262_phi_fu_530_p4;
wire   [9:0] ap_phi_reg_pp0_iter1_pix_262_reg_527;
reg   [9:0] ap_phi_mux_pix_261_phi_fu_540_p4;
wire   [9:0] ap_phi_reg_pp0_iter1_pix_261_reg_537;
reg   [9:0] ap_phi_mux_pix_260_phi_fu_550_p4;
wire   [9:0] ap_phi_reg_pp0_iter1_pix_260_reg_547;
reg   [9:0] ap_phi_mux_pix_259_phi_fu_560_p4;
wire   [9:0] ap_phi_reg_pp0_iter1_pix_259_reg_557;
reg   [9:0] ap_phi_mux_pix_258_phi_fu_570_p4;
wire   [9:0] ap_phi_reg_pp0_iter1_pix_258_reg_567;
reg   [9:0] ap_phi_mux_pix_257_phi_fu_580_p4;
wire   [9:0] ap_phi_reg_pp0_iter1_pix_257_reg_577;
reg   [9:0] ap_phi_mux_pix_256_phi_fu_590_p4;
wire   [9:0] pix_304_fu_1216_p1;
wire   [9:0] ap_phi_reg_pp0_iter1_pix_256_reg_587;
reg   [11:0] x_1_fu_136;
wire   [11:0] x_4_fu_862_p2;
wire    ap_loop_init;
reg   [11:0] ap_sig_allocacmp_x;
reg   [9:0] pix_40_fu_140;
reg   [9:0] pix_41_fu_144;
reg   [9:0] pix_42_fu_148;
reg   [9:0] pix_43_fu_152;
reg   [9:0] pix_44_fu_156;
reg   [9:0] pix_45_fu_160;
reg   [9:0] pix_46_fu_164;
reg   [9:0] pix_47_fu_168;
reg    ap_block_pp0_stage0_01001;
wire   [12:0] zext_ln674_fu_874_p1;
wire  signed [12:0] sub117_cast_cast_fu_744_p1;
wire   [7:0] trunc_ln685_30_fu_1291_p4;
wire   [7:0] trunc_ln685_29_fu_1281_p4;
wire   [7:0] trunc_ln685_28_fu_1271_p4;
wire   [7:0] trunc_ln685_27_fu_1261_p4;
wire   [7:0] trunc_ln685_26_fu_1251_p4;
wire   [7:0] trunc_ln685_25_fu_1241_p4;
wire   [7:0] trunc_ln685_24_fu_1231_p4;
wire   [7:0] trunc_ln685_23_fu_1221_p4;
wire   [7:0] trunc_ln685_22_fu_1204_p4;
wire   [7:0] trunc_ln685_21_fu_1194_p4;
wire   [7:0] trunc_ln685_20_fu_1184_p4;
wire   [7:0] trunc_ln685_19_fu_1174_p4;
wire   [7:0] trunc_ln685_18_fu_1164_p4;
wire   [7:0] trunc_ln685_17_fu_1154_p4;
wire   [7:0] trunc_ln685_16_fu_1144_p4;
wire   [7:0] trunc_ln685_15_fu_1134_p4;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [3:0] ap_NS_fsm;
reg    ap_idle_pp0_1to1;
reg    ap_block_pp0_stage2_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_857;
reg    ap_condition_862;
reg    ap_condition_241;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 4'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 x_1_fu_136 = 12'd0;
#0 pix_40_fu_140 = 10'd0;
#0 pix_41_fu_144 = 10'd0;
#0 pix_42_fu_148 = 10'd0;
#0 pix_43_fu_152 = 10'd0;
#0 pix_44_fu_156 = 10'd0;
#0 pix_45_fu_160 = 10'd0;
#0 pix_46_fu_164 = 10'd0;
#0 pix_47_fu_168 = 10'd0;
#0 ap_done_reg = 1'b0;
end

dpss_vck190_pt_v_frmbuf_wr_0_0_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage1),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage1)) begin
            ap_enable_reg_pp0_iter0_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_857)) begin
        if ((or_ln679_reg_1682 == 1'd0)) begin
            ap_phi_reg_pp0_iter0_pix_100_reg_339 <= pix_40_fu_140;
        end else if ((or_ln679_reg_1682 == 1'd1)) begin
            ap_phi_reg_pp0_iter0_pix_100_reg_339 <= pix_301_fu_950_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_857)) begin
        if ((or_ln679_reg_1682 == 1'd0)) begin
            ap_phi_reg_pp0_iter0_pix_101_reg_329 <= pix_41_fu_144;
        end else if ((or_ln679_reg_1682 == 1'd1)) begin
            ap_phi_reg_pp0_iter0_pix_101_reg_329 <= {{img_dout[19:10]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_857)) begin
        if ((or_ln679_reg_1682 == 1'd0)) begin
            ap_phi_reg_pp0_iter0_pix_102_reg_319 <= pix_42_fu_148;
        end else if ((or_ln679_reg_1682 == 1'd1)) begin
            ap_phi_reg_pp0_iter0_pix_102_reg_319 <= {{img_dout[39:30]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_857)) begin
        if ((or_ln679_reg_1682 == 1'd0)) begin
            ap_phi_reg_pp0_iter0_pix_103_reg_309 <= pix_43_fu_152;
        end else if ((or_ln679_reg_1682 == 1'd1)) begin
            ap_phi_reg_pp0_iter0_pix_103_reg_309 <= {{img_dout[49:40]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_857)) begin
        if ((or_ln679_reg_1682 == 1'd0)) begin
            ap_phi_reg_pp0_iter0_pix_104_reg_299 <= pix_44_fu_156;
        end else if ((or_ln679_reg_1682 == 1'd1)) begin
            ap_phi_reg_pp0_iter0_pix_104_reg_299 <= {{img_dout[69:60]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_857)) begin
        if ((or_ln679_reg_1682 == 1'd0)) begin
            ap_phi_reg_pp0_iter0_pix_105_reg_289 <= pix_45_fu_160;
        end else if ((or_ln679_reg_1682 == 1'd1)) begin
            ap_phi_reg_pp0_iter0_pix_105_reg_289 <= {{img_dout[79:70]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_857)) begin
        if ((or_ln679_reg_1682 == 1'd0)) begin
            ap_phi_reg_pp0_iter0_pix_106_reg_279 <= pix_46_fu_164;
        end else if ((or_ln679_reg_1682 == 1'd1)) begin
            ap_phi_reg_pp0_iter0_pix_106_reg_279 <= {{img_dout[99:90]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_857)) begin
        if ((or_ln679_reg_1682 == 1'd0)) begin
            ap_phi_reg_pp0_iter0_pix_107_reg_269 <= pix_47_fu_168;
        end else if ((or_ln679_reg_1682 == 1'd1)) begin
            ap_phi_reg_pp0_iter0_pix_107_reg_269 <= {{img_dout[109:100]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_862)) begin
        if ((or_ln679_1_reg_1731 == 1'd0)) begin
            ap_phi_reg_pp0_iter0_pix_156_reg_426 <= ap_phi_reg_pp0_iter0_pix_100_reg_339;
        end else if ((or_ln679_1_reg_1731 == 1'd1)) begin
            ap_phi_reg_pp0_iter0_pix_156_reg_426 <= pix_302_fu_1046_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_862)) begin
        if ((or_ln679_1_reg_1731 == 1'd0)) begin
            ap_phi_reg_pp0_iter0_pix_157_reg_415 <= ap_phi_reg_pp0_iter0_pix_101_reg_329;
        end else if ((or_ln679_1_reg_1731 == 1'd1)) begin
            ap_phi_reg_pp0_iter0_pix_157_reg_415 <= {{img_dout[19:10]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_862)) begin
        if ((or_ln679_1_reg_1731 == 1'd0)) begin
            ap_phi_reg_pp0_iter0_pix_158_reg_404 <= ap_phi_reg_pp0_iter0_pix_102_reg_319;
        end else if ((or_ln679_1_reg_1731 == 1'd1)) begin
            ap_phi_reg_pp0_iter0_pix_158_reg_404 <= {{img_dout[39:30]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_862)) begin
        if ((or_ln679_1_reg_1731 == 1'd0)) begin
            ap_phi_reg_pp0_iter0_pix_159_reg_393 <= ap_phi_reg_pp0_iter0_pix_103_reg_309;
        end else if ((or_ln679_1_reg_1731 == 1'd1)) begin
            ap_phi_reg_pp0_iter0_pix_159_reg_393 <= {{img_dout[49:40]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_862)) begin
        if ((or_ln679_1_reg_1731 == 1'd0)) begin
            ap_phi_reg_pp0_iter0_pix_160_reg_382 <= ap_phi_reg_pp0_iter0_pix_104_reg_299;
        end else if ((or_ln679_1_reg_1731 == 1'd1)) begin
            ap_phi_reg_pp0_iter0_pix_160_reg_382 <= {{img_dout[69:60]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_862)) begin
        if ((or_ln679_1_reg_1731 == 1'd0)) begin
            ap_phi_reg_pp0_iter0_pix_161_reg_371 <= ap_phi_reg_pp0_iter0_pix_105_reg_289;
        end else if ((or_ln679_1_reg_1731 == 1'd1)) begin
            ap_phi_reg_pp0_iter0_pix_161_reg_371 <= {{img_dout[79:70]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_862)) begin
        if ((or_ln679_1_reg_1731 == 1'd0)) begin
            ap_phi_reg_pp0_iter0_pix_162_reg_360 <= ap_phi_reg_pp0_iter0_pix_106_reg_279;
        end else if ((or_ln679_1_reg_1731 == 1'd1)) begin
            ap_phi_reg_pp0_iter0_pix_162_reg_360 <= {{img_dout[99:90]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_862)) begin
        if ((or_ln679_1_reg_1731 == 1'd0)) begin
            ap_phi_reg_pp0_iter0_pix_163_reg_349 <= ap_phi_reg_pp0_iter0_pix_107_reg_269;
        end else if ((or_ln679_1_reg_1731 == 1'd1)) begin
            ap_phi_reg_pp0_iter0_pix_163_reg_349 <= {{img_dout[109:100]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_241)) begin
        if (((or_ln679_2_reg_1735 == 1'd0) & (icmp_ln674_reg_1671 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_pix_200_reg_507 <= ap_phi_reg_pp0_iter0_pix_156_reg_426;
        end else if (((or_ln679_2_reg_1735 == 1'd1) & (icmp_ln674_reg_1671 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_pix_200_reg_507 <= pix_303_fu_1130_p1;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_pix_200_reg_507 <= ap_phi_reg_pp0_iter0_pix_200_reg_507;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_241)) begin
        if (((or_ln679_2_reg_1735 == 1'd0) & (icmp_ln674_reg_1671 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_pix_201_reg_497 <= ap_phi_reg_pp0_iter0_pix_157_reg_415;
        end else if (((or_ln679_2_reg_1735 == 1'd1) & (icmp_ln674_reg_1671 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_pix_201_reg_497 <= {{img_dout[19:10]}};
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_pix_201_reg_497 <= ap_phi_reg_pp0_iter0_pix_201_reg_497;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_241)) begin
        if (((or_ln679_2_reg_1735 == 1'd0) & (icmp_ln674_reg_1671 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_pix_202_reg_487 <= ap_phi_reg_pp0_iter0_pix_158_reg_404;
        end else if (((or_ln679_2_reg_1735 == 1'd1) & (icmp_ln674_reg_1671 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_pix_202_reg_487 <= {{img_dout[39:30]}};
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_pix_202_reg_487 <= ap_phi_reg_pp0_iter0_pix_202_reg_487;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_241)) begin
        if (((or_ln679_2_reg_1735 == 1'd0) & (icmp_ln674_reg_1671 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_pix_203_reg_477 <= ap_phi_reg_pp0_iter0_pix_159_reg_393;
        end else if (((or_ln679_2_reg_1735 == 1'd1) & (icmp_ln674_reg_1671 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_pix_203_reg_477 <= {{img_dout[49:40]}};
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_pix_203_reg_477 <= ap_phi_reg_pp0_iter0_pix_203_reg_477;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_241)) begin
        if (((or_ln679_2_reg_1735 == 1'd0) & (icmp_ln674_reg_1671 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_pix_204_reg_467 <= ap_phi_reg_pp0_iter0_pix_160_reg_382;
        end else if (((or_ln679_2_reg_1735 == 1'd1) & (icmp_ln674_reg_1671 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_pix_204_reg_467 <= {{img_dout[69:60]}};
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_pix_204_reg_467 <= ap_phi_reg_pp0_iter0_pix_204_reg_467;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_241)) begin
        if (((or_ln679_2_reg_1735 == 1'd0) & (icmp_ln674_reg_1671 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_pix_205_reg_457 <= ap_phi_reg_pp0_iter0_pix_161_reg_371;
        end else if (((or_ln679_2_reg_1735 == 1'd1) & (icmp_ln674_reg_1671 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_pix_205_reg_457 <= {{img_dout[79:70]}};
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_pix_205_reg_457 <= ap_phi_reg_pp0_iter0_pix_205_reg_457;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_241)) begin
        if (((or_ln679_2_reg_1735 == 1'd0) & (icmp_ln674_reg_1671 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_pix_206_reg_447 <= ap_phi_reg_pp0_iter0_pix_162_reg_360;
        end else if (((or_ln679_2_reg_1735 == 1'd1) & (icmp_ln674_reg_1671 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_pix_206_reg_447 <= {{img_dout[99:90]}};
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_pix_206_reg_447 <= ap_phi_reg_pp0_iter0_pix_206_reg_447;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_241)) begin
        if (((or_ln679_2_reg_1735 == 1'd0) & (icmp_ln674_reg_1671 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_pix_207_reg_437 <= ap_phi_reg_pp0_iter0_pix_163_reg_349;
        end else if (((or_ln679_2_reg_1735 == 1'd1) & (icmp_ln674_reg_1671 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_pix_207_reg_437 <= {{img_dout[109:100]}};
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_pix_207_reg_437 <= ap_phi_reg_pp0_iter0_pix_207_reg_437;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            pix_40_fu_140 <= pix_12;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            pix_40_fu_140 <= ap_phi_mux_pix_256_phi_fu_590_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            pix_41_fu_144 <= pix_13;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            pix_41_fu_144 <= ap_phi_mux_pix_257_phi_fu_580_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            pix_42_fu_148 <= pix_14;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            pix_42_fu_148 <= ap_phi_mux_pix_258_phi_fu_570_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            pix_43_fu_152 <= pix_15;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            pix_43_fu_152 <= ap_phi_mux_pix_259_phi_fu_560_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            pix_44_fu_156 <= pix_16;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            pix_44_fu_156 <= ap_phi_mux_pix_260_phi_fu_550_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            pix_45_fu_160 <= pix_17;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            pix_45_fu_160 <= ap_phi_mux_pix_261_phi_fu_540_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            pix_46_fu_164 <= pix_18;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            pix_46_fu_164 <= ap_phi_mux_pix_262_phi_fu_530_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            pix_47_fu_168 <= pix_19;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            pix_47_fu_168 <= ap_phi_mux_pix_263_phi_fu_520_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln674_fu_868_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            x_1_fu_136 <= x_4_fu_862_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            x_1_fu_136 <= 12'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        cmp118_reg_1675 <= cmp118_fu_878_p2;
        icmp_ln674_reg_1671 <= icmp_ln674_fu_868_p2;
        or_ln679_reg_1682 <= or_ln679_fu_884_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        or_ln679_1_reg_1731 <= or_ln679_1_fu_954_p2;
        or_ln679_2_reg_1735 <= or_ln679_2_fu_958_p2;
        or_ln679_3_reg_1739 <= or_ln679_3_fu_962_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        trunc_ln685_10_reg_1838 <= {{ap_phi_reg_pp0_iter0_pix_159_reg_393[9:2]}};
        trunc_ln685_11_reg_1843 <= {{ap_phi_reg_pp0_iter0_pix_160_reg_382[9:2]}};
        trunc_ln685_12_reg_1848 <= {{ap_phi_reg_pp0_iter0_pix_161_reg_371[9:2]}};
        trunc_ln685_13_reg_1853 <= {{ap_phi_reg_pp0_iter0_pix_162_reg_360[9:2]}};
        trunc_ln685_14_reg_1858 <= {{ap_phi_reg_pp0_iter0_pix_163_reg_349[9:2]}};
        trunc_ln685_8_reg_1823 <= {{ap_phi_reg_pp0_iter0_pix_156_reg_426[9:2]}};
        trunc_ln685_9_reg_1828 <= {{ap_phi_reg_pp0_iter0_pix_157_reg_415[9:2]}};
        trunc_ln685_s_reg_1833 <= {{ap_phi_reg_pp0_iter0_pix_158_reg_404[9:2]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        trunc_ln685_1_reg_1748 <= {{ap_phi_reg_pp0_iter0_pix_101_reg_329[9:2]}};
        trunc_ln685_2_reg_1753 <= {{ap_phi_reg_pp0_iter0_pix_102_reg_319[9:2]}};
        trunc_ln685_3_reg_1758 <= {{ap_phi_reg_pp0_iter0_pix_103_reg_309[9:2]}};
        trunc_ln685_4_reg_1763 <= {{ap_phi_reg_pp0_iter0_pix_104_reg_299[9:2]}};
        trunc_ln685_5_reg_1768 <= {{ap_phi_reg_pp0_iter0_pix_105_reg_289[9:2]}};
        trunc_ln685_6_reg_1773 <= {{ap_phi_reg_pp0_iter0_pix_106_reg_279[9:2]}};
        trunc_ln685_7_reg_1778 <= {{ap_phi_reg_pp0_iter0_pix_107_reg_269[9:2]}};
        trunc_ln7_reg_1743 <= {{ap_phi_reg_pp0_iter0_pix_100_reg_339[9:2]}};
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_subdone) & (icmp_ln674_reg_1671 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln674_reg_1671 == 1'd0)) begin
        if ((or_ln679_3_reg_1739 == 1'd0)) begin
            ap_phi_mux_pix_256_phi_fu_590_p4 = ap_phi_reg_pp0_iter1_pix_200_reg_507;
        end else if ((or_ln679_3_reg_1739 == 1'd1)) begin
            ap_phi_mux_pix_256_phi_fu_590_p4 = pix_304_fu_1216_p1;
        end else begin
            ap_phi_mux_pix_256_phi_fu_590_p4 = ap_phi_reg_pp0_iter1_pix_256_reg_587;
        end
    end else begin
        ap_phi_mux_pix_256_phi_fu_590_p4 = ap_phi_reg_pp0_iter1_pix_256_reg_587;
    end
end

always @ (*) begin
    if ((icmp_ln674_reg_1671 == 1'd0)) begin
        if ((or_ln679_3_reg_1739 == 1'd0)) begin
            ap_phi_mux_pix_257_phi_fu_580_p4 = ap_phi_reg_pp0_iter1_pix_201_reg_497;
        end else if ((or_ln679_3_reg_1739 == 1'd1)) begin
            ap_phi_mux_pix_257_phi_fu_580_p4 = {{img_dout[19:10]}};
        end else begin
            ap_phi_mux_pix_257_phi_fu_580_p4 = ap_phi_reg_pp0_iter1_pix_257_reg_577;
        end
    end else begin
        ap_phi_mux_pix_257_phi_fu_580_p4 = ap_phi_reg_pp0_iter1_pix_257_reg_577;
    end
end

always @ (*) begin
    if ((icmp_ln674_reg_1671 == 1'd0)) begin
        if ((or_ln679_3_reg_1739 == 1'd0)) begin
            ap_phi_mux_pix_258_phi_fu_570_p4 = ap_phi_reg_pp0_iter1_pix_202_reg_487;
        end else if ((or_ln679_3_reg_1739 == 1'd1)) begin
            ap_phi_mux_pix_258_phi_fu_570_p4 = {{img_dout[39:30]}};
        end else begin
            ap_phi_mux_pix_258_phi_fu_570_p4 = ap_phi_reg_pp0_iter1_pix_258_reg_567;
        end
    end else begin
        ap_phi_mux_pix_258_phi_fu_570_p4 = ap_phi_reg_pp0_iter1_pix_258_reg_567;
    end
end

always @ (*) begin
    if ((icmp_ln674_reg_1671 == 1'd0)) begin
        if ((or_ln679_3_reg_1739 == 1'd0)) begin
            ap_phi_mux_pix_259_phi_fu_560_p4 = ap_phi_reg_pp0_iter1_pix_203_reg_477;
        end else if ((or_ln679_3_reg_1739 == 1'd1)) begin
            ap_phi_mux_pix_259_phi_fu_560_p4 = {{img_dout[49:40]}};
        end else begin
            ap_phi_mux_pix_259_phi_fu_560_p4 = ap_phi_reg_pp0_iter1_pix_259_reg_557;
        end
    end else begin
        ap_phi_mux_pix_259_phi_fu_560_p4 = ap_phi_reg_pp0_iter1_pix_259_reg_557;
    end
end

always @ (*) begin
    if ((icmp_ln674_reg_1671 == 1'd0)) begin
        if ((or_ln679_3_reg_1739 == 1'd0)) begin
            ap_phi_mux_pix_260_phi_fu_550_p4 = ap_phi_reg_pp0_iter1_pix_204_reg_467;
        end else if ((or_ln679_3_reg_1739 == 1'd1)) begin
            ap_phi_mux_pix_260_phi_fu_550_p4 = {{img_dout[69:60]}};
        end else begin
            ap_phi_mux_pix_260_phi_fu_550_p4 = ap_phi_reg_pp0_iter1_pix_260_reg_547;
        end
    end else begin
        ap_phi_mux_pix_260_phi_fu_550_p4 = ap_phi_reg_pp0_iter1_pix_260_reg_547;
    end
end

always @ (*) begin
    if ((icmp_ln674_reg_1671 == 1'd0)) begin
        if ((or_ln679_3_reg_1739 == 1'd0)) begin
            ap_phi_mux_pix_261_phi_fu_540_p4 = ap_phi_reg_pp0_iter1_pix_205_reg_457;
        end else if ((or_ln679_3_reg_1739 == 1'd1)) begin
            ap_phi_mux_pix_261_phi_fu_540_p4 = {{img_dout[79:70]}};
        end else begin
            ap_phi_mux_pix_261_phi_fu_540_p4 = ap_phi_reg_pp0_iter1_pix_261_reg_537;
        end
    end else begin
        ap_phi_mux_pix_261_phi_fu_540_p4 = ap_phi_reg_pp0_iter1_pix_261_reg_537;
    end
end

always @ (*) begin
    if ((icmp_ln674_reg_1671 == 1'd0)) begin
        if ((or_ln679_3_reg_1739 == 1'd0)) begin
            ap_phi_mux_pix_262_phi_fu_530_p4 = ap_phi_reg_pp0_iter1_pix_206_reg_447;
        end else if ((or_ln679_3_reg_1739 == 1'd1)) begin
            ap_phi_mux_pix_262_phi_fu_530_p4 = {{img_dout[99:90]}};
        end else begin
            ap_phi_mux_pix_262_phi_fu_530_p4 = ap_phi_reg_pp0_iter1_pix_262_reg_527;
        end
    end else begin
        ap_phi_mux_pix_262_phi_fu_530_p4 = ap_phi_reg_pp0_iter1_pix_262_reg_527;
    end
end

always @ (*) begin
    if ((icmp_ln674_reg_1671 == 1'd0)) begin
        if ((or_ln679_3_reg_1739 == 1'd0)) begin
            ap_phi_mux_pix_263_phi_fu_520_p4 = ap_phi_reg_pp0_iter1_pix_207_reg_437;
        end else if ((or_ln679_3_reg_1739 == 1'd1)) begin
            ap_phi_mux_pix_263_phi_fu_520_p4 = {{img_dout[109:100]}};
        end else begin
            ap_phi_mux_pix_263_phi_fu_520_p4 = ap_phi_reg_pp0_iter1_pix_263_reg_517;
        end
    end else begin
        ap_phi_mux_pix_263_phi_fu_520_p4 = ap_phi_reg_pp0_iter1_pix_263_reg_517;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_x = 12'd0;
    end else begin
        ap_sig_allocacmp_x = x_1_fu_136;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bytePlanes_plane0_blk_n = bytePlanes_plane0_full_n;
    end else begin
        bytePlanes_plane0_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bytePlanes_plane0_write = 1'b1;
    end else begin
        bytePlanes_plane0_write = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_predicate_op168_read_state4 == 1'b1) & (1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2) & (icmp_ln674_reg_1671 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (or_ln679_1_reg_1731 == 1'd1)) | ((1'b0 == ap_block_pp0_stage1) & (ap_predicate_op109_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0) & (icmp_ln674_reg_1671 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (or_ln679_3_reg_1739 == 1'd1)))) begin
        img_blk_n = img_empty_n;
    end else begin
        img_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_predicate_op168_read_state4 == 1'b1) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_predicate_op140_read_state3 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ap_predicate_op196_read_state5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_predicate_op109_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        img_read = 1'b1;
    end else begin
        img_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln674_reg_1671 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        pix_40_out_ap_vld = 1'b1;
    end else begin
        pix_40_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln674_reg_1671 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        pix_41_out_ap_vld = 1'b1;
    end else begin
        pix_41_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln674_reg_1671 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        pix_42_out_ap_vld = 1'b1;
    end else begin
        pix_42_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln674_reg_1671 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        pix_43_out_ap_vld = 1'b1;
    end else begin
        pix_43_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln674_reg_1671 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        pix_44_out_ap_vld = 1'b1;
    end else begin
        pix_44_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln674_reg_1671 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        pix_45_out_ap_vld = 1'b1;
    end else begin
        pix_45_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln674_reg_1671 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        pix_46_out_ap_vld = 1'b1;
    end else begin
        pix_46_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln674_reg_1671 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        pix_47_out_ap_vld = 1'b1;
    end else begin
        pix_47_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to1 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b1 == ap_condition_exit_pp0_iter0_stage1)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state5_pp0_stage0_iter1));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state5_pp0_stage0_iter1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state5_pp0_stage0_iter1));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state2_pp0_stage1_iter0));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state2_pp0_stage1_iter0));
end

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state3_pp0_stage2_iter0));
end

always @ (*) begin
    ap_block_pp0_stage2_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state3_pp0_stage2_iter0));
end

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage3_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state4_pp0_stage3_iter0));
end

always @ (*) begin
    ap_block_pp0_stage3_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state4_pp0_stage3_iter0));
end

always @ (*) begin
    ap_block_state2_pp0_stage1_iter0 = ((ap_predicate_op109_read_state2 == 1'b1) & (img_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state3_pp0_stage2_iter0 = ((img_empty_n == 1'b0) & (ap_predicate_op140_read_state3 == 1'b1));
end

always @ (*) begin
    ap_block_state4_pp0_stage3_iter0 = ((ap_predicate_op168_read_state4 == 1'b1) & (img_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state5_pp0_stage0_iter1 = ((bytePlanes_plane0_full_n == 1'b0) | ((img_empty_n == 1'b0) & (ap_predicate_op196_read_state5 == 1'b1)));
end

always @ (*) begin
    ap_condition_241 = ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3));
end

always @ (*) begin
    ap_condition_857 = ((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln674_reg_1671 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1));
end

always @ (*) begin
    ap_condition_862 = ((1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln674_reg_1671 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage1;

assign ap_phi_reg_pp0_iter0_pix_200_reg_507 = 'bx;

assign ap_phi_reg_pp0_iter0_pix_201_reg_497 = 'bx;

assign ap_phi_reg_pp0_iter0_pix_202_reg_487 = 'bx;

assign ap_phi_reg_pp0_iter0_pix_203_reg_477 = 'bx;

assign ap_phi_reg_pp0_iter0_pix_204_reg_467 = 'bx;

assign ap_phi_reg_pp0_iter0_pix_205_reg_457 = 'bx;

assign ap_phi_reg_pp0_iter0_pix_206_reg_447 = 'bx;

assign ap_phi_reg_pp0_iter0_pix_207_reg_437 = 'bx;

assign ap_phi_reg_pp0_iter1_pix_256_reg_587 = 'bx;

assign ap_phi_reg_pp0_iter1_pix_257_reg_577 = 'bx;

assign ap_phi_reg_pp0_iter1_pix_258_reg_567 = 'bx;

assign ap_phi_reg_pp0_iter1_pix_259_reg_557 = 'bx;

assign ap_phi_reg_pp0_iter1_pix_260_reg_547 = 'bx;

assign ap_phi_reg_pp0_iter1_pix_261_reg_537 = 'bx;

assign ap_phi_reg_pp0_iter1_pix_262_reg_527 = 'bx;

assign ap_phi_reg_pp0_iter1_pix_263_reg_517 = 'bx;

always @ (*) begin
    ap_predicate_op109_read_state2 = ((or_ln679_reg_1682 == 1'd1) & (icmp_ln674_reg_1671 == 1'd0));
end

always @ (*) begin
    ap_predicate_op140_read_state3 = ((icmp_ln674_reg_1671 == 1'd0) & (or_ln679_1_reg_1731 == 1'd1));
end

always @ (*) begin
    ap_predicate_op168_read_state4 = ((or_ln679_2_reg_1735 == 1'd1) & (icmp_ln674_reg_1671 == 1'd0));
end

always @ (*) begin
    ap_predicate_op196_read_state5 = ((icmp_ln674_reg_1671 == 1'd0) & (or_ln679_3_reg_1739 == 1'd1));
end

assign bytePlanes_plane0_din = {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{trunc_ln685_30_fu_1291_p4}, {trunc_ln685_29_fu_1281_p4}}, {trunc_ln685_28_fu_1271_p4}}, {trunc_ln685_27_fu_1261_p4}}, {trunc_ln685_26_fu_1251_p4}}, {trunc_ln685_25_fu_1241_p4}}, {trunc_ln685_24_fu_1231_p4}}, {trunc_ln685_23_fu_1221_p4}}, {trunc_ln685_22_fu_1204_p4}}, {trunc_ln685_21_fu_1194_p4}}, {trunc_ln685_20_fu_1184_p4}}, {trunc_ln685_19_fu_1174_p4}}, {trunc_ln685_18_fu_1164_p4}}, {trunc_ln685_17_fu_1154_p4}}, {trunc_ln685_16_fu_1144_p4}}, {trunc_ln685_15_fu_1134_p4}}, {trunc_ln685_14_reg_1858}}, {trunc_ln685_13_reg_1853}}, {trunc_ln685_12_reg_1848}}, {trunc_ln685_11_reg_1843}}, {trunc_ln685_10_reg_1838}}, {trunc_ln685_s_reg_1833}}, {trunc_ln685_9_reg_1828}}, {trunc_ln685_8_reg_1823}}, {trunc_ln685_7_reg_1778}}, {trunc_ln685_6_reg_1773}}, {trunc_ln685_5_reg_1768}}, {trunc_ln685_4_reg_1763}}, {trunc_ln685_3_reg_1758}}, {trunc_ln685_2_reg_1753}}, {trunc_ln685_1_reg_1748}}, {trunc_ln7_reg_1743}};

assign cmp118_fu_878_p2 = (($signed(zext_ln674_fu_874_p1) < $signed(sub117_cast_cast_fu_744_p1)) ? 1'b1 : 1'b0);

assign icmp_ln674_fu_868_p2 = ((ap_sig_allocacmp_x == trunc_ln658_2) ? 1'b1 : 1'b0);

assign or_ln679_1_fu_954_p2 = (icmp | cmp118_reg_1675);

assign or_ln679_2_fu_958_p2 = (cmp120_2 | cmp118_reg_1675);

assign or_ln679_3_fu_962_p2 = (icmp_ln662 | cmp118_reg_1675);

assign or_ln679_fu_884_p2 = (cmp120 | cmp118_fu_878_p2);

assign pix_301_fu_950_p1 = img_dout[9:0];

assign pix_302_fu_1046_p1 = img_dout[9:0];

assign pix_303_fu_1130_p1 = img_dout[9:0];

assign pix_304_fu_1216_p1 = img_dout[9:0];

assign pix_40_out = pix_40_fu_140;

assign pix_41_out = pix_41_fu_144;

assign pix_42_out = pix_42_fu_148;

assign pix_43_out = pix_43_fu_152;

assign pix_44_out = pix_44_fu_156;

assign pix_45_out = pix_45_fu_160;

assign pix_46_out = pix_46_fu_164;

assign pix_47_out = pix_47_fu_168;

assign sub117_cast_cast_fu_744_p1 = $signed(sub117_cast);

assign trunc_ln685_15_fu_1134_p4 = {{ap_phi_reg_pp0_iter1_pix_200_reg_507[9:2]}};

assign trunc_ln685_16_fu_1144_p4 = {{ap_phi_reg_pp0_iter1_pix_201_reg_497[9:2]}};

assign trunc_ln685_17_fu_1154_p4 = {{ap_phi_reg_pp0_iter1_pix_202_reg_487[9:2]}};

assign trunc_ln685_18_fu_1164_p4 = {{ap_phi_reg_pp0_iter1_pix_203_reg_477[9:2]}};

assign trunc_ln685_19_fu_1174_p4 = {{ap_phi_reg_pp0_iter1_pix_204_reg_467[9:2]}};

assign trunc_ln685_20_fu_1184_p4 = {{ap_phi_reg_pp0_iter1_pix_205_reg_457[9:2]}};

assign trunc_ln685_21_fu_1194_p4 = {{ap_phi_reg_pp0_iter1_pix_206_reg_447[9:2]}};

assign trunc_ln685_22_fu_1204_p4 = {{ap_phi_reg_pp0_iter1_pix_207_reg_437[9:2]}};

assign trunc_ln685_23_fu_1221_p4 = {{ap_phi_mux_pix_256_phi_fu_590_p4[9:2]}};

assign trunc_ln685_24_fu_1231_p4 = {{ap_phi_mux_pix_257_phi_fu_580_p4[9:2]}};

assign trunc_ln685_25_fu_1241_p4 = {{ap_phi_mux_pix_258_phi_fu_570_p4[9:2]}};

assign trunc_ln685_26_fu_1251_p4 = {{ap_phi_mux_pix_259_phi_fu_560_p4[9:2]}};

assign trunc_ln685_27_fu_1261_p4 = {{ap_phi_mux_pix_260_phi_fu_550_p4[9:2]}};

assign trunc_ln685_28_fu_1271_p4 = {{ap_phi_mux_pix_261_phi_fu_540_p4[9:2]}};

assign trunc_ln685_29_fu_1281_p4 = {{ap_phi_mux_pix_262_phi_fu_530_p4[9:2]}};

assign trunc_ln685_30_fu_1291_p4 = {{ap_phi_mux_pix_263_phi_fu_520_p4[9:2]}};

assign x_4_fu_862_p2 = (ap_sig_allocacmp_x + 12'd1);

assign zext_ln674_fu_874_p1 = ap_sig_allocacmp_x;

endmodule //dpss_vck190_pt_v_frmbuf_wr_0_0_MultiPixStream2Bytes_Pipeline_VITIS_LOOP_674_5
