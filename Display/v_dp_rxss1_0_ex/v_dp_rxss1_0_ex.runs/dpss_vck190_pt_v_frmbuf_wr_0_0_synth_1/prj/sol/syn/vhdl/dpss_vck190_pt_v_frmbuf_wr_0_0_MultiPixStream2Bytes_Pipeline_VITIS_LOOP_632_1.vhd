-- ==============================================================
-- Generated by Vitis HLS v2023.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity dpss_vck190_pt_v_frmbuf_wr_0_0_MultiPixStream2Bytes_Pipeline_VITIS_LOOP_632_1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    img_dout : IN STD_LOGIC_VECTOR (119 downto 0);
    img_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
    img_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
    img_empty_n : IN STD_LOGIC;
    img_read : OUT STD_LOGIC;
    pix_11 : IN STD_LOGIC_VECTOR (9 downto 0);
    pix_10 : IN STD_LOGIC_VECTOR (9 downto 0);
    pix_9 : IN STD_LOGIC_VECTOR (9 downto 0);
    pix_8 : IN STD_LOGIC_VECTOR (9 downto 0);
    pix_7 : IN STD_LOGIC_VECTOR (9 downto 0);
    pix_6 : IN STD_LOGIC_VECTOR (9 downto 0);
    pix_5 : IN STD_LOGIC_VECTOR (9 downto 0);
    pix_4 : IN STD_LOGIC_VECTOR (9 downto 0);
    pix_3 : IN STD_LOGIC_VECTOR (9 downto 0);
    pix_2 : IN STD_LOGIC_VECTOR (9 downto 0);
    pix_1 : IN STD_LOGIC_VECTOR (9 downto 0);
    pix : IN STD_LOGIC_VECTOR (9 downto 0);
    trunc_ln616_2 : IN STD_LOGIC_VECTOR (11 downto 0);
    bytePlanes_plane0_din : OUT STD_LOGIC_VECTOR (255 downto 0);
    bytePlanes_plane0_num_data_valid : IN STD_LOGIC_VECTOR (9 downto 0);
    bytePlanes_plane0_fifo_cap : IN STD_LOGIC_VECTOR (9 downto 0);
    bytePlanes_plane0_full_n : IN STD_LOGIC;
    bytePlanes_plane0_write : OUT STD_LOGIC;
    icmp_ln620 : IN STD_LOGIC_VECTOR (0 downto 0);
    sub40_cast : IN STD_LOGIC_VECTOR (11 downto 0);
    empty : IN STD_LOGIC_VECTOR (0 downto 0);
    pix_39_out : OUT STD_LOGIC_VECTOR (9 downto 0);
    pix_39_out_ap_vld : OUT STD_LOGIC;
    pix_38_out : OUT STD_LOGIC_VECTOR (9 downto 0);
    pix_38_out_ap_vld : OUT STD_LOGIC;
    pix_37_out : OUT STD_LOGIC_VECTOR (9 downto 0);
    pix_37_out_ap_vld : OUT STD_LOGIC;
    pix_36_out : OUT STD_LOGIC_VECTOR (9 downto 0);
    pix_36_out_ap_vld : OUT STD_LOGIC;
    pix_35_out : OUT STD_LOGIC_VECTOR (9 downto 0);
    pix_35_out_ap_vld : OUT STD_LOGIC;
    pix_34_out : OUT STD_LOGIC_VECTOR (9 downto 0);
    pix_34_out_ap_vld : OUT STD_LOGIC;
    pix_33_out : OUT STD_LOGIC_VECTOR (9 downto 0);
    pix_33_out_ap_vld : OUT STD_LOGIC;
    pix_32_out : OUT STD_LOGIC_VECTOR (9 downto 0);
    pix_32_out_ap_vld : OUT STD_LOGIC;
    pix_31_out : OUT STD_LOGIC_VECTOR (9 downto 0);
    pix_31_out_ap_vld : OUT STD_LOGIC;
    pix_30_out : OUT STD_LOGIC_VECTOR (9 downto 0);
    pix_30_out_ap_vld : OUT STD_LOGIC;
    pix_29_out : OUT STD_LOGIC_VECTOR (9 downto 0);
    pix_29_out_ap_vld : OUT STD_LOGIC;
    pix_28_out : OUT STD_LOGIC_VECTOR (9 downto 0);
    pix_28_out_ap_vld : OUT STD_LOGIC;
    out_pix_1_out_i : IN STD_LOGIC_VECTOR (255 downto 0);
    out_pix_1_out_o : OUT STD_LOGIC_VECTOR (255 downto 0);
    out_pix_1_out_o_ap_vld : OUT STD_LOGIC );
end;


architecture behav of dpss_vck190_pt_v_frmbuf_wr_0_0_MultiPixStream2Bytes_Pipeline_VITIS_LOOP_632_1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_31 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110001";
    constant ap_const_lv32_32 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110010";
    constant ap_const_lv32_3B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111011";
    constant ap_const_lv32_3C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111100";
    constant ap_const_lv32_45 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000101";
    constant ap_const_lv32_46 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000110";
    constant ap_const_lv32_4F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001111";
    constant ap_const_lv32_50 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010000";
    constant ap_const_lv32_59 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011001";
    constant ap_const_lv32_5A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011010";
    constant ap_const_lv32_63 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100011";
    constant ap_const_lv32_64 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100100";
    constant ap_const_lv32_6D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101101";
    constant ap_const_lv32_6E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101110";
    constant ap_const_lv32_77 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110111";
    constant ap_const_lv12_1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_3D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111101";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_5D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011101";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv32_7D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111101";
    constant ap_const_lv32_80 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000000";
    constant ap_const_lv32_9D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011101";
    constant ap_const_lv32_A0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010100000";
    constant ap_const_lv32_BD : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010111101";
    constant ap_const_lv32_C0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011000000";
    constant ap_const_lv32_DD : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011011101";
    constant ap_const_lv32_E0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011100000";
    constant ap_const_lv32_FD : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011111101";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal icmp_ln632_fu_976_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage1 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal icmp_ln632_reg_1757 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln637_reg_1766 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op133_read_state3 : BOOLEAN;
    signal ap_block_state3_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal bytePlanes_plane0_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal img_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal or_ln637_1_reg_1830 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op172_read_state4 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal sub40_cast_cast_fu_732_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal sub40_cast_cast_reg_1686 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal x_6_fu_970_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal x_6_reg_1751 : STD_LOGIC_VECTOR (11 downto 0);
    signal cmp41_fu_985_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp41_reg_1761 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln637_fu_994_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal pix_318_fu_1000_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal or_ln637_1_fu_1004_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_phi_reg_pp0_iter0_pix_91_reg_351 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_phi_reg_pp0_iter1_pix_91_reg_351 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_phi_reg_pp0_iter0_pix_90_reg_360 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_phi_reg_pp0_iter1_pix_90_reg_360 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_phi_reg_pp0_iter0_pix_89_reg_369 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_phi_reg_pp0_iter1_pix_89_reg_369 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_phi_reg_pp0_iter0_pix_88_reg_378 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_phi_reg_pp0_iter1_pix_88_reg_378 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_phi_reg_pp0_iter0_pix_87_reg_387 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_phi_reg_pp0_iter1_pix_87_reg_387 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_phi_reg_pp0_iter0_pix_86_reg_396 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_phi_reg_pp0_iter1_pix_86_reg_396 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_phi_reg_pp0_iter0_pix_85_reg_405 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_phi_reg_pp0_iter1_pix_85_reg_405 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_phi_reg_pp0_iter0_pix_84_reg_414 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_phi_reg_pp0_iter1_pix_84_reg_414 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_phi_reg_pp0_iter0_pix_83_reg_423 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_phi_reg_pp0_iter1_pix_83_reg_423 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_phi_reg_pp0_iter0_pix_82_reg_432 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_phi_reg_pp0_iter1_pix_82_reg_432 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_phi_reg_pp0_iter0_pix_81_reg_441 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_phi_reg_pp0_iter1_pix_81_reg_441 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_phi_reg_pp0_iter0_pix_80_reg_450 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_phi_reg_pp0_iter1_pix_80_reg_450 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_phi_mux_pix_147_phi_fu_462_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_phi_reg_pp0_iter1_pix_147_reg_459 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_phi_mux_pix_146_phi_fu_472_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_phi_reg_pp0_iter1_pix_146_reg_469 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_phi_mux_pix_145_phi_fu_482_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_phi_reg_pp0_iter1_pix_145_reg_479 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_phi_mux_pix_144_phi_fu_492_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_phi_reg_pp0_iter1_pix_144_reg_489 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_phi_mux_pix_143_phi_fu_502_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_phi_reg_pp0_iter1_pix_143_reg_499 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_phi_mux_pix_142_phi_fu_512_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_phi_reg_pp0_iter1_pix_142_reg_509 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_phi_mux_pix_141_phi_fu_522_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_phi_reg_pp0_iter1_pix_141_reg_519 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_phi_mux_pix_140_phi_fu_532_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_phi_reg_pp0_iter1_pix_140_reg_529 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_phi_mux_pix_139_phi_fu_542_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_phi_reg_pp0_iter1_pix_139_reg_539 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_phi_mux_pix_138_phi_fu_552_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_phi_reg_pp0_iter1_pix_138_reg_549 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_phi_mux_pix_137_phi_fu_562_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_phi_reg_pp0_iter1_pix_137_reg_559 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_phi_mux_pix_136_phi_fu_572_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal pix_319_fu_1106_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_phi_reg_pp0_iter1_pix_136_reg_569 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal out_pix_7_fu_1187_p5 : STD_LOGIC_VECTOR (255 downto 0);
    signal x_fu_190 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    signal ap_loop_init : STD_LOGIC;
    signal pix_28_fu_194 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    signal pix_29_fu_198 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    signal pix_30_fu_202 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    signal pix_31_fu_206 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    signal pix_32_fu_210 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    signal pix_33_fu_214 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    signal pix_34_fu_218 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    signal pix_35_fu_222 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    signal pix_36_fu_226 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    signal pix_37_fu_230 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    signal pix_38_fu_234 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    signal pix_39_fu_238 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal zext_ln632_fu_981_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal or_ln637_2_fu_990_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal in_pix_fu_1016_p4 : STD_LOGIC_VECTOR (29 downto 0);
    signal out_pix_fu_1026_p5 : STD_LOGIC_VECTOR (255 downto 0);
    signal in_pix_1_fu_1038_p4 : STD_LOGIC_VECTOR (29 downto 0);
    signal out_pix_1_fu_1048_p5 : STD_LOGIC_VECTOR (255 downto 0);
    signal in_pix_2_fu_1060_p4 : STD_LOGIC_VECTOR (29 downto 0);
    signal out_pix_2_fu_1070_p5 : STD_LOGIC_VECTOR (255 downto 0);
    signal in_pix_3_fu_1082_p4 : STD_LOGIC_VECTOR (29 downto 0);
    signal out_pix_3_fu_1092_p5 : STD_LOGIC_VECTOR (255 downto 0);
    signal in_pix_4_fu_1111_p4 : STD_LOGIC_VECTOR (29 downto 0);
    signal out_pix_4_fu_1121_p5 : STD_LOGIC_VECTOR (255 downto 0);
    signal in_pix_5_fu_1133_p4 : STD_LOGIC_VECTOR (29 downto 0);
    signal out_pix_5_fu_1143_p5 : STD_LOGIC_VECTOR (255 downto 0);
    signal in_pix_6_fu_1155_p4 : STD_LOGIC_VECTOR (29 downto 0);
    signal out_pix_6_fu_1165_p5 : STD_LOGIC_VECTOR (255 downto 0);
    signal in_pix_7_fu_1177_p4 : STD_LOGIC_VECTOR (29 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_idle_pp0_1to1 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_condition_262 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component dpss_vck190_pt_v_frmbuf_wr_0_0_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    flow_control_loop_pipe_sequential_init_U : component dpss_vck190_pt_v_frmbuf_wr_0_0_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage1,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage1)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter1_pix_80_reg_450_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_262)) then
                if (((or_ln637_reg_1766 = ap_const_lv1_1) and (icmp_ln632_reg_1757 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_pix_80_reg_450 <= pix_318_fu_1000_p1;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_pix_80_reg_450 <= ap_phi_reg_pp0_iter0_pix_80_reg_450;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_pix_81_reg_441_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_262)) then
                if (((or_ln637_reg_1766 = ap_const_lv1_1) and (icmp_ln632_reg_1757 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_pix_81_reg_441 <= img_dout(19 downto 10);
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_pix_81_reg_441 <= ap_phi_reg_pp0_iter0_pix_81_reg_441;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_pix_82_reg_432_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_262)) then
                if (((or_ln637_reg_1766 = ap_const_lv1_1) and (icmp_ln632_reg_1757 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_pix_82_reg_432 <= img_dout(29 downto 20);
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_pix_82_reg_432 <= ap_phi_reg_pp0_iter0_pix_82_reg_432;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_pix_83_reg_423_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_262)) then
                if (((or_ln637_reg_1766 = ap_const_lv1_1) and (icmp_ln632_reg_1757 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_pix_83_reg_423 <= img_dout(39 downto 30);
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_pix_83_reg_423 <= ap_phi_reg_pp0_iter0_pix_83_reg_423;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_pix_84_reg_414_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_262)) then
                if (((or_ln637_reg_1766 = ap_const_lv1_1) and (icmp_ln632_reg_1757 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_pix_84_reg_414 <= img_dout(49 downto 40);
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_pix_84_reg_414 <= ap_phi_reg_pp0_iter0_pix_84_reg_414;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_pix_85_reg_405_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_262)) then
                if (((or_ln637_reg_1766 = ap_const_lv1_1) and (icmp_ln632_reg_1757 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_pix_85_reg_405 <= img_dout(59 downto 50);
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_pix_85_reg_405 <= ap_phi_reg_pp0_iter0_pix_85_reg_405;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_pix_86_reg_396_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_262)) then
                if (((or_ln637_reg_1766 = ap_const_lv1_1) and (icmp_ln632_reg_1757 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_pix_86_reg_396 <= img_dout(69 downto 60);
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_pix_86_reg_396 <= ap_phi_reg_pp0_iter0_pix_86_reg_396;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_pix_87_reg_387_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_262)) then
                if (((or_ln637_reg_1766 = ap_const_lv1_1) and (icmp_ln632_reg_1757 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_pix_87_reg_387 <= img_dout(79 downto 70);
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_pix_87_reg_387 <= ap_phi_reg_pp0_iter0_pix_87_reg_387;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_pix_88_reg_378_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_262)) then
                if (((or_ln637_reg_1766 = ap_const_lv1_1) and (icmp_ln632_reg_1757 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_pix_88_reg_378 <= img_dout(89 downto 80);
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_pix_88_reg_378 <= ap_phi_reg_pp0_iter0_pix_88_reg_378;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_pix_89_reg_369_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_262)) then
                if (((or_ln637_reg_1766 = ap_const_lv1_1) and (icmp_ln632_reg_1757 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_pix_89_reg_369 <= img_dout(99 downto 90);
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_pix_89_reg_369 <= ap_phi_reg_pp0_iter0_pix_89_reg_369;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_pix_90_reg_360_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_262)) then
                if (((or_ln637_reg_1766 = ap_const_lv1_1) and (icmp_ln632_reg_1757 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_pix_90_reg_360 <= img_dout(109 downto 100);
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_pix_90_reg_360 <= ap_phi_reg_pp0_iter0_pix_90_reg_360;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_pix_91_reg_351_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_262)) then
                if (((or_ln637_reg_1766 = ap_const_lv1_1) and (icmp_ln632_reg_1757 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_pix_91_reg_351 <= img_dout(119 downto 110);
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_pix_91_reg_351 <= ap_phi_reg_pp0_iter0_pix_91_reg_351;
                end if;
            end if; 
        end if;
    end process;

    pix_28_fu_194_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    pix_28_fu_194 <= pix;
                elsif (((icmp_ln632_reg_1757 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    pix_28_fu_194 <= ap_phi_mux_pix_136_phi_fu_572_p4;
                end if;
            end if; 
        end if;
    end process;

    pix_29_fu_198_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    pix_29_fu_198 <= pix_1;
                elsif (((icmp_ln632_reg_1757 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    pix_29_fu_198 <= ap_phi_mux_pix_137_phi_fu_562_p4;
                end if;
            end if; 
        end if;
    end process;

    pix_30_fu_202_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    pix_30_fu_202 <= pix_2;
                elsif (((icmp_ln632_reg_1757 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    pix_30_fu_202 <= ap_phi_mux_pix_138_phi_fu_552_p4;
                end if;
            end if; 
        end if;
    end process;

    pix_31_fu_206_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    pix_31_fu_206 <= pix_3;
                elsif (((icmp_ln632_reg_1757 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    pix_31_fu_206 <= ap_phi_mux_pix_139_phi_fu_542_p4;
                end if;
            end if; 
        end if;
    end process;

    pix_32_fu_210_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    pix_32_fu_210 <= pix_4;
                elsif (((icmp_ln632_reg_1757 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    pix_32_fu_210 <= ap_phi_mux_pix_140_phi_fu_532_p4;
                end if;
            end if; 
        end if;
    end process;

    pix_33_fu_214_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    pix_33_fu_214 <= pix_5;
                elsif (((icmp_ln632_reg_1757 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    pix_33_fu_214 <= ap_phi_mux_pix_141_phi_fu_522_p4;
                end if;
            end if; 
        end if;
    end process;

    pix_34_fu_218_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    pix_34_fu_218 <= pix_6;
                elsif (((icmp_ln632_reg_1757 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    pix_34_fu_218 <= ap_phi_mux_pix_142_phi_fu_512_p4;
                end if;
            end if; 
        end if;
    end process;

    pix_35_fu_222_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    pix_35_fu_222 <= pix_7;
                elsif (((icmp_ln632_reg_1757 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    pix_35_fu_222 <= ap_phi_mux_pix_143_phi_fu_502_p4;
                end if;
            end if; 
        end if;
    end process;

    pix_36_fu_226_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    pix_36_fu_226 <= pix_8;
                elsif (((icmp_ln632_reg_1757 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    pix_36_fu_226 <= ap_phi_mux_pix_144_phi_fu_492_p4;
                end if;
            end if; 
        end if;
    end process;

    pix_37_fu_230_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    pix_37_fu_230 <= pix_9;
                elsif (((icmp_ln632_reg_1757 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    pix_37_fu_230 <= ap_phi_mux_pix_145_phi_fu_482_p4;
                end if;
            end if; 
        end if;
    end process;

    pix_38_fu_234_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    pix_38_fu_234 <= pix_10;
                elsif (((icmp_ln632_reg_1757 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    pix_38_fu_234 <= ap_phi_mux_pix_146_phi_fu_472_p4;
                end if;
            end if; 
        end if;
    end process;

    pix_39_fu_238_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    pix_39_fu_238 <= pix_11;
                elsif (((icmp_ln632_reg_1757 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    pix_39_fu_238 <= ap_phi_mux_pix_147_phi_fu_462_p4;
                end if;
            end if; 
        end if;
    end process;

    x_fu_190_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    x_fu_190 <= ap_const_lv12_0;
                elsif (((icmp_ln632_reg_1757 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    x_fu_190 <= x_6_reg_1751;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln632_fu_976_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (or_ln637_fu_994_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                ap_phi_reg_pp0_iter0_pix_80_reg_450 <= pix_28_fu_194;
                ap_phi_reg_pp0_iter0_pix_81_reg_441 <= pix_29_fu_198;
                ap_phi_reg_pp0_iter0_pix_82_reg_432 <= pix_30_fu_202;
                ap_phi_reg_pp0_iter0_pix_83_reg_423 <= pix_31_fu_206;
                ap_phi_reg_pp0_iter0_pix_84_reg_414 <= pix_32_fu_210;
                ap_phi_reg_pp0_iter0_pix_85_reg_405 <= pix_33_fu_214;
                ap_phi_reg_pp0_iter0_pix_86_reg_396 <= pix_34_fu_218;
                ap_phi_reg_pp0_iter0_pix_87_reg_387 <= pix_35_fu_222;
                ap_phi_reg_pp0_iter0_pix_88_reg_378 <= pix_36_fu_226;
                ap_phi_reg_pp0_iter0_pix_89_reg_369 <= pix_37_fu_230;
                ap_phi_reg_pp0_iter0_pix_90_reg_360 <= pix_38_fu_234;
                ap_phi_reg_pp0_iter0_pix_91_reg_351 <= pix_39_fu_238;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                cmp41_reg_1761 <= cmp41_fu_985_p2;
                icmp_ln632_reg_1757 <= icmp_ln632_fu_976_p2;
                or_ln637_reg_1766 <= or_ln637_fu_994_p2;
                x_6_reg_1751 <= x_6_fu_970_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                or_ln637_1_reg_1830 <= or_ln637_1_fu_1004_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                sub40_cast_cast_reg_1686 <= sub40_cast_cast_fu_732_p1;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage1_subdone, ap_condition_exit_pp0_iter0_stage1, ap_block_pp0_stage2_subdone, ap_block_pp0_stage0_subdone, ap_idle_pp0_1to1, ap_start_int)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_start_int = ap_const_logic_0) and (ap_idle_pp0_1to1 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage1)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(2);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_block_state4_pp0_stage0_iter1)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state4_pp0_stage0_iter1));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_block_state4_pp0_stage0_iter1)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state4_pp0_stage0_iter1));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, ap_block_state4_pp0_stage0_iter1)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state4_pp0_stage0_iter1));
    end process;

        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage2_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state3_pp0_stage2_iter0)
    begin
                ap_block_pp0_stage2_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state3_pp0_stage2_iter0));
    end process;


    ap_block_pp0_stage2_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state3_pp0_stage2_iter0)
    begin
                ap_block_pp0_stage2_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state3_pp0_stage2_iter0));
    end process;


    ap_block_state3_pp0_stage2_iter0_assign_proc : process(img_empty_n, ap_predicate_op133_read_state3)
    begin
                ap_block_state3_pp0_stage2_iter0 <= ((ap_predicate_op133_read_state3 = ap_const_boolean_1) and (img_empty_n = ap_const_logic_0));
    end process;


    ap_block_state4_pp0_stage0_iter1_assign_proc : process(img_empty_n, icmp_ln632_reg_1757, bytePlanes_plane0_full_n, ap_predicate_op172_read_state4)
    begin
                ap_block_state4_pp0_stage0_iter1 <= (((img_empty_n = ap_const_logic_0) and (ap_predicate_op172_read_state4 = ap_const_boolean_1)) or ((bytePlanes_plane0_full_n = ap_const_logic_0) and (icmp_ln632_reg_1757 = ap_const_lv1_0)));
    end process;


    ap_condition_262_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
                ap_condition_262 <= ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2));
    end process;


    ap_condition_exit_pp0_iter0_stage1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_subdone, icmp_ln632_fu_976_p2)
    begin
        if (((icmp_ln632_fu_976_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            ap_condition_exit_pp0_iter0_stage1 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_subdone, ap_loop_exit_ready, ap_done_reg)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg, ap_start_int)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start_int;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to1_assign_proc : process(ap_enable_reg_pp0_iter1)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_0)) then 
            ap_idle_pp0_1to1 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to1 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage1;

    ap_phi_mux_pix_136_phi_fu_572_p4_assign_proc : process(icmp_ln632_reg_1757, or_ln637_1_reg_1830, ap_phi_reg_pp0_iter1_pix_80_reg_450, pix_319_fu_1106_p1, ap_phi_reg_pp0_iter1_pix_136_reg_569)
    begin
        if ((icmp_ln632_reg_1757 = ap_const_lv1_0)) then
            if ((or_ln637_1_reg_1830 = ap_const_lv1_0)) then 
                ap_phi_mux_pix_136_phi_fu_572_p4 <= ap_phi_reg_pp0_iter1_pix_80_reg_450;
            elsif ((or_ln637_1_reg_1830 = ap_const_lv1_1)) then 
                ap_phi_mux_pix_136_phi_fu_572_p4 <= pix_319_fu_1106_p1;
            else 
                ap_phi_mux_pix_136_phi_fu_572_p4 <= ap_phi_reg_pp0_iter1_pix_136_reg_569;
            end if;
        else 
            ap_phi_mux_pix_136_phi_fu_572_p4 <= ap_phi_reg_pp0_iter1_pix_136_reg_569;
        end if; 
    end process;


    ap_phi_mux_pix_137_phi_fu_562_p4_assign_proc : process(img_dout, icmp_ln632_reg_1757, or_ln637_1_reg_1830, ap_phi_reg_pp0_iter1_pix_81_reg_441, ap_phi_reg_pp0_iter1_pix_137_reg_559)
    begin
        if ((icmp_ln632_reg_1757 = ap_const_lv1_0)) then
            if ((or_ln637_1_reg_1830 = ap_const_lv1_0)) then 
                ap_phi_mux_pix_137_phi_fu_562_p4 <= ap_phi_reg_pp0_iter1_pix_81_reg_441;
            elsif ((or_ln637_1_reg_1830 = ap_const_lv1_1)) then 
                ap_phi_mux_pix_137_phi_fu_562_p4 <= img_dout(19 downto 10);
            else 
                ap_phi_mux_pix_137_phi_fu_562_p4 <= ap_phi_reg_pp0_iter1_pix_137_reg_559;
            end if;
        else 
            ap_phi_mux_pix_137_phi_fu_562_p4 <= ap_phi_reg_pp0_iter1_pix_137_reg_559;
        end if; 
    end process;


    ap_phi_mux_pix_138_phi_fu_552_p4_assign_proc : process(img_dout, icmp_ln632_reg_1757, or_ln637_1_reg_1830, ap_phi_reg_pp0_iter1_pix_82_reg_432, ap_phi_reg_pp0_iter1_pix_138_reg_549)
    begin
        if ((icmp_ln632_reg_1757 = ap_const_lv1_0)) then
            if ((or_ln637_1_reg_1830 = ap_const_lv1_0)) then 
                ap_phi_mux_pix_138_phi_fu_552_p4 <= ap_phi_reg_pp0_iter1_pix_82_reg_432;
            elsif ((or_ln637_1_reg_1830 = ap_const_lv1_1)) then 
                ap_phi_mux_pix_138_phi_fu_552_p4 <= img_dout(29 downto 20);
            else 
                ap_phi_mux_pix_138_phi_fu_552_p4 <= ap_phi_reg_pp0_iter1_pix_138_reg_549;
            end if;
        else 
            ap_phi_mux_pix_138_phi_fu_552_p4 <= ap_phi_reg_pp0_iter1_pix_138_reg_549;
        end if; 
    end process;


    ap_phi_mux_pix_139_phi_fu_542_p4_assign_proc : process(img_dout, icmp_ln632_reg_1757, or_ln637_1_reg_1830, ap_phi_reg_pp0_iter1_pix_83_reg_423, ap_phi_reg_pp0_iter1_pix_139_reg_539)
    begin
        if ((icmp_ln632_reg_1757 = ap_const_lv1_0)) then
            if ((or_ln637_1_reg_1830 = ap_const_lv1_0)) then 
                ap_phi_mux_pix_139_phi_fu_542_p4 <= ap_phi_reg_pp0_iter1_pix_83_reg_423;
            elsif ((or_ln637_1_reg_1830 = ap_const_lv1_1)) then 
                ap_phi_mux_pix_139_phi_fu_542_p4 <= img_dout(39 downto 30);
            else 
                ap_phi_mux_pix_139_phi_fu_542_p4 <= ap_phi_reg_pp0_iter1_pix_139_reg_539;
            end if;
        else 
            ap_phi_mux_pix_139_phi_fu_542_p4 <= ap_phi_reg_pp0_iter1_pix_139_reg_539;
        end if; 
    end process;


    ap_phi_mux_pix_140_phi_fu_532_p4_assign_proc : process(img_dout, icmp_ln632_reg_1757, or_ln637_1_reg_1830, ap_phi_reg_pp0_iter1_pix_84_reg_414, ap_phi_reg_pp0_iter1_pix_140_reg_529)
    begin
        if ((icmp_ln632_reg_1757 = ap_const_lv1_0)) then
            if ((or_ln637_1_reg_1830 = ap_const_lv1_0)) then 
                ap_phi_mux_pix_140_phi_fu_532_p4 <= ap_phi_reg_pp0_iter1_pix_84_reg_414;
            elsif ((or_ln637_1_reg_1830 = ap_const_lv1_1)) then 
                ap_phi_mux_pix_140_phi_fu_532_p4 <= img_dout(49 downto 40);
            else 
                ap_phi_mux_pix_140_phi_fu_532_p4 <= ap_phi_reg_pp0_iter1_pix_140_reg_529;
            end if;
        else 
            ap_phi_mux_pix_140_phi_fu_532_p4 <= ap_phi_reg_pp0_iter1_pix_140_reg_529;
        end if; 
    end process;


    ap_phi_mux_pix_141_phi_fu_522_p4_assign_proc : process(img_dout, icmp_ln632_reg_1757, or_ln637_1_reg_1830, ap_phi_reg_pp0_iter1_pix_85_reg_405, ap_phi_reg_pp0_iter1_pix_141_reg_519)
    begin
        if ((icmp_ln632_reg_1757 = ap_const_lv1_0)) then
            if ((or_ln637_1_reg_1830 = ap_const_lv1_0)) then 
                ap_phi_mux_pix_141_phi_fu_522_p4 <= ap_phi_reg_pp0_iter1_pix_85_reg_405;
            elsif ((or_ln637_1_reg_1830 = ap_const_lv1_1)) then 
                ap_phi_mux_pix_141_phi_fu_522_p4 <= img_dout(59 downto 50);
            else 
                ap_phi_mux_pix_141_phi_fu_522_p4 <= ap_phi_reg_pp0_iter1_pix_141_reg_519;
            end if;
        else 
            ap_phi_mux_pix_141_phi_fu_522_p4 <= ap_phi_reg_pp0_iter1_pix_141_reg_519;
        end if; 
    end process;


    ap_phi_mux_pix_142_phi_fu_512_p4_assign_proc : process(img_dout, icmp_ln632_reg_1757, or_ln637_1_reg_1830, ap_phi_reg_pp0_iter1_pix_86_reg_396, ap_phi_reg_pp0_iter1_pix_142_reg_509)
    begin
        if ((icmp_ln632_reg_1757 = ap_const_lv1_0)) then
            if ((or_ln637_1_reg_1830 = ap_const_lv1_0)) then 
                ap_phi_mux_pix_142_phi_fu_512_p4 <= ap_phi_reg_pp0_iter1_pix_86_reg_396;
            elsif ((or_ln637_1_reg_1830 = ap_const_lv1_1)) then 
                ap_phi_mux_pix_142_phi_fu_512_p4 <= img_dout(69 downto 60);
            else 
                ap_phi_mux_pix_142_phi_fu_512_p4 <= ap_phi_reg_pp0_iter1_pix_142_reg_509;
            end if;
        else 
            ap_phi_mux_pix_142_phi_fu_512_p4 <= ap_phi_reg_pp0_iter1_pix_142_reg_509;
        end if; 
    end process;


    ap_phi_mux_pix_143_phi_fu_502_p4_assign_proc : process(img_dout, icmp_ln632_reg_1757, or_ln637_1_reg_1830, ap_phi_reg_pp0_iter1_pix_87_reg_387, ap_phi_reg_pp0_iter1_pix_143_reg_499)
    begin
        if ((icmp_ln632_reg_1757 = ap_const_lv1_0)) then
            if ((or_ln637_1_reg_1830 = ap_const_lv1_0)) then 
                ap_phi_mux_pix_143_phi_fu_502_p4 <= ap_phi_reg_pp0_iter1_pix_87_reg_387;
            elsif ((or_ln637_1_reg_1830 = ap_const_lv1_1)) then 
                ap_phi_mux_pix_143_phi_fu_502_p4 <= img_dout(79 downto 70);
            else 
                ap_phi_mux_pix_143_phi_fu_502_p4 <= ap_phi_reg_pp0_iter1_pix_143_reg_499;
            end if;
        else 
            ap_phi_mux_pix_143_phi_fu_502_p4 <= ap_phi_reg_pp0_iter1_pix_143_reg_499;
        end if; 
    end process;


    ap_phi_mux_pix_144_phi_fu_492_p4_assign_proc : process(img_dout, icmp_ln632_reg_1757, or_ln637_1_reg_1830, ap_phi_reg_pp0_iter1_pix_88_reg_378, ap_phi_reg_pp0_iter1_pix_144_reg_489)
    begin
        if ((icmp_ln632_reg_1757 = ap_const_lv1_0)) then
            if ((or_ln637_1_reg_1830 = ap_const_lv1_0)) then 
                ap_phi_mux_pix_144_phi_fu_492_p4 <= ap_phi_reg_pp0_iter1_pix_88_reg_378;
            elsif ((or_ln637_1_reg_1830 = ap_const_lv1_1)) then 
                ap_phi_mux_pix_144_phi_fu_492_p4 <= img_dout(89 downto 80);
            else 
                ap_phi_mux_pix_144_phi_fu_492_p4 <= ap_phi_reg_pp0_iter1_pix_144_reg_489;
            end if;
        else 
            ap_phi_mux_pix_144_phi_fu_492_p4 <= ap_phi_reg_pp0_iter1_pix_144_reg_489;
        end if; 
    end process;


    ap_phi_mux_pix_145_phi_fu_482_p4_assign_proc : process(img_dout, icmp_ln632_reg_1757, or_ln637_1_reg_1830, ap_phi_reg_pp0_iter1_pix_89_reg_369, ap_phi_reg_pp0_iter1_pix_145_reg_479)
    begin
        if ((icmp_ln632_reg_1757 = ap_const_lv1_0)) then
            if ((or_ln637_1_reg_1830 = ap_const_lv1_0)) then 
                ap_phi_mux_pix_145_phi_fu_482_p4 <= ap_phi_reg_pp0_iter1_pix_89_reg_369;
            elsif ((or_ln637_1_reg_1830 = ap_const_lv1_1)) then 
                ap_phi_mux_pix_145_phi_fu_482_p4 <= img_dout(99 downto 90);
            else 
                ap_phi_mux_pix_145_phi_fu_482_p4 <= ap_phi_reg_pp0_iter1_pix_145_reg_479;
            end if;
        else 
            ap_phi_mux_pix_145_phi_fu_482_p4 <= ap_phi_reg_pp0_iter1_pix_145_reg_479;
        end if; 
    end process;


    ap_phi_mux_pix_146_phi_fu_472_p4_assign_proc : process(img_dout, icmp_ln632_reg_1757, or_ln637_1_reg_1830, ap_phi_reg_pp0_iter1_pix_90_reg_360, ap_phi_reg_pp0_iter1_pix_146_reg_469)
    begin
        if ((icmp_ln632_reg_1757 = ap_const_lv1_0)) then
            if ((or_ln637_1_reg_1830 = ap_const_lv1_0)) then 
                ap_phi_mux_pix_146_phi_fu_472_p4 <= ap_phi_reg_pp0_iter1_pix_90_reg_360;
            elsif ((or_ln637_1_reg_1830 = ap_const_lv1_1)) then 
                ap_phi_mux_pix_146_phi_fu_472_p4 <= img_dout(109 downto 100);
            else 
                ap_phi_mux_pix_146_phi_fu_472_p4 <= ap_phi_reg_pp0_iter1_pix_146_reg_469;
            end if;
        else 
            ap_phi_mux_pix_146_phi_fu_472_p4 <= ap_phi_reg_pp0_iter1_pix_146_reg_469;
        end if; 
    end process;


    ap_phi_mux_pix_147_phi_fu_462_p4_assign_proc : process(img_dout, icmp_ln632_reg_1757, or_ln637_1_reg_1830, ap_phi_reg_pp0_iter1_pix_91_reg_351, ap_phi_reg_pp0_iter1_pix_147_reg_459)
    begin
        if ((icmp_ln632_reg_1757 = ap_const_lv1_0)) then
            if ((or_ln637_1_reg_1830 = ap_const_lv1_0)) then 
                ap_phi_mux_pix_147_phi_fu_462_p4 <= ap_phi_reg_pp0_iter1_pix_91_reg_351;
            elsif ((or_ln637_1_reg_1830 = ap_const_lv1_1)) then 
                ap_phi_mux_pix_147_phi_fu_462_p4 <= img_dout(119 downto 110);
            else 
                ap_phi_mux_pix_147_phi_fu_462_p4 <= ap_phi_reg_pp0_iter1_pix_147_reg_459;
            end if;
        else 
            ap_phi_mux_pix_147_phi_fu_462_p4 <= ap_phi_reg_pp0_iter1_pix_147_reg_459;
        end if; 
    end process;

    ap_phi_reg_pp0_iter1_pix_136_reg_569 <= "XXXXXXXXXX";
    ap_phi_reg_pp0_iter1_pix_137_reg_559 <= "XXXXXXXXXX";
    ap_phi_reg_pp0_iter1_pix_138_reg_549 <= "XXXXXXXXXX";
    ap_phi_reg_pp0_iter1_pix_139_reg_539 <= "XXXXXXXXXX";
    ap_phi_reg_pp0_iter1_pix_140_reg_529 <= "XXXXXXXXXX";
    ap_phi_reg_pp0_iter1_pix_141_reg_519 <= "XXXXXXXXXX";
    ap_phi_reg_pp0_iter1_pix_142_reg_509 <= "XXXXXXXXXX";
    ap_phi_reg_pp0_iter1_pix_143_reg_499 <= "XXXXXXXXXX";
    ap_phi_reg_pp0_iter1_pix_144_reg_489 <= "XXXXXXXXXX";
    ap_phi_reg_pp0_iter1_pix_145_reg_479 <= "XXXXXXXXXX";
    ap_phi_reg_pp0_iter1_pix_146_reg_469 <= "XXXXXXXXXX";
    ap_phi_reg_pp0_iter1_pix_147_reg_459 <= "XXXXXXXXXX";

    ap_predicate_op133_read_state3_assign_proc : process(icmp_ln632_reg_1757, or_ln637_reg_1766)
    begin
                ap_predicate_op133_read_state3 <= ((or_ln637_reg_1766 = ap_const_lv1_1) and (icmp_ln632_reg_1757 = ap_const_lv1_0));
    end process;


    ap_predicate_op172_read_state4_assign_proc : process(icmp_ln632_reg_1757, or_ln637_1_reg_1830)
    begin
                ap_predicate_op172_read_state4 <= ((icmp_ln632_reg_1757 = ap_const_lv1_0) and (or_ln637_1_reg_1830 = ap_const_lv1_1));
    end process;


    ap_ready_int_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    bytePlanes_plane0_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln632_reg_1757, bytePlanes_plane0_full_n, ap_block_pp0_stage0)
    begin
        if (((icmp_ln632_reg_1757 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            bytePlanes_plane0_blk_n <= bytePlanes_plane0_full_n;
        else 
            bytePlanes_plane0_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    bytePlanes_plane0_din <= (out_pix_6_fu_1165_p5(255 downto 254) & in_pix_7_fu_1177_p4 & out_pix_6_fu_1165_p5(223 downto 0));

    bytePlanes_plane0_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln632_reg_1757, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln632_reg_1757 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            bytePlanes_plane0_write <= ap_const_logic_1;
        else 
            bytePlanes_plane0_write <= ap_const_logic_0;
        end if; 
    end process;

    cmp41_fu_985_p2 <= "1" when (signed(zext_ln632_fu_981_p1) < signed(sub40_cast_cast_reg_1686)) else "0";
    icmp_ln632_fu_976_p2 <= "1" when (x_fu_190 = trunc_ln616_2) else "0";

    img_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, img_empty_n, icmp_ln632_reg_1757, ap_predicate_op133_read_state3, ap_block_pp0_stage0, ap_block_pp0_stage2, or_ln637_1_reg_1830)
    begin
        if ((((ap_predicate_op133_read_state3 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((icmp_ln632_reg_1757 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (or_ln637_1_reg_1830 = ap_const_lv1_1)))) then 
            img_blk_n <= img_empty_n;
        else 
            img_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    img_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_predicate_op133_read_state3, ap_predicate_op172_read_state4, ap_block_pp0_stage0_11001, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_predicate_op133_read_state3 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_predicate_op172_read_state4 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            img_read <= ap_const_logic_1;
        else 
            img_read <= ap_const_logic_0;
        end if; 
    end process;

    in_pix_1_fu_1038_p4 <= ((ap_phi_reg_pp0_iter1_pix_85_reg_405 & ap_phi_reg_pp0_iter1_pix_84_reg_414) & ap_phi_reg_pp0_iter1_pix_83_reg_423);
    in_pix_2_fu_1060_p4 <= ((ap_phi_reg_pp0_iter1_pix_88_reg_378 & ap_phi_reg_pp0_iter1_pix_87_reg_387) & ap_phi_reg_pp0_iter1_pix_86_reg_396);
    in_pix_3_fu_1082_p4 <= ((ap_phi_reg_pp0_iter1_pix_91_reg_351 & ap_phi_reg_pp0_iter1_pix_90_reg_360) & ap_phi_reg_pp0_iter1_pix_89_reg_369);
    in_pix_4_fu_1111_p4 <= ((ap_phi_mux_pix_138_phi_fu_552_p4 & ap_phi_mux_pix_137_phi_fu_562_p4) & ap_phi_mux_pix_136_phi_fu_572_p4);
    in_pix_5_fu_1133_p4 <= ((ap_phi_mux_pix_141_phi_fu_522_p4 & ap_phi_mux_pix_140_phi_fu_532_p4) & ap_phi_mux_pix_139_phi_fu_542_p4);
    in_pix_6_fu_1155_p4 <= ((ap_phi_mux_pix_144_phi_fu_492_p4 & ap_phi_mux_pix_143_phi_fu_502_p4) & ap_phi_mux_pix_142_phi_fu_512_p4);
    in_pix_7_fu_1177_p4 <= ((ap_phi_mux_pix_147_phi_fu_462_p4 & ap_phi_mux_pix_146_phi_fu_472_p4) & ap_phi_mux_pix_145_phi_fu_482_p4);
    in_pix_fu_1016_p4 <= ((ap_phi_reg_pp0_iter1_pix_82_reg_432 & ap_phi_reg_pp0_iter1_pix_81_reg_441) & ap_phi_reg_pp0_iter1_pix_80_reg_450);
    or_ln637_1_fu_1004_p2 <= (icmp_ln620 or cmp41_reg_1761);
    or_ln637_2_fu_990_p2 <= (icmp_ln620 or empty);
    or_ln637_fu_994_p2 <= (or_ln637_2_fu_990_p2 or cmp41_fu_985_p2);
    out_pix_1_fu_1048_p5 <= (out_pix_fu_1026_p5(255 downto 62) & in_pix_1_fu_1038_p4 & out_pix_fu_1026_p5(31 downto 0));

    out_pix_1_out_o_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln632_reg_1757, out_pix_1_out_i, ap_block_pp0_stage0, out_pix_7_fu_1187_p5)
    begin
        if (((icmp_ln632_reg_1757 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            out_pix_1_out_o <= out_pix_7_fu_1187_p5;
        else 
            out_pix_1_out_o <= out_pix_1_out_i;
        end if; 
    end process;


    out_pix_1_out_o_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln632_reg_1757, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln632_reg_1757 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            out_pix_1_out_o_ap_vld <= ap_const_logic_1;
        else 
            out_pix_1_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    out_pix_2_fu_1070_p5 <= (out_pix_1_fu_1048_p5(255 downto 94) & in_pix_2_fu_1060_p4 & out_pix_1_fu_1048_p5(63 downto 0));
    out_pix_3_fu_1092_p5 <= (out_pix_2_fu_1070_p5(255 downto 126) & in_pix_3_fu_1082_p4 & out_pix_2_fu_1070_p5(95 downto 0));
    out_pix_4_fu_1121_p5 <= (out_pix_3_fu_1092_p5(255 downto 158) & in_pix_4_fu_1111_p4 & out_pix_3_fu_1092_p5(127 downto 0));
    out_pix_5_fu_1143_p5 <= (out_pix_4_fu_1121_p5(255 downto 190) & in_pix_5_fu_1133_p4 & out_pix_4_fu_1121_p5(159 downto 0));
    out_pix_6_fu_1165_p5 <= (out_pix_5_fu_1143_p5(255 downto 222) & in_pix_6_fu_1155_p4 & out_pix_5_fu_1143_p5(191 downto 0));
    out_pix_7_fu_1187_p5 <= (out_pix_6_fu_1165_p5(255 downto 254) & in_pix_7_fu_1177_p4 & out_pix_6_fu_1165_p5(223 downto 0));
    out_pix_fu_1026_p5 <= (out_pix_1_out_i(255 downto 30) & in_pix_fu_1016_p4);
    pix_28_out <= pix_28_fu_194;

    pix_28_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage1, icmp_ln632_fu_976_p2, ap_block_pp0_stage1_11001)
    begin
        if (((icmp_ln632_fu_976_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            pix_28_out_ap_vld <= ap_const_logic_1;
        else 
            pix_28_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    pix_29_out <= pix_29_fu_198;

    pix_29_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage1, icmp_ln632_fu_976_p2, ap_block_pp0_stage1_11001)
    begin
        if (((icmp_ln632_fu_976_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            pix_29_out_ap_vld <= ap_const_logic_1;
        else 
            pix_29_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    pix_30_out <= pix_30_fu_202;

    pix_30_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage1, icmp_ln632_fu_976_p2, ap_block_pp0_stage1_11001)
    begin
        if (((icmp_ln632_fu_976_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            pix_30_out_ap_vld <= ap_const_logic_1;
        else 
            pix_30_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    pix_318_fu_1000_p1 <= img_dout(10 - 1 downto 0);
    pix_319_fu_1106_p1 <= img_dout(10 - 1 downto 0);
    pix_31_out <= pix_31_fu_206;

    pix_31_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage1, icmp_ln632_fu_976_p2, ap_block_pp0_stage1_11001)
    begin
        if (((icmp_ln632_fu_976_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            pix_31_out_ap_vld <= ap_const_logic_1;
        else 
            pix_31_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    pix_32_out <= pix_32_fu_210;

    pix_32_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage1, icmp_ln632_fu_976_p2, ap_block_pp0_stage1_11001)
    begin
        if (((icmp_ln632_fu_976_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            pix_32_out_ap_vld <= ap_const_logic_1;
        else 
            pix_32_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    pix_33_out <= pix_33_fu_214;

    pix_33_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage1, icmp_ln632_fu_976_p2, ap_block_pp0_stage1_11001)
    begin
        if (((icmp_ln632_fu_976_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            pix_33_out_ap_vld <= ap_const_logic_1;
        else 
            pix_33_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    pix_34_out <= pix_34_fu_218;

    pix_34_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage1, icmp_ln632_fu_976_p2, ap_block_pp0_stage1_11001)
    begin
        if (((icmp_ln632_fu_976_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            pix_34_out_ap_vld <= ap_const_logic_1;
        else 
            pix_34_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    pix_35_out <= pix_35_fu_222;

    pix_35_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage1, icmp_ln632_fu_976_p2, ap_block_pp0_stage1_11001)
    begin
        if (((icmp_ln632_fu_976_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            pix_35_out_ap_vld <= ap_const_logic_1;
        else 
            pix_35_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    pix_36_out <= pix_36_fu_226;

    pix_36_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage1, icmp_ln632_fu_976_p2, ap_block_pp0_stage1_11001)
    begin
        if (((icmp_ln632_fu_976_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            pix_36_out_ap_vld <= ap_const_logic_1;
        else 
            pix_36_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    pix_37_out <= pix_37_fu_230;

    pix_37_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage1, icmp_ln632_fu_976_p2, ap_block_pp0_stage1_11001)
    begin
        if (((icmp_ln632_fu_976_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            pix_37_out_ap_vld <= ap_const_logic_1;
        else 
            pix_37_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    pix_38_out <= pix_38_fu_234;

    pix_38_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage1, icmp_ln632_fu_976_p2, ap_block_pp0_stage1_11001)
    begin
        if (((icmp_ln632_fu_976_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            pix_38_out_ap_vld <= ap_const_logic_1;
        else 
            pix_38_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    pix_39_out <= pix_39_fu_238;

    pix_39_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage1, icmp_ln632_fu_976_p2, ap_block_pp0_stage1_11001)
    begin
        if (((icmp_ln632_fu_976_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            pix_39_out_ap_vld <= ap_const_logic_1;
        else 
            pix_39_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

        sub40_cast_cast_fu_732_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub40_cast),13));

    x_6_fu_970_p2 <= std_logic_vector(unsigned(x_fu_190) + unsigned(ap_const_lv12_1));
    zext_ln632_fu_981_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(x_fu_190),13));
end behav;
